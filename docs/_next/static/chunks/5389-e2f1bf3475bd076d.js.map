{"version":3,"file":"static/chunks/5389-e2f1bf3475bd076d.js","mappings":"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","sources":["webpack://_N_E/../../node_modules/.pnpm/react-transition-group@4.4.5_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/react-transition-group/esm/config.js","webpack://_N_E/../../node_modules/.pnpm/react-transition-group@4.4.5_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/react-transition-group/esm/utils/reflow.js","webpack://_N_E/../../node_modules/.pnpm/react-transition-group@4.4.5_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/react-transition-group/esm/Transition.js"],"sourcesContent":["export default {\n  disabled: false\n};","export var forceReflow = function forceReflow(node) {\n  return node.scrollTop;\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport config from './config';\nimport { timeoutsShape } from './utils/PropTypes';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { forceReflow } from './utils/reflow';\nexport var UNMOUNTED = 'unmounted';\nexport var EXITED = 'exited';\nexport var ENTERING = 'entering';\nexport var ENTERED = 'entered';\nexport var EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\n * transitions in CSS, you'll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\n * components. It's up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from 'react-transition-group';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 1 },\n *   entered:  { opacity: 1 },\n *   exiting:  { opacity: 0 },\n *   exited:  { opacity: 0 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the \"Enter\" stage. During this stage, the component will shift from\n * its current transition state, to `'entering'` for the duration of the\n * transition and then to the `'entered'` stage once it's complete. Let's take\n * the following example (we'll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `'exiting'` to `'exited'`.\n */\n\nvar Transition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  } // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n  ;\n\n  var _proto = Transition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n\n      if (nextStatus === ENTERING) {\n        if (this.props.unmountOnExit || this.props.mountOnEnter) {\n          var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this); // https://github.com/reactjs/react-transition-group/pull/749\n          // With unmountOnExit or mountOnEnter, the enter animation should happen at the transition between `exited` and `entering`.\n          // To make the animation happen,  we have to separate each rendering and avoid being processed as batched.\n\n          if (node) forceReflow(node);\n        }\n\n        this.performEnter(mounting);\n      } else {\n        this.performExit();\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context ? this.context.isMounting : mounting;\n\n    var _ref2 = this.props.nodeRef ? [appearing] : [ReactDOM.findDOMNode(this), appearing],\n        maybeNode = _ref2[0],\n        maybeAppearing = _ref2[1];\n\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter || config.disabled) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onEnter(maybeNode, maybeAppearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(maybeNode, maybeAppearing);\n\n      _this2.onTransitionEnd(enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(maybeNode, maybeAppearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit() {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts();\n    var maybeNode = this.props.nodeRef ? undefined : ReactDOM.findDOMNode(this); // no exit animation skip right to EXITED\n\n    if (!exit || config.disabled) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onExit(maybeNode);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(maybeNode);\n\n      _this3.onTransitionEnd(timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(maybeNode);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {\n    this.setNextCallback(handler);\n    var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n    if (!node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],\n          maybeNode = _ref3[0],\n          maybeNextCallback = _ref3[1];\n\n      this.props.addEndListener(maybeNode, maybeNextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        _in = _this$props.in,\n        _mountOnEnter = _this$props.mountOnEnter,\n        _unmountOnExit = _this$props.unmountOnExit,\n        _appear = _this$props.appear,\n        _enter = _this$props.enter,\n        _exit = _this$props.exit,\n        _timeout = _this$props.timeout,\n        _addEndListener = _this$props.addEndListener,\n        _onEnter = _this$props.onEnter,\n        _onEntering = _this$props.onEntering,\n        _onEntered = _this$props.onEntered,\n        _onExit = _this$props.onExit,\n        _onExiting = _this$props.onExiting,\n        _onExited = _this$props.onExited,\n        _nodeRef = _this$props.nodeRef,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"in\", \"mountOnEnter\", \"unmountOnExit\", \"appear\", \"enter\", \"exit\", \"timeout\", \"addEndListener\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"nodeRef\"]);\n\n    return (\n      /*#__PURE__*/\n      // allows for nested Transitions\n      React.createElement(TransitionGroupContext.Provider, {\n        value: null\n      }, typeof children === 'function' ? children(status, childProps) : React.cloneElement(React.Children.only(children), childProps))\n    );\n  };\n\n  return Transition;\n}(React.Component);\n\nTransition.contextType = TransitionGroupContext;\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * A React reference to DOM element that need to transition:\n   * https://stackoverflow.com/a/51127130/4671932\n   *\n   *   - When `nodeRef` prop is used, `node` is not passed to callback functions\n   *      (e.g. `onEnter`) because user already has direct access to the node.\n   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new\n   *     `nodeRef` need to be provided to `Transition` with changed `key` prop\n   *     (see\n   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).\n   */\n  nodeRef: PropTypes.shape({\n    current: typeof Element === 'undefined' ? PropTypes.any : function (propValue, key, componentName, location, propFullName, secret) {\n      var value = propValue[key];\n      return PropTypes.instanceOf(value && 'ownerDocument' in value ? value.ownerDocument.defaultView.Element : Element)(propValue, key, componentName, location, propFullName, secret);\n    }\n  }),\n\n  /**\n   * A `function` child can be used instead of a React element. This function is\n   * called with the current transition status (`'entering'`, `'entered'`,\n   * `'exiting'`, `'exited'`), which can be used to apply context\n   * specific props to a component.\n   *\n   * ```jsx\n   * <Transition in={this.state.in} timeout={150}>\n   *   {state => (\n   *     <MyComponent className={`fade fade-${state}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * By default the child component does not perform the enter transition when\n   * it first mounts, regardless of the value of `in`. If you want this\n   * behavior, set both `appear` and `in` to `true`.\n   *\n   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop\n   * > only adds an additional enter transition. However, in the\n   * > `<CSSTransition>` component that first enter transition does result in\n   * > additional `.appear-*` classes, that way you can choose to style it\n   * > differently.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEndListener` is provided.\n   *\n   * You may specify a single timeout for all transitions:\n   *\n   * ```jsx\n   * timeout={500}\n   * ```\n   *\n   * or individually:\n   *\n   * ```jsx\n   * timeout={{\n   *  appear: 500,\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * - `appear` defaults to the value of `enter`\n   * - `enter` defaults to `0`\n   * - `exit` defaults to `0`\n   *\n   * @type {number | { enter?: number, exit?: number, appear?: number }}\n   */\n  timeout: function timeout(props) {\n    var pt = timeoutsShape;\n    if (!props.addEndListener) pt = pt.isRequired;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return pt.apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. Timeouts are still used as a fallback if provided.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: PropTypes.func\n} : {}; // Name the function so it is clearer in the documentation\n\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = UNMOUNTED;\nTransition.EXITED = EXITED;\nTransition.ENTERING = ENTERING;\nTransition.ENTERED = ENTERED;\nTransition.EXITING = EXITING;\nexport default Transition;"],"names":["disabled","forceReflow","node","scrollTop","_objectWithoutPropertiesLoose","_inheritsLoose","PropTypes","React","ReactDOM","config","timeoutsShape","TransitionGroupContext","UNMOUNTED","EXITED","ENTERING","ENTERED","EXITING","Transition","_React$Component","props","context","_this","call","parentGroup","appear","isMounting","enter","initialStatus","appearStatus","in","unmountOnExit","mountOnEnter","state","status","nextCallback","getDerivedStateFromProps","_ref","prevState","nextIn","_proto","prototype","componentDidMount","updateStatus","componentDidUpdate","prevProps","nextStatus","componentWillUnmount","cancelNextCallback","getTimeouts","timeout","exit","undefined","mounting","nodeRef","current","findDOMNode","performEnter","performExit","setState","_this2","appearing","_ref2","maybeNode","maybeAppearing","timeouts","enterTimeout","safeSetState","onEntered","onEnter","onEntering","onTransitionEnd","_this3","onExited","onExit","onExiting","cancel","nextState","callback","setNextCallback","_this4","active","event","handler","doesNotHaveTimeoutOrListener","addEndListener","setTimeout","_ref3","maybeNextCallback","render","_this$props","children","_in","_mountOnEnter","_unmountOnExit","_appear","_enter","_exit","_timeout","_addEndListener","_onEnter","_onEntering","_onEntered","_onExit","_onExiting","_onExited","_nodeRef","childProps","createElement","Provider","value","cloneElement","Children","only","Component","contextType","propTypes","process","shape","Element","any","propValue","key","componentName","location","propFullName","secret","instanceOf","ownerDocument","defaultView","oneOfType","func","isRequired","element","bool","pt","_len","arguments","length","args","Array","_key","apply","concat","noop","defaultProps"],"sourceRoot":"","ignoreList":[0,1,2]}