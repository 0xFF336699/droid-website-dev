{"version":3,"file":"static/chunks/pages/listen-editing-market-3df76f69e352b4bc.js","mappings":"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","sources":["webpack://_N_E/?bf6c","webpack://_N_E/../../node_modules/.pnpm/react-i18next@15.1.4_i18next@24.1.0_typescript@5.8.2__react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/react-i18next/dist/es/index.js","webpack://_N_E/../../../../src/components/app/AppShell.tsx","webpack://_N_E/../../../../src/components/page/PageContent.tsx","webpack://_N_E/../../../../src/components/page/AndroidPageContent.tsx","webpack://_N_E/./src/components/page/listen-editing-market/listen-editing-market.tsx","webpack://_N_E/./src/pages/listen-editing-market/index.tsx","webpack://_N_E/../../../src/mc/static-model.ts","webpack://_N_E/../../../../src/components/motion/page-transition.tsx","webpack://_N_E/../../../../src/components/app/PageShell.tsx","webpack://_N_E/../../../../src/components/appbar/AppBar.tsx"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/listen-editing-market\",\n      function () {\n        return require(\"private-next-pages/listen-editing-market/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/listen-editing-market\"])\n      });\n    }\n  ","export * from \"C:\\\\work\\\\android-droid\\\\html\\\\website-2024-12\\\\node_modules\\\\.pnpm\\\\react-i18next@15.1.4_i18next@24.1.0_typescript@5.8.2__react-dom@19.0.0_react@19.0.0__react@19.0.0\\\\node_modules\\\\react-i18next\\\\dist\\\\es\\\\index.js\"","'use client'\r\nimport { i18n, i18nInit, IPageScrollPosition, StorePageContext, StorePageDynamicContext, toProxy, watchUpdates, storeUtils } from \"@fanfanlo\";\r\nimport { useRouter } from \"next/router\";\r\nimport { PropsWithChildren, useEffect } from \"react\";\r\nimport { I18nextProvider } from \"react-i18next\";\r\n\r\n\r\ni18nInit()\r\n\r\nexport function AppShell({ children }: PropsWithChildren) {\r\n  const router = useRouter();\r\n  const scrollKey = 'scrollPositionInfo'\r\n  const href = window.location.href.split(\"#\")[0]\r\n  const dynamicKey = `dynamic-${href}`\r\n  const s = storeUtils.namespace(dynamicKey);\r\n  let o: Record<string, unknown>|undefined = s.read(dynamicKey)\r\n  if (!o) {\r\n    o = {}\r\n    s.write(dynamicKey, o)\r\n  }\r\n  o = toProxy(o)\r\n  useEffect(() => {\r\n\r\n    router.beforePopState((state) => {\r\n      s.clearAll()\r\n      return true\r\n    })\r\n  })\r\n  useEffect(() => {\r\n    s.write(dynamicKey, o)\r\n    return watchUpdates(o, () => {\r\n      s.write(dynamicKey, o)\r\n    })\r\n  }, [])\r\n  useEffect(() => {\r\n    const info = (s.read(scrollKey) || { x: 0, y: 0 }) as IPageScrollPosition\r\n    // console.log('app shell scroll info info = ', info)\r\n    if (info.x == 0 && info.y == 0) {\r\n      listenScroll()\r\n    } else {\r\n      window.requestAnimationFrame(() => {\r\n        window.scrollTo(info.x, info.y)\r\n        listenScroll()\r\n      })\r\n    }\r\n    function onScroll(e: Event) {\r\n      // console.log('app shell on scroll', { x: window.scrollX, y: window.scrollY })\r\n      s.write(scrollKey, { x: window.scrollX, y: window.scrollY })\r\n    }\r\n    function listenScroll() {\r\n      window.addEventListener('scroll', onScroll)\r\n    }\r\n\r\n    function unsub() {\r\n      window.removeEventListener('scroll', onScroll)\r\n    }\r\n    return unsub\r\n  });\r\n  return (\r\n    <StorePageContext value={s}>\r\n      <StorePageDynamicContext value={o}>\r\n\r\n        <I18nextProvider i18n={i18n}>\r\n          {children}\r\n        </I18nextProvider>\r\n      </StorePageDynamicContext>\r\n    </StorePageContext>\r\n  )\r\n}","import { Box, Button, Container } from '@mui/material';\r\nimport { createContext, PropsWithChildren, useContext, useEffect } from 'react';\r\nimport { ITitleI18nConf, ITitleI18nNsConf, ITitleI18nTitleConf } from '.';\r\nimport { isBuild, isDev, isServer, loadI18nValue, publicRuntimeConfig } from '@fanfanlo';\r\nimport { read } from 'fs';\r\nimport { useTranslation } from '@fanfanlo';\r\n\r\n\r\nfunction Reload(){\r\n  if(!isDev)return <>  </>\r\n  const {t} = useTranslation(\"app-ui/components/page/content\")\r\n  return(\r\n    <Box>\r\n      <Button onClick={() => {window.location.reload()}}>{t(\"PageContent.refresh\")}</Button>\r\n      {new Date().toLocaleString()}\r\n    </Box>\r\n  )\r\n}\r\n\r\nconst ScrollP = createContext({ x: 0, y: 0 });\r\nlet index = 0;\r\nexport default function PageContent({ children, titleConf, reload }: {titleConf?:ITitleI18nConf, reload?: boolean} & PropsWithChildren) {\r\n  index++;\r\n  const scroll = useContext(ScrollP);\r\n  const clazz = `${Date.now() + Math.random() * Date.now()}`;\r\n  useEffect(()=>{\r\n    async function loadTitle(){\r\n      if(!titleConf)return\r\n      let title = titleConf.title\r\n      if(titleConf.ns){\r\n        title = await loadI18nValue(titleConf.ns, titleConf.key || \"content.title\")\r\n      }\r\n      if(!title)return\r\n      document.title = title\r\n    }\r\n    loadTitle()\r\n  }, [])\r\n  useEffect(() => {\r\n    const container = document.getElementsByClassName(clazz)[0];\r\n    if (!container) return;\r\n    container.scrollTop = scroll.y;\r\n    const onScroll = () => {\r\n      var scrollTop = container.scrollTop;\r\n      scroll.y = scrollTop;\r\n    };\r\n    container.removeEventListener('scroll', onScroll);\r\n    container.addEventListener('scroll', onScroll, { passive: true });\r\n    return () => container.removeEventListener('scroll', onScroll);\r\n  }, [clazz, scroll]);\r\n  return (\r\n\r\n    <Container className={clazz} sx={{ flexGrow: 1, overflow: 'auto', padding: \"0px\" }}>\r\n      <Box>\r\n        {(reload || (reload == undefined)) && <Reload />}\r\n        {children}\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","import { PropsWithChildren } from \"react\";\r\nimport PageContent from \"./PageContent\";\r\nimport { ITitleI18nConf } from \".\";\r\nexport default function AndroidPageContent({ children, titleConf, reload }: {titleConf?:ITitleI18nConf, reload?: boolean} & PropsWithChildren)  {\r\n    return (\r\n        <PageContent titleConf={titleConf} reload={reload}>\r\n            {children}\r\n        </PageContent>\r\n    )\r\n}\r\n","/**\n 帮我实现页面加载后通过store2用改文件的路径命名的namespace获取的数据\n 该数据记录了socket的地址，和一个MarketList的列表。\n 获取到该列表后要展示该列表，组件要单独分离出来，而不是在一个大的组件里嵌套生成子组件。\n socket链接后要发起请求，请求同步已有监听的Imarket.name的数据，同步后把已有的数据替换掉。\n 不要删除该注释\n\n */\nimport { storeUtils } from '@fanfanlo';\nimport { ExpandLess, ExpandMore, InsertDriveFileOutlined as FileIcon } from '@mui/icons-material'; // Example icons\nimport {\n    Box,\n    Chip,\n    CircularProgress, Collapse,\n    Container,\n    Divider,\n    List, ListItem, ListItemText,\n    Paper,\n    Typography\n} from '@mui/material';\nimport React, { useEffect, useRef, useState } from 'react';\n\n// --- Interfaces (aligned with server + component needs) ---\ninterface IMarketFile {\n    type: \"js\" | \"css\" | \"html\" | string; // Match server type, allow string for flexibility\n    path: string;\n    content: string; // This will hold the actual file content from WebSocket\n}\n\ninterface IMarket {\n    name: string;\n    files: IMarketFile[];\n    html?: string; // Optional: if you want to store/use the HTML from server\n}\n\ntype MarketList = IMarket[];\n\ninterface IStoredData {\n    socketAddr: string;\n    marketList: { name: string }[]; // Store only names initially, content comes from WS\n}\n\n// Note: Duplicate comments and interface definitions removed for brevity\n\n// --- MUI Component for Displaying Market File ---\ninterface MarketFileDisplayProps {\n    file: IMarketFile;\n}\n\nconst MarketFileDisplay: React.FC<MarketFileDisplayProps> = ({ file }) => {\n    const [contentOpen, setContentOpen] = useState(false);\n\n    const toggleContent = () => setContentOpen(!contentOpen);\n\n    return (\n        <>\n            <ListItem sx={{ pl: 4, display: 'flex', alignItems: 'center' }}>\n                 <FileIcon sx={{ mr: 1, fontSize: '1rem', flexShrink: 0 }} />\n                 <ListItemText\n                    primary={file.path}\n                    secondary={`Type: ${file.type}`}\n                    primaryTypographyProps={{ variant: 'body2', noWrap: true, flexGrow: 1, mr:1 }}\n                    secondaryTypographyProps={{ variant: 'caption' }}\n                 />\n                 <Chip label={contentOpen ? 'Hide Content' : 'Show Content'} size=\"small\" onClick={toggleContent} disabled={!file.content} />\n            </ListItem>\n            <Collapse in={contentOpen} timeout=\"auto\" unmountOnExit>\n                 <Box sx={{ pl: 6, pr: 2, pb: 1 }}>\n                    <Paper elevation={1} sx={{ p: 1, maxHeight: '150px', overflowY: 'auto', background: '#f5f5f5' }}>\n                        <Typography component=\"pre\" variant=\"caption\" sx={{ whiteSpace: 'pre-wrap', wordBreak: 'break-all' }}>\n                            {file.content || '(Content not loaded or empty)'}\n                        </Typography>\n                    </Paper>\n                 </Box>\n            </Collapse>\n        </>\n    );\n};\n\n\n// --- MUI Component for Displaying Market Item ---\ninterface MarketItemDisplayProps {\n    market: IMarket;\n}\n\nconst MarketItemDisplay: React.FC<MarketItemDisplayProps> = ({ market }) => {\n    const [open, setOpen] = useState(true);\n\n    const handleClick = () => {\n        setOpen(!open);\n    };\n\n    return (\n        <>\n            <ListItem button onClick={handleClick}>\n                <ListItemText primary={market.name} primaryTypographyProps={{ fontWeight: 'bold' }} />\n                {/* Always show expand icon if files array exists, even if empty initially */} \n                {market.files ? (open ? <ExpandLess /> : <ExpandMore />) : null} \n            </ListItem>\n            {/* Render Collapse if market.files array exists */} \n            {market.files && (\n                 <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                    <List component=\"div\" disablePadding>\n                        {market.files.length > 0 ? (\n                            market.files.map((file, index) => (\n                                // Use a more specific key including path\n                                <MarketFileDisplay key={`${market.name}-file-${index}-${file.path}`} file={file} />\n                            ))\n                        ) : (\n                             <ListItem sx={{ pl: 4 }}>\n                                <ListItemText primary=\"(Waiting for file data...)\" primaryTypographyProps={{ fontStyle: 'italic', variant: 'body2' }}/>\n                             </ListItem>\n                        )}\n                    </List>\n                 </Collapse>\n            )}\n        </>\n    );\n};\n\n\n// --- MUI Component for Displaying Market List ---\ninterface MarketListDisplayProps {\n    marketList: MarketList;\n    isLoading: boolean; \n}\n\nconst MarketListDisplay: React.FC<MarketListDisplayProps> = ({ marketList, isLoading }) => {\n    if (isLoading) {\n        return (\n            <Box sx={{ display: 'flex', justifyContent: 'center', my: 3 }}>\n                <CircularProgress />\n            </Box>\n        );\n    }\n\n    if (!marketList || marketList.length === 0) {\n        return <Typography sx={{ mt: 2, fontStyle: 'italic' }}>No markets configured or found.</Typography>;\n    }\n\n    return (\n        <Paper elevation={2} sx={{ mt: 2 }}>\n             <List component=\"nav\" aria-labelledby=\"nested-list-subheader\">\n                {marketList.map((market) => (\n                    <MarketItemDisplay key={market.name} market={market} />\n                ))}\n            </List>\n        </Paper>\n    );\n};\n\n\n// --- Main MUI Component ---\n\nconst STORE_NAMESPACE = 'listen-editing-market';\n\nexport function ListenEditingMarkets() {\n    const [socketAddr, setSocketAddr] = useState<string | null>(\"ws://localhost:8080\");\n    const [marketList, setMarketList] = useState<MarketList>([]); \n    const [isConnected, setIsConnected] = useState<boolean>(false);\n    const [isLoading, setIsLoading] = useState<boolean>(true); \n    const ws = useRef<WebSocket | null>(null);\n    const initialMarketNames = useRef<string[]>([]);\n\n    // 1. Fetch initial config from store2\n    useEffect(() => {\n        setIsLoading(true);\n        // const marketStore = store.namespace(STORE_NAMESPACE);\n        const marketStore = storeUtils.namespace(STORE_NAMESPACE);\n        const storedData = marketStore.read('marketData') as IStoredData | null;\n\n        if (storedData) {\n            console.log(`[${STORE_NAMESPACE}] Fetched initial config:`, storedData);\n            setSocketAddr(storedData.socketAddr || \"ws://localhost:8080\"); // Fallback if addr is null/undefined\n            initialMarketNames.current = storedData.marketList?.map(m => m.name) || [];\n            setMarketList(initialMarketNames.current.map(name => ({ name, files: [] })));\n        } else {\n            console.warn(`[${STORE_NAMESPACE}] No initial config found in store2.`);\n            setMarketList([]);\n            initialMarketNames.current = [];\n        }\n        setIsLoading(false);\n    }, []);\n\n    // 2. Manage WebSocket connection and communication\n    useEffect(() => {\n        if (!socketAddr) {\n            console.log(`[${STORE_NAMESPACE}] No socket address.`);\n            setIsConnected(false);\n            return;\n        }\n\n        if (ws.current) {\n            ws.current!.close();\n        }\n\n        console.log(`[${STORE_NAMESPACE}] Attempting to connect: ${socketAddr}`);\n        ws.current = new WebSocket(socketAddr);\n        setIsConnected(false);\n\n        ws.current!.onopen = () => {\n            console.log(`[${STORE_NAMESPACE}] WebSocket connected.`);\n            setIsConnected(true);\n            // 3. Request ALL market data from the server\n            if (ws.current?.readyState === WebSocket.OPEN) {\n                console.log(`[${STORE_NAMESPACE}] Requesting all market data from server.`);\n                const request = JSON.stringify({ action: 'getAllMarkets' });\n                ws.current.send(request);\n            } else {\n                console.warn(`[${STORE_NAMESPACE}] WebSocket not open when trying to send getAllMarkets request.`);\n            }\n        };\n\n        ws.current.onmessage = (event) => {\n            try {\n                const message = JSON.parse(event.data.toString());\n                console.log(`[${STORE_NAMESPACE}] Received:`, message.type, message.marketName || '');\n\n                setMarketList(currentList => {\n                    // Use structuredClone for safe deep copy and modification\n                    let updatedList = structuredClone(currentList);\n\n                    // Handle response containing all market data\n                    if (message.type === 'allMarketData' && Array.isArray(message.markets)) {\n                        console.log(`[${STORE_NAMESPACE}] Received all market data. Replacing local list.`);\n                        // Replace the entire list with the data from the server\n                        updatedList = message.markets.map((m: any) => ({\n                            name: m.name,\n                            files: m.files?.map((f: any) => ({ ...f, content: f.content || '' })) || [],\n                            html: m.html\n                        }));\n                    } else if (message.type === 'marketData' && message.marketName) {\n                        const marketIdx = updatedList.findIndex(m => m.name === message.marketName);\n                        if (marketIdx !== -1) {\n                            updatedList[marketIdx].files = message.files?.map((f: any) => ({ ...f, content: f.content || '' })) || []; // Ensure content is string\n                            updatedList[marketIdx].html = message.html;\n                        } else {\n                            // If server sent data for a market we didn't know about (e.g., from getAllMarkets), add it\n                            console.log(`[${STORE_NAMESPACE}] Received marketData for a new market: ${message.marketName}. Adding to list.`);\n                            updatedList.push({\n                                name: message.marketName,\n                                files: message.files?.map((f: any) => ({ ...f, content: f.content || '' })) || [],\n                                html: message.html\n                            });\n                            // Sort alphabetically? (Optional)\n                            // updatedList.sort((a, b) => a.name.localeCompare(b.name));\n                        }\n                    } else if (message.type === 'fileUpdate' && message.marketName && message.path) {\n                        const marketIdx = updatedList.findIndex(m => m.name === message.marketName);\n                        if (marketIdx !== -1) {\n                            const fileIdx = updatedList[marketIdx].files.findIndex(f => f.path === message.path);\n                            if (fileIdx !== -1) {\n                                updatedList[marketIdx].files[fileIdx].content = message.content || ''; // Ensure content is string\n                                updatedList[marketIdx].files[fileIdx].type = message.fileType;\n                            } else {\n                                console.warn(`[${STORE_NAMESPACE}] FileUpdate for unknown file: ${message.marketName}/${message.path}`);\n                                // Optionally add the file if it didn't exist in the initial marketData\n                                // updatedList[marketIdx].files.push({ type: message.fileType, path: message.path, content: message.content || '' });\n                            }\n                        } else {\n                             console.warn(`[${STORE_NAMESPACE}] FileUpdate for unknown market: ${message.marketName}`);\n                        }\n                    } else if (message.type === 'error') {\n                         console.error(`[${STORE_NAMESPACE}] Server error:`, message.message);\n                         // TODO: Show error feedback (e.g., Snackbar)\n                    } else {\n                         console.log(`[${STORE_NAMESPACE}] Unhandled message type:`, message.type);\n                    }\n                    return updatedList;\n                });\n\n            } catch (error) {\n                console.error(`[${STORE_NAMESPACE}] Error processing message:`, error, event.data);\n            }\n        };\n\n        ws.current.onerror = (error) => {\n            console.error(`[${STORE_NAMESPACE}] WebSocket error:`, error);\n            setIsConnected(false);\n        };\n\n        ws.current.onclose = (event) => {\n            console.log(`[${STORE_NAMESPACE}] WebSocket disconnected. Code: ${event.code}, Reason: ${event.reason}`);\n            setIsConnected(false);\n            // Decide if you want to clear data or show stale\n            // setMarketList(current => current.map(m => ({...m, files: m.files.map(f => ({...f, content: '(Disconnected)'})) })));\n        };\n\n        // Cleanup\n        return () => {\n            if (ws.current) {\n                console.log(`[${STORE_NAMESPACE}] Closing WebSocket on unmount.`);\n                ws.current.onopen = null;\n                ws.current.onmessage = null;\n                ws.current.onerror = null;\n                ws.current.onclose = null;\n                ws.current.close();\n                ws.current = null;\n            }\n        };\n    }, [socketAddr]);\n\n    return (\n        <Container maxWidth=\"md\" sx={{ py: 3 }}>\n            <Typography variant=\"h5\" gutterBottom component=\"div\">\n                Market Watcher Status\n            </Typography>\n            <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n                 <Chip\n                     label={isConnected ? 'Connected' : (socketAddr ? 'Connecting...' : 'Disconnected')}\n                     color={isConnected ? 'success' : (socketAddr ? 'warning' : 'error')}\n                     size=\"small\"\n                     sx={{ mr: 2 }}\n                 />\n                 <Typography variant=\"body2\" color=\"textSecondary\">\n                     {socketAddr || 'No address configured'}\n                 </Typography>\n            </Box>\n            <Divider sx={{ mb: 2 }}/>\n\n            <Typography variant=\"h6\" gutterBottom component=\"div\">\n                 Watched Markets\n            </Typography>\n            {/* Pass loading=true only if we are loading initial config AND have no markets yet */} \n            <MarketListDisplay marketList={marketList} isLoading={isLoading && marketList.length === 0} />\n        </Container>\n    );\n}","import { AppbarContainer, AppShell } from \"@app/ui\";\r\nimport {Dispatcher} from \"@fanfanlo\"\r\nimport { ListenEditingMarkets } from \"@src/components/page/listen-editing-market/listen-editing-market\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport default function ListenEditingMarketsPage(){\r\n    const dispatcher = new Dispatcher()\r\n    useEffect(()=>{\r\n        const socket = new WebSocket('ws://localhost:8080');\r\n\r\n    socket.onopen = () => {\r\n      console.log('Connected to the WebSocket server');\r\n    };\r\n\r\n    socket.onmessage = (event) => {\r\n      const data = JSON.parse(event.data);\r\n\r\n      if (data.type === 'file-changed') {\r\n        console.log(`File changed: ${data.file}`);\r\n\r\n        // 在这里可以处理文件变更逻辑，像是刷新 iframe 或其他\r\n        \r\n      }\r\n    };\r\n\r\n    socket.onerror = (error) => {\r\n      console.error('WebSocket error:', error);\r\n    };\r\n\r\n    socket.onclose = () => {\r\n      console.log('WebSocket connection closed');\r\n    };\r\n    }, [])\r\n    return(\r\n        <AppShell>\r\n            <AppbarContainer appbarProps={{\r\n                title:\"edit\",\r\n                back:true,\r\n                backDispatcher:dispatcher\r\n            }}>\r\n                <ListenEditingMarkets />\r\n            </AppbarContainer>\r\n        </AppShell>\r\n    )\r\n}","import { Dispatcher } from \"@fanfanlo\"\r\nimport { DispatcherUnsubscribe } from \"@fanfanlo\"\r\n\r\nconst dipsatcher = new Dispatcher()\r\ninterface IStaticModel{\r\n    dipsatcher:Dispatcher\r\n    screenLockCount:number\r\n    switchPage:()=>void\r\n    listenSwitchPage:(callback:()=>void)=>DispatcherUnsubscribe \r\n}\r\nexport const staticModel:IStaticModel = {\r\n    dipsatcher,\r\n    screenLockCount:0,\r\n    switchPage:async()=>{\r\n        dipsatcher.dispatch(\"switchPage\")\r\n        staticModel.screenLockCount = 0\r\n    },\r\n    listenSwitchPage:(callback:()=>void)=>{\r\n        return dipsatcher.addListener(\"switchPage\",callback)\r\n    }\r\n}   \r\n","import { PropsWithChildren } from \"react\";\r\nimport { AnimatePresence, motion } from \"framer-motion\";\r\nimport { useRouter } from \"next/router\";\r\n\r\n\r\nexport function PageTransition({ children }: PropsWithChildren) {\r\n    const router = useRouter()\r\n    return (\r\n\r\n        <AnimatePresence mode=\"sync\">\r\n            <motion.div\r\n                key={router.route}\r\n                initial={{ opacity: 0, y: 10 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                exit={{ opacity: 0, y: -110 }}\r\n                transition={{ duration: 0.3 }}\r\n            >\r\n                {children}\r\n            </motion.div>\r\n        </AnimatePresence>\r\n    )\r\n}","import { staticModel } from \"@app/static\";\r\nimport { Box } from \"@mui/material\";\r\nimport { useEffect } from \"react\";\r\nimport { PageTransition } from \"../motion\";\r\nlet idCount = 0\r\nexport function PageShell({children}:{children:React.ReactNode}){\r\n    const id = `app-shell-${idCount++}`\r\n    useEffect(()=>{\r\n        const box = document.querySelector(`#${id}`)\r\n        const unlisten = staticModel.listenSwitchPage(()=>{\r\n            if(!box)return\r\n        })\r\n        if(!box)return\r\n        box.addEventListener(\"click\",(e)=>{\r\n            if(staticModel.screenLockCount == 0)return\r\n            e.stopPropagation()\r\n            e.preventDefault()\r\n        })\r\n        return ()=>{\r\n            unlisten()\r\n        }\r\n    },[])\r\n    return (\r\n        <Box id={id}>\r\n            <PageTransition>\r\n                {children}  \r\n            </PageTransition>\r\n        </Box>\r\n    )\r\n}\r\n","import { AppBar, Box, Container, CssBaseline, Fab, Fade, Slide, Toolbar, Typography, useScrollTrigger } from \"@mui/material\";\r\nimport { PropsWithChildren, ReactNode } from \"react\";\r\n// import {AndroidPageContent} from \"../../\";\r\nimport { browserHistoryUtils, IDispatcher } from \"@fanfanlo\";\r\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\r\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\r\nimport * as React from \"react\";\r\nimport { useRouter } from \"next/router\";\r\nimport { PageShell } from \"../app/PageShell\";\r\nimport shadows from \"@mui/material/styles/shadows\";\r\nimport AndroidPageContent from \"../page/AndroidPageContent\";\r\nimport { IAppBarBackAskEvent } from \"@app/static\";\r\nimport { ITitleI18nConf } from \"../page\";\r\ninterface Props {\r\n    /**\r\n     * Injected by the documentation to work in an iframe.\r\n     * You won't need it on your project.\r\n     */\r\n    window?: () => Window;\r\n    children?: React.ReactElement<unknown>;\r\n}\r\n\r\nfunction HideOnScroll(props: Props) {\r\n    const { children, window } = props;\r\n    // Note that you normally won't need to set the window ref as useScrollTrigger\r\n    // will default to window.\r\n    // This is only being set here because the demo is in an iframe.\r\n    const trigger = useScrollTrigger({\r\n        target: window ? window() : undefined,\r\n    });\r\n\r\n    return (\r\n        <Slide appear={false} direction=\"down\" in={!trigger}>\r\n            {children ?? <div />}\r\n        </Slide>\r\n    );\r\n}\r\nexport interface IAppbarProps extends PropsWithChildren {\r\n    title: ReactNode\r\n    back: boolean\r\n    backHandler?: () => boolean\r\n    backDispatcher?:IDispatcher\r\n}\r\nexport function Appbar({ title }: { title: ReactNode } & PropsWithChildren) {\r\n    return (\r\n\r\n        <AppBar color={\"inherit\"}>\r\n            <Toolbar>\r\n                <Typography variant=\"h6\" component=\"div\">\r\n                    {title}\r\n                </Typography>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\ninterface IAppbarContainerProps extends PropsWithChildren {\r\n    appbarProps: IAppbarProps\r\n    titleConf?:ITitleI18nConf\r\n    reload?: boolean\r\n}\r\n\r\n// export interface IAppBarBackAskEvent{\r\n//     defaultPrevented:boolean\r\n// }\r\n\r\nfunction ScrollTop(props: Props) {\r\n    const { children, window } = props;\r\n    // Note that you normally won't need to set the window ref as useScrollTrigger\r\n    // will default to window.\r\n    // This is only being set here because the demo is in an iframe.\r\n    const trigger = useScrollTrigger({\r\n        target: window ? window() : undefined,\r\n        disableHysteresis: true,\r\n        threshold: 100,\r\n    });\r\n\r\n    const handleClick = (event: React.MouseEvent<HTMLDivElement>) => {\r\n        const anchor = (\r\n            (event.target as HTMLDivElement).ownerDocument || document\r\n        ).querySelector('#back-to-top-anchor');\r\n\r\n        if (anchor) {\r\n            anchor.scrollIntoView({\r\n                block: 'center',\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Fade in={trigger}>\r\n            <Box data-id=\"content-scroll-top-button\"\r\n                onClick={handleClick}\r\n                role=\"presentation\"\r\n                sx={{ position: 'fixed', bottom: 16, right: 16 }}\r\n            >\r\n                {children}\r\n            </Box>\r\n        </Fade>\r\n    );\r\n}\r\nexport function AppbarContainer(props: IAppbarContainerProps) {\r\n    const { children, appbarProps, titleConf, reload } = props;\r\n    const router = useRouter()\r\n    function handleBack(){\r\n        // 本想抽象成底层一个方法，但是考虑了一下router需要注入或者是一个callback，似乎像现在这样判断一下event也可以。回头继续观察一下吧。\r\n        const event = browserHistoryUtils.askHistoryBack()\r\n        if(event.defaultPrevented)return\r\n        if(appbarProps.backDispatcher){\r\n            const e:IAppBarBackAskEvent = {defaultPrevented:false}\r\n            appbarProps.backDispatcher.dispatch('back',e)\r\n            if(e.defaultPrevented)return\r\n        }\r\n        router.back()\r\n    }\r\n    return (\r\n        <PageShell>\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n            <HideOnScroll {...props}>\r\n                <AppBar color=\"inherit\">\r\n                    <Toolbar>\r\n                        <KeyboardArrowLeft onClick={handleBack} />\r\n                        {appbarProps.title}\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </HideOnScroll>\r\n            <Toolbar id=\"back-to-top-anchor\" />\r\n            <Container sx={{padding:\"0\", marginTop:\"17px\"}}>\r\n                <AndroidPageContent titleConf={titleConf} reload={reload}>\r\n                    {children}\r\n                </AndroidPageContent>\r\n            </Container>\r\n\r\n            <ScrollTop {...props}>\r\n                <Fab size=\"small\" aria-label=\"scroll back to top\">\r\n                    <KeyboardArrowUpIcon />\r\n                </Fab>\r\n            </ScrollTop>\r\n        </React.Fragment>\r\n        </PageShell>\r\n    );\r\n}\r\n"],"names":["storeUtils","ExpandLess","ExpandMore","InsertDriveFileOutlined","FileIcon","Box","Chip","CircularProgress","Collapse","Container","Divider","List","ListItem","ListItemText","Paper","Typography","React","useEffect","useRef","useState","MarketFileDisplay","file","contentOpen","setContentOpen","toggleContent","sx","pl","display","alignItems","mr","fontSize","flexShrink","primary","path","secondary","type","primaryTypographyProps","variant","noWrap","flexGrow","secondaryTypographyProps","label","size","onClick","disabled","content","in","timeout","unmountOnExit","pr","pb","elevation","p","maxHeight","overflowY","background","component","whiteSpace","wordBreak","MarketItemDisplay","market","open","setOpen","handleClick","button","name","fontWeight","files","disablePadding","length","map","index","fontStyle","MarketListDisplay","marketList","isLoading","justifyContent","my","mt","aria-labelledby","STORE_NAMESPACE","ListenEditingMarkets","socketAddr","setSocketAddr","setMarketList","isConnected","setIsConnected","setIsLoading","ws","initialMarketNames","marketStore","namespace","storedData","read","console","log","current","m","warn","close","WebSocket","onopen","readyState","OPEN","request","JSON","stringify","action","send","onmessage","event","message","parse","data","toString","marketName","currentList","updatedList","structuredClone","Array","isArray","markets","f","html","marketIdx","findIndex","push","fileIdx","fileType","error","onerror","onclose","code","reason","maxWidth","py","gutterBottom","mb","color","AppbarContainer","AppShell","Dispatcher","ListenEditingMarketsPage","dispatcher","socket","appbarProps","title","back","backDispatcher"],"sourceRoot":"","ignoreList":[1]}