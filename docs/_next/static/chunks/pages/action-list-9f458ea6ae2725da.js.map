{"version":3,"file":"static/chunks/pages/action-list-9f458ea6ae2725da.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;AACqC;AAE9B,MAAMC,yDAA2CD,uBAAaA,CAAiC,CAAC,GAAqC;AAGrI,MAAME,gDAAkCF,uBAAaA,CAA4B,CAAC,GAAgC;;;;;;ACN1E;AACb;AACQ;AAC2D;AAG5C;AAIzD,SAASQ,KAAK,KAAwC;QAAxC,EAAEC,IAAI,EAAkC,GAAxC;IACV,MAAM,EAAEC,CAAC,EAAE,GAAGJ,sBAAcA,CAACG,KAAKE,MAAM;IACxC,MAAMC,SAASP,oBAAUA,CAACJ,wCAAwCA;IAClE,qBACI,oBAACE,kBAAGA;QAACU,IAAI;YAAEC,OAAO;YAAQC,YAAY;YAAQC,SAAS;YAAOC,iBAAiB;QAAU;kBACrF,kCAACb,yBAAUA;sBACP,kCAACK,KAAKS,UAAU;gBAACC,OAAOP;gBAAQQ,IAAIX,KAAKW,EAAE;gBAAEX,MAAMA;0BAC9CC,EAAED,KAAKY,OAAO;;;;AAOnC;AAEA,SAASC,MAAM,KAA2C;QAA3C,EAAEC,KAAK,EAAoC,GAA3C;IACX,MAAM,EAAEb,CAAC,EAAE,GAAGJ,sBAAcA,CAACiB,MAAMZ,MAAM;IACzC,qBACI,qBAACR,kBAAGA;QAACU,IAAI;YAAEC,OAAO;QAAO;;0BACrB,oBAACX,kBAAGA;gBAACU,IAAI;oBAAEC,OAAO;oBAAQG,iBAAiB;oBAAWD,SAAS;gBAAM;0BACjE,kCAACQ;8BAAMd,EAAEa,MAAMF,OAAO;;;YAEzBE,MAAME,KAAK,CAACC,GAAG,CAACC,CAAAA;gBACb,qBACI,oBAACnB;oBAAyBC,MAAMkB;mBAArBA,OAAOhB,MAAM;YAEhC;;;AAGZ;AACA,SAASiB;IACL,MAAMC,SAASxB,oBAAUA,CAACH,+BAA+BA;IACzD,qBACI,oBAACC,kBAAGA;QAACU,IAAI;YAAEC,OAAO;QAAO;kBACpBe,OAAOH,GAAG,CAAC,CAACH,sBACT,oBAACD;gBAAyBC,OAAOA;eAArBA,MAAMZ,MAAM;;AAIxC;AAEA,SAASmB;IACL,qBACI,oBAAC3B,kBAAGA;kBACA,kCAACyB;;AAGb;AAEO,SAASG,0BAA0B,KAAyL;QAAzL,EAAEF,MAAM,EAAEG,KAAK,EAAEC,gBAAgB,EAAEC,SAAS,EAA6I,GAAzL;IACtC,qBACI,oBAACjC,wCAAwCA;QAACkC,OAAOF;kBAC7C,kCAAC/B,+BAA+BA;YAACiC,OAAON;sBACxC,kCAACtB,6BAAeA;gBAAC6B,aAAa;oBAC1BJ,qBAAO,oBAAC5B,yBAAUA;kCACb4B;;oBAELK,MAAM;gBACV;gBACAH,WAAWA;0BACX,kCAACJ;;;;AAKb;;;;;;;;;AC3EA;AACA;AACA;AACA,eAAe,mBAAO,CAAC,KAA0C;AACjE;AACA;AACA,OAAO,KAAU,EAAE,EAId;AACL;;;;;;;;;;;;;;;;;;;;ACX2C;AACqC;AACsC;AAC9E;AACL;AAEpB,SAASW;IACtB,MAAMC,SAASH,sDAASA;IACxB,MAAM,EAAE7B,CAAC,EAAE,GAAGJ,yDAAcA,CAAC;IAC7B,qBACE,uDAACkC,sDAAQA;kBACP,qEAACT,yIAAyBA;YAACF,QAAQS,mGAAgBA;YAAEN,OAAOtB,EAAE;YAAkBuB,kBAAkBS,OAAOvB,KAAK;YAAoCe,WAAW;gBAACF,OAAMtB,EAAE;YAAgB;;;AAG5L","sources":["webpack://_N_E/./src/components/trigger-list-action-list-common/context.tsx","webpack://_N_E/./src/components/trigger-list-action-list-common/TriggerListOrActionListUI.tsx","webpack://_N_E/?4b06","webpack://_N_E/./src/pages/action-list/index.tsx"],"sourcesContent":["import { IActionOrTriggerListPageParams } from \"@app/static\"\r\nimport { createContext } from \"react\"\r\nimport { IActionOrTriggerGroupList } from \"./ITriggerList-IActionList-common.intf\";\r\nexport const ActionListOrTriggerListPageParamsContext = createContext<IActionOrTriggerListPageParams>({} as IActionOrTriggerListPageParams);\r\n\r\n\r\nexport const ActionOrTriggerGroupListContext = createContext<IActionOrTriggerGroupList>({} as IActionOrTriggerGroupList);","import { Box, Typography } from \"@mui/material\"\r\nimport { useContext } from \"react\"\r\nimport { useTranslation } from \"@fanfanlo\"\r\nimport { ActionListOrTriggerListPageParamsContext, ActionOrTriggerGroupListContext } from \"./context\"\r\nimport { IActionOrTriggerItem, IActionOrTriggerGroup, IActionOrTriggerGroupList } from \"./ITriggerList-IActionList-common.intf\"\r\nimport { IActionOrTriggerListPageParams } from \"@app/static\"\r\nimport { AppbarContainer, ITitleI18nConf } from \"@app/ui\"\r\n\r\n\r\n\r\nfunction Item({ item }: { item: IActionOrTriggerItem }) {\r\n    const { t } = useTranslation(item.i18nNs as any)\r\n    const params = useContext(ActionListOrTriggerListPageParamsContext)\r\n    return (\r\n        <Box sx={{ width: \"100%\", textIndent: \"1rem\", padding: \"1px\", backgroundColor: \"#f6f2e9\" }}>\r\n            <Typography>\r\n                <item.LinkRender query={params} id={item.id} item={item}>\r\n                    {t(item.nameKey)}\r\n                </item.LinkRender>\r\n                {/* <span onClick={() => item.onSelect(router)}>{t(item.nameKey)}</span> */}\r\n            </Typography>\r\n\r\n        </Box>\r\n    )\r\n}\r\n\r\nfunction Group({ group }: { group: IActionOrTriggerGroup }) {\r\n    const { t } = useTranslation(group.i18nNs as any)\r\n    return (\r\n        <Box sx={{ width: \"100%\" }}>\r\n            <Box sx={{ width: \"100%\", backgroundColor: \"#f6f9f6\", padding: \"2px\" }}>\r\n                <span>{t(group.nameKey)}</span>\r\n            </Box>\r\n            {group.items.map(action => {\r\n                return (\r\n                    <Item key={action.i18nNs} item={action} />\r\n                )\r\n            })}\r\n        </Box>\r\n    )\r\n}\r\nfunction GroupList() {\r\n    const groups = useContext(ActionOrTriggerGroupListContext)\r\n    return (\r\n        <Box sx={{ width: \"100%\" }}>\r\n            {groups.map((group) => (\r\n                <Group key={group.i18nNs} group={group} />\r\n            ))}\r\n        </Box>\r\n    )\r\n}\r\n\r\nfunction ActionListContent() {\r\n    return (\r\n        <Box>\r\n            <GroupList />\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport function TriggerListOrActionListUI({ groups, title, actionListParams, titleConf }: { groups: IActionOrTriggerGroupList, title:React.ReactNode, actionListParams: IActionOrTriggerListPageParams, titleConf?:ITitleI18nConf }) {\r\n    return (\r\n        <ActionListOrTriggerListPageParamsContext value={actionListParams}>\r\n            <ActionOrTriggerGroupListContext value={groups}>\r\n            <AppbarContainer appbarProps={{\r\n                title: <Typography>\r\n                    {title}\r\n                </Typography>,\r\n                back: true\r\n            }}\r\n            titleConf={titleConf}>\r\n            <ActionListContent />\r\n            </AppbarContainer>\r\n            </ActionOrTriggerGroupListContext>\r\n        </ActionListOrTriggerListPageParamsContext>\r\n    )\r\n}","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/action-list\",\n      function () {\n        return require(\"private-next-pages/action-list/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/action-list\"])\n      });\n    }\n  ","import { IActionOrTriggerListPageParams } from '@app/static';\r\nimport { useTranslation } from '@fanfanlo';\r\nimport { actionListGroups } from '@src/components/page/action-list/action.data';\r\nimport { TriggerListOrActionListUI } from '@src/components/trigger-list-action-list-common/TriggerListOrActionListUI';\r\nimport { useRouter } from 'next/router';\r\nimport { AppShell } from '@app/ui';\r\n\r\nexport default function index() {\r\n  const router = useRouter()\r\n  const { t } = useTranslation(\"homepage/pages/action-list/content\")\r\n  return (\r\n    <AppShell>\r\n      <TriggerListOrActionListUI groups={actionListGroups} title={t(\"content.title\")} actionListParams={router.query as IActionOrTriggerListPageParams} titleConf={{title:t(\"content.title\")}} />\r\n    </AppShell>\r\n  )   \r\n}\r\n\r\n"],"names":["createContext","ActionListOrTriggerListPageParamsContext","ActionOrTriggerGroupListContext","Box","Typography","useContext","useTranslation","AppbarContainer","Item","item","t","i18nNs","params","sx","width","textIndent","padding","backgroundColor","LinkRender","query","id","nameKey","Group","group","span","items","map","action","GroupList","groups","ActionListContent","TriggerListOrActionListUI","title","actionListParams","titleConf","value","appbarProps","back","actionListGroups","useRouter","AppShell","index","router"],"sourceRoot":"","ignoreList":[]}