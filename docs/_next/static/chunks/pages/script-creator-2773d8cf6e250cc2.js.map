{"version":3,"file":"static/chunks/pages/script-creator-2773d8cf6e250cc2.js","mappings":"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","sources":["webpack://_N_E/../../../../src/components/tabbar/Tabbar.tsx","webpack://_N_E/./src/components/fallback/Fallback.tsx","webpack://_N_E/./src/components/script-editor/data/context.tsx","webpack://_N_E/./src/components/script-editor/data/script-editor.data.intf.ts","webpack://_N_E/./src/components/script-editor/content/ScriptEditorContent.tsx","webpack://_N_E/./src/components/page/script-creator/content/ScriptCreatorContent.tsx","webpack://_N_E/./src/pages/script-creator/index.tsx","webpack://_N_E/../../node_modules/.pnpm/react-i18next@15.1.4_i18next@24.1.0_typescript@5.8.2__react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/react-i18next/dist/es/index.js","webpack://_N_E/./src/markets/market-html-utils.ts","webpack://_N_E/?c17e"],"sourcesContent":["'use client';\r\nimport { BottomNavigation, BottomNavigationAction, Box, CssBaseline, Paper, Stack } from '@mui/material';\r\n\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport StorefrontIcon from '@mui/icons-material/Storefront';\r\nimport { useRouter } from 'next/router';\r\nimport { PropsWithChildren } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { ITitleI18nConf } from '../page';\r\nimport AndroidPageContent from '../page/AndroidPageContent';\r\nimport CreateIcon from '@mui/icons-material/Create';\r\ninterface TabInfoType {\r\n  label: string;\r\n  value: string;\r\n  icon: React.ReactNode;\r\n}\r\n\r\nfunction BottomBar() {\r\n  return <Paper\r\n    id=\"bottom-navigation\"\r\n    sx={{ position: 'fixed', bottom: 0, left: 0, right: 0 }}\r\n    elevation={3}>\r\n    <NavBar />\r\n  </Paper>;\r\n}\r\nexport function NavBar() {\r\n  const router = useRouter();\r\n  const { pathname } = router;\r\n  const { t } = useTranslation('app-ui/components/tabbar/content');\r\n  const tabInfoList: TabInfoType[] = [\r\n    { label: t('content.home'), value: '/', icon: <HomeIcon /> },\r\n    { label: t('content.create'), value: '/script-creator', icon: <CreateIcon /> },\r\n    { label: t('content.market'), value: '/market', icon: <StorefrontIcon /> },\r\n    { label: t('content.settings'), value: '/settings', icon: <SettingsIcon /> },\r\n  ];\r\n  return (\r\n\r\n    <BottomNavigation showLabels value={pathname}>\r\n      {tabInfoList.map(e => (\r\n        <BottomNavigationAction\r\n          key={e.value}\r\n          label={e.label}\r\n          icon={e.icon}\r\n          data-id={`tabbar-${e.value}`}\r\n          className={pathname === e.value ? 'Mui-selected' : ''}\r\n          onClick={() => {\r\n            if (pathname === e.value) return;\r\n            router.push(e.value);\r\n          }}\r\n        />\r\n      ))}\r\n    </BottomNavigation>\r\n  );\r\n}\r\n\r\n\r\n// testWatchUpdates()\r\nexport function TabbarContainer({ children, titleConf }: {titleConf?:ITitleI18nConf} & PropsWithChildren)  {\r\n  return (\r\n    <Box sx={{ display: 'flex', flexDirection: 'column', height: '100vh' }}>\r\n      <CssBaseline />\r\n      <Stack direction={\"column\"} spacing={3}\r\n      \r\n      >\r\n        <AndroidPageContent titleConf={titleConf}>\r\n          {children}\r\n        </AndroidPageContent>\r\n        <BottomBar />\r\n      </Stack>\r\n    </Box>\r\n  );\r\n}\r\n\r\n","import {useTranslation} from '@fanfanlo'\r\nexport function Fallback(){\r\n    const {t} = useTranslation('homepage/components/fallback/content')\r\n    return   (\r\n    <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100%', width:\"100%\" }}>\r\n        <span>{t('content.loading')}</span>\r\n      </div>\r\n    )\r\n}","import { createAsyncContextLoader, createTypedContext } from \"@fanfanlo\";\r\nimport { IScriptEditorContentData } from \"./script-editor.data.intf\";\r\nimport { Fallback } from \"@src/components/fallback/Fallback\";\r\n\r\n\r\nexport const [ScriptEditorContextProvider, useScriptEditorContext] = createTypedContext<IScriptEditorContentData>();\r\n\r\nexport const ScriptEditorContextLoader = createAsyncContextLoader({\r\n    Provider: ScriptEditorContextProvider,\r\n    extract: (res: IScriptEditorContentData) => res,\r\n    fallback: <Fallback />,\r\n});","import { loadI18nValue, storeUtils } from \"@fanfanlo\";\r\nimport { IScriptData } from \"@market/lib\";\r\nimport _ from \"lodash\";\r\nimport { ulid } from \"ulid\";\r\n\r\nconst ns = \"script-editor\";\r\nconst androidData = `${ns}:android`;\r\nconst webData = `${ns}:web`;\r\nfunction createScriptNs(id:string){\r\n    return `${androidData}:${id}`\r\n}\r\nexport const scriptEditorNs = {\r\n    ns,\r\n    androidData,\r\n    webData,\r\n}\r\n\r\nexport interface IScriptEditorData{\r\n    script:IScriptData\r\n}\r\nexport interface IScriptEditorContentInfo{\r\n    dataModified:boolean\r\n    htmlPreviewIsShow:boolean\r\n}\r\nexport interface IScriptEditorContentData{\r\n    data:IScriptEditorData\r\n    info:IScriptEditorContentInfo\r\n}\r\n\r\nasync function createDefaultScriptEditorData():Promise<IScriptEditorContentData>{\r\n    const unnamed = await loadI18nValue(`homepage/components/script-editor/data/content`, 'content.unnamed')\r\n    const id = ulid()\r\n    return {\r\n        info:{\r\n            dataModified:false,\r\n            htmlPreviewIsShow:false\r\n        },\r\n        data:{script:{\r\n            ns:createScriptNs(id),\r\n            name:unnamed,\r\n            version:\"1.0.0\",\r\n            url:\"/script-editor\",\r\n            content:\"\",\r\n            id:id\r\n        }}\r\n    }\r\n}\r\n\r\nexport async function createScriptEditorData(data?:Partial<IScriptEditorData>):Promise<IScriptEditorContentData>{\r\n    const def = await createDefaultScriptEditorData();\r\n    const res = _.merge(def,data);\r\n    return res;\r\n}\r\n\r\nexport async function loadScrptEditorData(ns?:string):Promise<IScriptEditorContentData>{\r\n    const def = await createDefaultScriptEditorData()\r\n    ns = ns || def.data.script.ns\r\n    const s = await storeUtils.getNamespaceStoreWithData(ns, {forceReset:false, mergeDefData:true, defData:def})\r\n    return s.data\r\n}","import { IFrameReactContainer, useTranslation } from \"@fanfanlo\";\r\nimport { Box, Button, Stack, TextareaAutosize, Typography } from \"@mui/material\";\r\nimport { ScriptEditorContextLoader } from \"@src/components/script-editor/data/context\";\r\nimport { loadScrptEditorData } from \"@src/components/script-editor/data/script-editor.data.intf\";   \r\nimport { marketHtmlUtils } from \"@src/markets/market-html-utils\";\r\nimport { useState } from \"react\";\r\n\r\nexport function ScriptEditorContent({ns}:{ns?:string}) {\r\n\r\n    const [script, setScript] = useState(scriptMsg);\r\n    const [runScript, setRunScript] = useState('')\r\n    const { t } = useTranslation(`homepage/components/script-editor/content/content`)\r\n    function onRunClick(){\r\n        setRunScript('')\r\n        setTimeout(()=>setRunScript(script), 100 * 3)\r\n    }\r\n    return (\r\n        <>\r\n        <ScriptEditorContextLoader value={loadScrptEditorData(ns)}>\r\n            <Box>\r\n                <Typography variant=\"h5\">{t(ns ? 'ScriptEditorContent.name.editScript' : 'ScriptEditorContent.name.createScript')}</Typography>\r\n                <Stack direction={\"column\"} spacing={2}>\r\n                    <Box>\r\n                        <Button>examples2</Button>\r\n                        <Button>docs</Button>\r\n                        <Button onClick={onRunClick}>run</Button>\r\n                    </Box>\r\n                    <Box>\r\n                        <TextareaAutosize\r\n                        value={script}\r\n                        onChange={(e)=>setScript(e.target.value)}\r\n                         style={{width:\"100%\",minHeight:\"200px\"}} />\r\n                    </Box>\r\n                    <Box></Box>\r\n                    <Box>\r\n                        {runScript && <IFrameReactContainer\r\n                        content={runScript}\r\n                        urlAsContent={true}\r\n                        htmlBuilder={marketHtmlUtils.mergeHtml}\r\n                        />}\r\n                    </Box>\r\n                </Stack>\r\n            </Box>\r\n        </ScriptEditorContextLoader>\r\n        </>\r\n    )\r\n}\r\n\r\nconst script1 = `\r\n<html>\r\n    <head></head>\r\n    <body>\r\n        <script>\r\n            function onClick(){\r\n                var script = \\`\\n\r\n                    var context = com.fanfanlo.lib.mc.LibMainModel.instance.application;\r\n                    var audioManager = context.getSystemService(android.content.Context.AUDIO_SERVICE);\r\n                    audioManager.adjustStreamVolume(android.media.AudioManager.STREAM_MUSIC,\r\n                        android.media.AudioManager.ADJUST_RAISE, android.media.AudioManager.FLAG_SHOW_UI);  \r\n                \\`;\r\n                var res = autoWebViewJs.callScript(script);\r\n                console.log('res=', res);\r\n            }\r\n        </script>\r\n        <div>\r\n            <button onclick=\"onClick()\">switch</button>\r\n        </div>\r\n    </body>\r\n</html>\r\n`\r\n\r\nconst scriptVibrate = `\r\n<button onclick=\"vibrate()\">震📳动</button>\r\n<script>\r\n    function vibrate() {\r\n        autoWebViewJs.callScript(\\`\r\n// 获取振动器对象\r\nvar vib = app.getSystemService(Context.VIBRATOR_SERVICE);\r\n// 让手机震动\r\n// 可以调整数字试试\r\nvib.vibrate(300);\r\n    \\`);\r\n    }\r\n</script>`\r\n\r\nconst scriptMsg = `\r\n<button onclick=\"sendNotification()\">发送通知</button>\r\n<script>\r\nfunction sendNotification() {\r\nvar script = \\`\r\n        var channelId = \"default_channel_id\";\r\n        var notificationId = 1001;\r\n        var notifyMgr = context.getSystemService(Context.NOTIFICATION_SERVICE);\r\n\r\n        // Android 8.0+ 需要创建通知渠道\r\n        if (Build.VERSION.SDK_INT >= 26) {\r\n            var importance = NotificationManager.IMPORTANCE_DEFAULT;\r\n            var channel = notifyMgr.getNotificationChannel(channelId);\r\n            if (channel == null) {\r\n                channel = new NotificationChannel(channelId, \"默认通知渠道\", importance);\r\n                notifyMgr.createNotificationChannel(channel);\r\n            }\r\n            var builder = new Packages.android.app.Notification$Builder(context, channelId);\r\n        } else {\r\n            var builder = new Packages.android.app.Notification$Builder(context);\r\n        }\r\n\r\n        builder.setContentTitle(\"来自JS的通知\")\r\n               .setContentText(\"这是自动兼容 Android 版本的通知示例\")\r\n               .setSmallIcon(android.R.drawable.ic_dialog_info);\r\n\r\n        var res = notifyMgr.notify(notificationId, builder.build());\r\n        res;\r\n    \\`;\r\nvar res = autoWebViewJs.callScript(script);\r\nconsole.log('res=', res);\r\n}\r\n</script>\r\n\r\n`","import { Box } from \"@mui/material\";\r\nimport { ScriptEditorContent } from \"@src/components/script-editor/content/ScriptEditorContent\";\r\n\r\n\r\nexport function ScriptCreatorContent(){\r\n    return(\r\n        <>\r\n        <Box>\r\n            <ScriptEditorContent  />\r\n        </Box>\r\n        </>\r\n    )\r\n}","import { AppShell, TabbarContainer } from \"@app/ui\";\r\nimport { ScriptCreatorContent } from \"@src/components/page/script-creator/content/ScriptCreatorContent\";\r\n\r\n\r\nexport default function ScriptCreatorPage(){\r\n\r\n    return(\r\n        <AppShell>\r\n            <TabbarContainer titleConf={{ ns: \"homepage/pages/script-creator/content\", key: \"content.title\" }}>\r\n                <ScriptCreatorContent />\r\n            </TabbarContainer>\r\n        </AppShell>\r\n    )\r\n}","export * from \"C:\\\\work\\\\android-droid\\\\html\\\\website-2024-12\\\\node_modules\\\\.pnpm\\\\react-i18next@15.1.4_i18next@24.1.0_typescript@5.8.2__react-dom@19.0.0_react@19.0.0__react@19.0.0\\\\node_modules\\\\react-i18next\\\\dist\\\\es\\\\index.js\"","import { IFrameHtmlBuilderOptions } from \"@fanfanlo\";\n\nfunction createHtml(script: string, opts?:IFrameHtmlBuilderOptions) {\n    return `<html>\n    <head>\n    <script type=\"importmap\">\n  {\n    \"imports\": {\n      \"react\": \"https://esm.sh/react@19\",\n      \"react-dom/client\": \"https://esm.sh/react-dom@19/client\"\n    }\n  }\n</script>\n        <script>\n                const IFRAME_ID = '${opts?.iframeId}';\n                window.IFRAME_ID = '${opts?.iframeId}';\n                \n            var autoWebViewJs = window.autoWebViewJs = window.parent.window.autoWebViewJs;\n            autoWebViewJs = window.parent.window.autoWebViewJs;\n            var callScript = window.callScript = autoWebViewJs.callScript;\n            var callScriptByConf = window.callScriptByConf = autoWebViewJs.callScriptByConf;\n            var isRealInAndroid = window.isRealInAndroid;\n            // var storeUtilsConf = window.storeUtilsConf = window.parent.window.storeUtilsConf;\n            var storeUtilsConf = window.storeUtilsConf = {\n                ns:{},\n                read:window.parent.window.storeUtilsConf.read,\n                write:window.parent.window.storeUtilsConf.write   \n            }\n        </script>\n        <title>droid lego</title>\n        <style>html, body{margin-left:-0px;padding:0;\n        background-color: white;}</style>\n    </head>\n    <body>\n        <div id=\"app\"></div>\n        <script>${script}</script>\n        <script>\n                // const IFRAME_ID = '${opts?.iframeId}';\n                function notifyResize() {\n                    const body = document.body;\n                    const html = document.documentElement;\n                    \n                    // 获取实际内容高度（取最大值）\n                    const height = Math.max(\n                        body.scrollHeight,\n                        body.offsetHeight,\n                        html.scrollHeight,\n                        html.offsetHeight\n                    );\n                    \n                    // 获取实际内容宽度\n                    const width = Math.max(\n                        body.scrollWidth,\n                        body.offsetWidth,\n                        html.scrollWidth,\n                        html.offsetWidth\n                    );\n                    \n                    // 发送消息给父窗口\n                    window.parent.postMessage({\n                        type: 'resize',\n                        iframeId: IFRAME_ID,\n                        height,\n                        width\n                    }, '*');\n                }\n                \n                // 监听窗口大小变化\n                window.addEventListener('resize', notifyResize);\n                \n                // 监听DOMContentLoaded，确保DOM加载完毕后调整大小\n                document.addEventListener('DOMContentLoaded', notifyResize);\n                \n                // 监听load事件，确保所有资源加载完毕后调整大小\n                window.addEventListener('load', notifyResize);\n                \n                // 创建MutationObserver监听DOM变化\n                const observer = new MutationObserver(notifyResize);\n                observer.observe(document.documentElement, {\n                    childList: true,\n                    subtree: true,\n                    attributes: true,\n                    characterData: true\n                });\n                \n                // 监听来自父窗口的消息，处理请求重新调整大小的消息\n                window.addEventListener('message', function(event) {\n                    if (event.data && event.data.type === 'requestResize') {\n                        // 主动触发一次尺寸计算和发送\n                        notifyResize();\n                    }\n                });\n                \n                // 初始化大小\n                notifyResize();\n        </script>\n    </body>\n</html>`\n}\n\nfunction mergeHtml(html:string, opts?:IFrameHtmlBuilderOptions){\n    let h = html;\n    if(!h.includes('<body')){\n        h = `<body>${h}</body>`\n    }\n    if(!h.includes('<html')){\n        h = `<html>${h}</html>`\n    }\n    if(!h.includes('<head')){\n        h = h.replace('<html>', '<html><head></head>')\n    }\n    h = h.replace('<head>', `<head><script>\n                const IFRAME_ID = '${opts?.iframeId}';\n                window.IFRAME_ID = '${opts?.iframeId}';\n                \n            var autoWebViewJs = window.autoWebViewJs = window.parent.window.autoWebViewJs;\n            autoWebViewJs = window.parent.window.autoWebViewJs;\n            var callScript = window.callScript = autoWebViewJs.callScript;\n            var callScriptByConf = window.callScriptByConf = autoWebViewJs.callScriptByConf;\n            var isRealInAndroid = window.isRealInAndroid;\n            // var storeUtilsConf = window.storeUtilsConf = window.parent.window.storeUtilsConf;\n            var storeUtilsConf = window.storeUtilsConf = {\n                ns:{},\n                read:window.parent.window.storeUtilsConf.read,\n                write:window.parent.window.storeUtilsConf.write   \n            }\n        </script>\n        \n        <style>html, body{margin-left:-0px;padding:0;\n        background-color: white;}</style>`);\n\n    h = h.replace(`</body>`, `\n        \n        <script>\n                function notifyResize() {\n                    const body = document.body;\n                    const html = document.documentElement;\n                    \n                    // 获取实际内容高度（取最大值）\n                    const height = Math.max(\n                        body.scrollHeight,\n                        body.offsetHeight,\n                        html.scrollHeight,\n                        html.offsetHeight\n                    );\n                    \n                    // 获取实际内容宽度\n                    const width = Math.max(\n                        body.scrollWidth,\n                        body.offsetWidth,\n                        html.scrollWidth,\n                        html.offsetWidth\n                    );\n                    \n                    // 发送消息给父窗口\n                    window.parent.postMessage({\n                        type: 'resize',\n                        iframeId: IFRAME_ID,\n                        height,\n                        width\n                    }, '*');\n                }\n                \n                // 监听窗口大小变化\n                window.addEventListener('resize', notifyResize);\n                \n                // 监听DOMContentLoaded，确保DOM加载完毕后调整大小\n                document.addEventListener('DOMContentLoaded', notifyResize);\n                \n                // 监听load事件，确保所有资源加载完毕后调整大小\n                window.addEventListener('load', notifyResize);\n                \n                // 创建MutationObserver监听DOM变化\n                const observer = new MutationObserver(notifyResize);\n                observer.observe(document.documentElement, {\n                    childList: true,\n                    subtree: true,\n                    attributes: true,\n                    characterData: true\n                });\n                \n                // 监听来自父窗口的消息，处理请求重新调整大小的消息\n                window.addEventListener('message', function(event) {\n                    if (event.data && event.data.type === 'requestResize') {\n                        // 主动触发一次尺寸计算和发送\n                        notifyResize();\n                    }\n                });\n                \n                // 初始化大小\n                notifyResize();\n        </script>\n        </body>`);\n        console.log('hhhhhhhhhhhhh=', h);\n    return h;\n}\nasync function createHtmlByUrl(url: string, opts?:IFrameHtmlBuilderOptions) {\n    const res = await fetch(url);\n    const content = await res.text();\n    return createHtml(content, opts);\n}\nexport const marketHtmlUtils = {\n    createHtml,\n    createHtmlByUrl,\n    mergeHtml\n}","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/script-creator\",\n      function () {\n        return require(\"private-next-pages/script-creator/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/script-creator\"])\n      });\n    }\n  "],"names":["useTranslation","Fallback","t","div","style","display","justifyContent","alignItems","height","width","span","createAsyncContextLoader","createTypedContext","ScriptEditorContextProvider","useScriptEditorContext","ScriptEditorContextLoader","Provider","extract","res","fallback","loadI18nValue","storeUtils","_","ulid","ns","androidData","webData","createScriptNs","id","scriptEditorNs","createDefaultScriptEditorData","unnamed","info","dataModified","htmlPreviewIsShow","data","script","name","version","url","content","createScriptEditorData","def","merge","loadScrptEditorData","s","getNamespaceStoreWithData","forceReset","mergeDefData","defData","IFrameReactContainer","Box","Button","Stack","TextareaAutosize","Typography","marketHtmlUtils","useState","ScriptEditorContent","setScript","scriptMsg","runScript","setRunScript","onRunClick","setTimeout","value","variant","direction","spacing","onClick","onChange","e","target","minHeight","urlAsContent","htmlBuilder","mergeHtml","script1","scriptVibrate","ScriptCreatorContent","AppShell","TabbarContainer","ScriptCreatorPage","titleConf","key","createHtml","opts","iframeId","html","h","includes","replace","console","log","createHtmlByUrl","fetch","text"],"sourceRoot":"","ignoreList":[7]}