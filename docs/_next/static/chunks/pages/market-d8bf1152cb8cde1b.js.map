{"version":3,"file":"static/chunks/pages/market-d8bf1152cb8cde1b.js","mappings":"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","sources":["webpack://_N_E/../../../../src/components/tabbar/Tabbar.tsx","webpack://_N_E/../../node_modules/.pnpm/react-i18next@15.1.4_i18next@24.1.0_typescript@5.8.2__react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/react-i18next/dist/es/index.js","webpack://_N_E/./src/markets/market-html-utils.ts","webpack://_N_E/./src/components/page/market/data/market.context.tsx","webpack://_N_E/./src/components/page/market/data/ns.ts","webpack://_N_E/./src/components/page/market/data/market.data.intf.ts","webpack://_N_E/./src/components/page/market/components/scripts/Script.tsx","webpack://_N_E/./src/components/page/market/components/scripts/Scripts.tsx","webpack://_N_E/./src/components/page/market/MarketContent.tsx","webpack://_N_E/./src/pages/market/index.tsx","webpack://_N_E/?2ed1"],"sourcesContent":["'use client';\r\nimport { BottomNavigation, BottomNavigationAction, Box, CssBaseline, Paper, Stack } from '@mui/material';\r\n\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport StorefrontIcon from '@mui/icons-material/Storefront';\r\nimport { useRouter } from 'next/router';\r\nimport { PropsWithChildren } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { ITitleI18nConf } from '../page';\r\nimport AndroidPageContent from '../page/AndroidPageContent';\r\nimport CreateIcon from '@mui/icons-material/Create';\r\ninterface TabInfoType {\r\n  label: string;\r\n  value: string;\r\n  icon: React.ReactNode;\r\n}\r\n\r\nfunction BottomBar() {\r\n  return <Paper\r\n    id=\"bottom-navigation\"\r\n    sx={{ position: 'fixed', bottom: 0, left: 0, right: 0 }}\r\n    elevation={3}>\r\n    <NavBar />\r\n  </Paper>;\r\n}\r\nexport function NavBar() {\r\n  const router = useRouter();\r\n  const { pathname } = router;\r\n  const { t } = useTranslation('app-ui/components/tabbar/content');\r\n  const tabInfoList: TabInfoType[] = [\r\n    { label: t('content.home'), value: '/', icon: <HomeIcon /> },\r\n    { label: t('content.create'), value: '/script-creator', icon: <CreateIcon /> },\r\n    { label: t('content.market'), value: '/market', icon: <StorefrontIcon /> },\r\n    { label: t('content.settings'), value: '/settings', icon: <SettingsIcon /> },\r\n  ];\r\n  return (\r\n\r\n    <BottomNavigation showLabels value={pathname}>\r\n      {tabInfoList.map(e => (\r\n        <BottomNavigationAction\r\n          key={e.value}\r\n          label={e.label}\r\n          icon={e.icon}\r\n          data-id={`tabbar-${e.value}`}\r\n          className={pathname === e.value ? 'Mui-selected' : ''}\r\n          onClick={() => {\r\n            if (pathname === e.value) return;\r\n            router.push(e.value);\r\n          }}\r\n        />\r\n      ))}\r\n    </BottomNavigation>\r\n  );\r\n}\r\n\r\n\r\n// testWatchUpdates()\r\nexport function TabbarContainer({ children, titleConf }: {titleConf?:ITitleI18nConf} & PropsWithChildren)  {\r\n  return (\r\n    <Box sx={{ display: 'flex', flexDirection: 'column', height: '100vh' }}>\r\n      <CssBaseline />\r\n      <Stack direction={\"column\"} spacing={3}\r\n      \r\n      >\r\n        <AndroidPageContent titleConf={titleConf}>\r\n          {children}\r\n        </AndroidPageContent>\r\n        <BottomBar />\r\n      </Stack>\r\n    </Box>\r\n  );\r\n}\r\n\r\n","export * from \"C:\\\\work\\\\android-droid\\\\html\\\\website-2024-12\\\\node_modules\\\\.pnpm\\\\react-i18next@15.1.4_i18next@24.1.0_typescript@5.8.2__react-dom@19.0.0_react@19.0.0__react@19.0.0\\\\node_modules\\\\react-i18next\\\\dist\\\\es\\\\index.js\"","import { IFrameHtmlBuilderOptions } from \"@fanfanlo\";\n\nfunction createHtml(script: string, opts?:IFrameHtmlBuilderOptions) {\n    return `<html>\n    <head>\n    <script type=\"importmap\">\n  {\n    \"imports\": {\n      \"react\": \"https://esm.sh/react@19\",\n      \"react-dom/client\": \"https://esm.sh/react-dom@19/client\"\n    }\n  }\n</script>\n        <script>\n                const IFRAME_ID = '${opts?.iframeId}';\n                window.IFRAME_ID = '${opts?.iframeId}';\n                \n            var autoWebViewJs = window.autoWebViewJs = window.parent.window.autoWebViewJs;\n            autoWebViewJs = window.parent.window.autoWebViewJs;\n            var callScript = window.callScript = autoWebViewJs.callScript;\n            var callScriptByConf = window.callScriptByConf = autoWebViewJs.callScriptByConf;\n            var isRealInAndroid = window.isRealInAndroid;\n            // var storeUtilsConf = window.storeUtilsConf = window.parent.window.storeUtilsConf;\n            var storeUtilsConf = window.storeUtilsConf = {\n                ns:{},\n                read:window.parent.window.storeUtilsConf.read,\n                write:window.parent.window.storeUtilsConf.write   \n            }\n        </script>\n        <title>droid lego</title>\n        <style>html, body{margin-left:-0px;padding:0;\n        background-color: white;}</style>\n    </head>\n    <body>\n        <div id=\"app\"></div>\n        <script>${script}</script>\n        <script>\n                // const IFRAME_ID = '${opts?.iframeId}';\n                function notifyResize() {\n                    const body = document.body;\n                    const html = document.documentElement;\n                    \n                    // 获取实际内容高度（取最大值）\n                    const height = Math.max(\n                        body.scrollHeight,\n                        body.offsetHeight,\n                        html.scrollHeight,\n                        html.offsetHeight\n                    );\n                    \n                    // 获取实际内容宽度\n                    const width = Math.max(\n                        body.scrollWidth,\n                        body.offsetWidth,\n                        html.scrollWidth,\n                        html.offsetWidth\n                    );\n                    \n                    // 发送消息给父窗口\n                    window.parent.postMessage({\n                        type: 'resize',\n                        iframeId: IFRAME_ID,\n                        height,\n                        width\n                    }, '*');\n                }\n                \n                // 监听窗口大小变化\n                window.addEventListener('resize', notifyResize);\n                \n                // 监听DOMContentLoaded，确保DOM加载完毕后调整大小\n                document.addEventListener('DOMContentLoaded', notifyResize);\n                \n                // 监听load事件，确保所有资源加载完毕后调整大小\n                window.addEventListener('load', notifyResize);\n                \n                // 创建MutationObserver监听DOM变化\n                const observer = new MutationObserver(notifyResize);\n                observer.observe(document.documentElement, {\n                    childList: true,\n                    subtree: true,\n                    attributes: true,\n                    characterData: true\n                });\n                \n                // 监听来自父窗口的消息，处理请求重新调整大小的消息\n                window.addEventListener('message', function(event) {\n                    if (event.data && event.data.type === 'requestResize') {\n                        // 主动触发一次尺寸计算和发送\n                        notifyResize();\n                    }\n                });\n                \n                // 初始化大小\n                notifyResize();\n        </script>\n    </body>\n</html>`\n}\n\nfunction mergeHtml(html:string, opts?:IFrameHtmlBuilderOptions){\n    let h = html;\n    if(!h.includes('<body')){\n        h = `<body>${h}</body>`\n    }\n    if(!h.includes('<html')){\n        h = `<html>${h}</html>`\n    }\n    if(!h.includes('<head')){\n        h = h.replace('<html>', '<html><head></head>')\n    }\n    h = h.replace('<head>', `<head><script>\n                const IFRAME_ID = '${opts?.iframeId}';\n                window.IFRAME_ID = '${opts?.iframeId}';\n                \n            var autoWebViewJs = window.autoWebViewJs = window.parent.window.autoWebViewJs;\n            autoWebViewJs = window.parent.window.autoWebViewJs;\n            var callScript = window.callScript = autoWebViewJs.callScript;\n            var callScriptByConf = window.callScriptByConf = autoWebViewJs.callScriptByConf;\n            var isRealInAndroid = window.isRealInAndroid;\n            // var storeUtilsConf = window.storeUtilsConf = window.parent.window.storeUtilsConf;\n            var storeUtilsConf = window.storeUtilsConf = {\n                ns:{},\n                read:window.parent.window.storeUtilsConf.read,\n                write:window.parent.window.storeUtilsConf.write   \n            }\n        </script>\n        \n        <style>html, body{margin-left:-0px;padding:0;\n        background-color: white;}</style>`);\n\n    h = h.replace(`</body>`, `\n        \n        <script>\n                function notifyResize() {\n                    const body = document.body;\n                    const html = document.documentElement;\n                    \n                    // 获取实际内容高度（取最大值）\n                    const height = Math.max(\n                        body.scrollHeight,\n                        body.offsetHeight,\n                        html.scrollHeight,\n                        html.offsetHeight\n                    );\n                    \n                    // 获取实际内容宽度\n                    const width = Math.max(\n                        body.scrollWidth,\n                        body.offsetWidth,\n                        html.scrollWidth,\n                        html.offsetWidth\n                    );\n                    \n                    // 发送消息给父窗口\n                    window.parent.postMessage({\n                        type: 'resize',\n                        iframeId: IFRAME_ID,\n                        height,\n                        width\n                    }, '*');\n                }\n                \n                // 监听窗口大小变化\n                window.addEventListener('resize', notifyResize);\n                \n                // 监听DOMContentLoaded，确保DOM加载完毕后调整大小\n                document.addEventListener('DOMContentLoaded', notifyResize);\n                \n                // 监听load事件，确保所有资源加载完毕后调整大小\n                window.addEventListener('load', notifyResize);\n                \n                // 创建MutationObserver监听DOM变化\n                const observer = new MutationObserver(notifyResize);\n                observer.observe(document.documentElement, {\n                    childList: true,\n                    subtree: true,\n                    attributes: true,\n                    characterData: true\n                });\n                \n                // 监听来自父窗口的消息，处理请求重新调整大小的消息\n                window.addEventListener('message', function(event) {\n                    if (event.data && event.data.type === 'requestResize') {\n                        // 主动触发一次尺寸计算和发送\n                        notifyResize();\n                    }\n                });\n                \n                // 初始化大小\n                notifyResize();\n        </script>\n        </body>`);\n        console.log('hhhhhhhhhhhhh=', h);\n    return h;\n}\nasync function createHtmlByUrl(url: string, opts?:IFrameHtmlBuilderOptions) {\n    const res = await fetch(url);\n    const content = await res.text();\n    return createHtml(content, opts);\n}\nexport const marketHtmlUtils = {\n    createHtml,\n    createHtmlByUrl,\n    mergeHtml\n}","import { createAsyncContextLoader } from \"@fanfanlo\";\r\nimport { createTypedContext } from \"@fanfanlo\";\r\nimport { IMarketPageData } from \"./market.data.intf\";\r\nimport { IStoreWithData } from \"@fanfanlo\";\r\n\r\nexport const [MarketPageDataContextProvider, useMarketPageData] = createTypedContext<IMarketPageData>();\r\n\r\nexport const MarketPageDataContextLoader = createAsyncContextLoader({\r\n    Provider: MarketPageDataContextProvider,\r\n    extract: (res: IStoreWithData<IMarketPageData>) => res.data,\r\n    fallback: <div>Loading...</div>,\r\n  });","const ns = 'market';\r\nconst androidData = `${ns}:android`;\r\nconst webData = `${ns}:web`;\r\nexport const marketNs = {\r\n    ns,\r\n    androidData,\r\n    webData,\r\n}","import { IStoreWithData, storeUtils } from \"@fanfanlo\";\r\nimport { marketNs } from \"./ns\";\r\nimport { IScriptData } from \"@market/lib\";\r\n\r\n// export interface IScriptData{\r\n//     ns:string;\r\n//     name:string;\r\n//     version:string;\r\n//     url?:string;\r\n//     content?:string;\r\n// }\r\n\r\nexport interface IScriptsInfo{\r\n    scripts:IScriptData[];\r\n    total:number;\r\n    loadIsEnded:boolean;\r\n    loadIsFailed:boolean;\r\n}\r\nexport interface IMarketPageData{\r\n    scriptsInfo:IScriptsInfo;\r\n}\r\n\r\nfunction createDefaultMarketPageData():IMarketPageData{\r\n    return {\r\n        scriptsInfo:{\r\n            scripts:[\r\n                {\r\n                    ns:\"@fanfanlo/scripts/emergency-alarm\",\r\n                    name:\"emergency-alarm\",\r\n                    version:\"1.0.0\",\r\n                    url:\"/scripts/fanfanlo/scripts/emergency-alarm/index.js\",\r\n                    content:\"\"\r\n                }\r\n            ],\r\n            total:0,\r\n            loadIsEnded:false,\r\n            loadIsFailed:false\r\n        }\r\n    }\r\n}\r\nexport function createMarketPageData():IMarketPageData{\r\n    return createDefaultMarketPageData();\r\n}\r\n\r\nlet loader:Promise<IStoreWithData<IMarketPageData>>;\r\nexport async function loadMarketPageData():Promise<IStoreWithData<IMarketPageData>>{\r\n    if(loader)return loader;\r\n    const defData = createDefaultMarketPageData();\r\n    loader = storeUtils.getNamespaceStoreWithData<IMarketPageData>(marketNs.androidData, {defData, forceReset:false, mergeDefData:true});\r\n    return loader;\r\n}","import { IScriptData } from \"@market/lib\"\r\nimport { Box } from \"@mui/material\"\r\nimport { marketHtmlUtils } from \"@src/markets/market-html-utils\"\r\nimport { IFrameReactContainer } from \"@fanfanlo\"\r\ninterface IScriptProps {\r\n    script: IScriptData\r\n}\r\n\r\n\r\nexport const Script = (props: IScriptProps) => {\r\n    return <Box>\r\n        <Box>{props.script.name}</Box>\r\n        <Box><span>\r\n            {props.script.summary}\r\n        </span></Box>\r\n        \r\n        <Box>\r\n            <IFrameReactContainer url={props.script.url} urlAsContent={true} htmlBuilder={marketHtmlUtils.createHtml} />\r\n        </Box>\r\n    </Box>\r\n}","import { Box } from \"@mui/material\";\r\nimport { useMarketPageData } from \"../../data/market.context\";\r\nimport { Script } from \"./Script\";\r\n\r\nexport const Scripts = () => {\r\n    const data = useMarketPageData()\r\n    return <Box>\r\n        {data.scriptsInfo.scripts.map((script)=>{\r\n            return <Script key={`${script.url}-${script.content}-${script.name}-${script.version}-${script.ns}`} script={script}/>\r\n        })}\r\n    </Box>\r\n}","import { Box } from \"@mui/material\";\r\nimport { Scripts } from \"./components/scripts/Scripts\";\r\n\r\nexport const MarketContent = () => {\r\n    return (\r\n        <Box>\r\n            <Scripts />\r\n        </Box>\r\n    )\r\n}","import { AppShell, TabbarContainer } from \"@app/ui\"\r\nimport { MarketPageDataContextLoader, MarketPageDataContextProvider } from \"@src/components/page/market/data/market.context\"\r\nimport { IMarketPageData, loadMarketPageData } from \"@src/components/page/market/data/market.data.intf\"\r\nimport { MarketContent } from \"@src/components/page/market/MarketContent\"\r\nimport { Suspense, use } from \"react\"\r\nimport { IStoreWithData } from \"@fanfanlo\"\r\n\r\n\r\n// function Content({loader}: {loader: Promise<IStoreWithData<IMarketPageData>>}){\r\n//     const store = use(loader);\r\n//     console.log('store=', store);\r\n//     return (<MarketPageDataContextProvider value={store.data}>\r\n//     <MarketContent />\r\n// </MarketPageDataContextProvider>\r\n//     )\r\n// }\r\n// export default function MarketPage() {\r\n//     const loader = loadMarketPageData();\r\n//     return (\r\n//             <AppShell>\r\n//                 <TabbarContainer titleConf={{ ns: \"homepage/pages/market/content\", key: \"market.title\" }}>\r\n//                 <Suspense fallback={<div>loading</div>}>\r\n//                     <Content loader={loader} />\r\n//                 </Suspense>\r\n//                 </TabbarContainer>\r\n//             </AppShell>\r\n//         )\r\n// }\r\n\r\n\r\nexport default function MarketPage() {\r\n    return (\r\n        <AppShell>\r\n            <TabbarContainer titleConf={{ ns: \"homepage/pages/market/content\", key: \"market.title\" }}>\r\n                <MarketPageDataContextLoader value={loadMarketPageData()}>\r\n                    <MarketContent />\r\n                </MarketPageDataContextLoader>\r\n            </TabbarContainer>\r\n        </AppShell>\r\n    )\r\n}","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/market\",\n      function () {\n        return require(\"private-next-pages/market/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/market\"])\n      });\n    }\n  "],"names":["createHtml","script","opts","iframeId","mergeHtml","html","h","includes","replace","console","log","createHtmlByUrl","url","res","fetch","content","text","marketHtmlUtils","createAsyncContextLoader","createTypedContext","MarketPageDataContextProvider","useMarketPageData","MarketPageDataContextLoader","Provider","extract","data","fallback","div","ns","androidData","webData","marketNs","storeUtils","createDefaultMarketPageData","scriptsInfo","scripts","name","version","total","loadIsEnded","loadIsFailed","createMarketPageData","loader","loadMarketPageData","defData","getNamespaceStoreWithData","forceReset","mergeDefData","Box","IFrameReactContainer","Script","props","span","summary","urlAsContent","htmlBuilder","Scripts","map","MarketContent","AppShell","TabbarContainer","MarketPage","titleConf","key","value"],"sourceRoot":"","ignoreList":[1]}