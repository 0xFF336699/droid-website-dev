{"version":3,"file":"static/chunks/pages/im/room/room-settings-469cded6a0123dce.js","mappings":"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","sources":["webpack://_N_E/../../node_modules/.pnpm/react-i18next@15.1.4_i18next@24.1.0_typescript@5.8.2__react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/react-i18next/dist/es/index.js","webpack://_N_E/../../../../src/components/app/AppShell.tsx","webpack://_N_E/../../../../src/components/page/PageContent.tsx","webpack://_N_E/../../../../src/components/page/AndroidPageContent.tsx","webpack://_N_E/./src/im/client/room/roomSettingsService.ts","webpack://_N_E/./src/im/components/room-settings/BasicSettings.tsx","webpack://_N_E/./src/im/components/room-settings/PermissionSettings.tsx","webpack://_N_E/./src/im/components/room-settings/PrivacySettings.tsx","webpack://_N_E/./src/im/components/room-settings/MemberManagement.tsx","webpack://_N_E/./src/im/components/room-settings/RoomSettingsContent.tsx","webpack://_N_E/./src/pages/im/room/room-settings/index.tsx","webpack://_N_E/../../../src/mc/static-model.ts","webpack://_N_E/../../../../src/components/motion/page-transition.tsx","webpack://_N_E/../../../../src/components/app/PageShell.tsx","webpack://_N_E/../../../../src/components/appbar/AppBar.tsx","webpack://_N_E/?537a"],"sourcesContent":["export * from \"C:\\\\work\\\\android-droid\\\\html\\\\website-2024-12\\\\node_modules\\\\.pnpm\\\\react-i18next@15.1.4_i18next@24.1.0_typescript@5.8.2__react-dom@19.0.0_react@19.0.0__react@19.0.0\\\\node_modules\\\\react-i18next\\\\dist\\\\es\\\\index.js\"","'use client'\r\nimport { i18n, i18nInit, IPageScrollPosition, StorePageContext, StorePageDynamicContext, toProxy, watchUpdates, storeUtils } from \"@fanfanlo\";\r\nimport { useRouter } from \"next/router\";\r\nimport { PropsWithChildren, useEffect } from \"react\";\r\nimport { I18nextProvider } from \"react-i18next\";\r\n\r\n\r\ni18nInit()\r\n\r\nexport function AppShell({ children }: PropsWithChildren) {\r\n  const router = useRouter();\r\n  const scrollKey = 'scrollPositionInfo'\r\n  const href = window.location.href.split(\"#\")[0]\r\n  const dynamicKey = `dynamic-${href}`\r\n  const s = storeUtils.namespace(dynamicKey);\r\n  let o: Record<string, unknown>|undefined = s.read(dynamicKey)\r\n  if (!o) {\r\n    o = {}\r\n    s.write(dynamicKey, o)\r\n  }\r\n  o = toProxy(o)\r\n  useEffect(() => {\r\n\r\n    router.beforePopState((state) => {\r\n      s.clearAll()\r\n      return true\r\n    })\r\n  })\r\n  useEffect(() => {\r\n    s.write(dynamicKey, o)\r\n    return watchUpdates(o, () => {\r\n      s.write(dynamicKey, o)\r\n    })\r\n  }, [])\r\n  useEffect(() => {\r\n    const info = (s.read(scrollKey) || { x: 0, y: 0 }) as IPageScrollPosition\r\n    // console.log('app shell scroll info info = ', info)\r\n    if (info.x == 0 && info.y == 0) {\r\n      listenScroll()\r\n    } else {\r\n      window.requestAnimationFrame(() => {\r\n        window.scrollTo(info.x, info.y)\r\n        listenScroll()\r\n      })\r\n    }\r\n    function onScroll(e: Event) {\r\n      // console.log('app shell on scroll', { x: window.scrollX, y: window.scrollY })\r\n      s.write(scrollKey, { x: window.scrollX, y: window.scrollY })\r\n    }\r\n    function listenScroll() {\r\n      window.addEventListener('scroll', onScroll)\r\n    }\r\n\r\n    function unsub() {\r\n      window.removeEventListener('scroll', onScroll)\r\n    }\r\n    return unsub\r\n  });\r\n  return (\r\n    <StorePageContext value={s}>\r\n      <StorePageDynamicContext value={o}>\r\n\r\n        <I18nextProvider i18n={i18n}>\r\n          {children}\r\n        </I18nextProvider>\r\n      </StorePageDynamicContext>\r\n    </StorePageContext>\r\n  )\r\n}","import { Box, Button, Container } from '@mui/material';\r\nimport { createContext, PropsWithChildren, useContext, useEffect } from 'react';\r\nimport { ITitleI18nConf, ITitleI18nNsConf, ITitleI18nTitleConf } from '.';\r\nimport { isBuild, isDev, isServer, loadI18nValue, publicRuntimeConfig } from '@fanfanlo';\r\nimport { read } from 'fs';\r\nimport { useTranslation } from '@fanfanlo';\r\n\r\n\r\nfunction Reload(){\r\n  if(!isDev)return <>  </>\r\n  const {t} = useTranslation(\"app-ui/components/page/content\")\r\n  return(\r\n    <Box>\r\n      <Button onClick={() => {window.location.reload()}}>{t(\"PageContent.refresh\")}</Button>\r\n      {new Date().toLocaleString()}\r\n    </Box>\r\n  )\r\n}\r\n\r\nconst ScrollP = createContext({ x: 0, y: 0 });\r\nlet index = 0;\r\nexport default function PageContent({ children, titleConf, reload }: {titleConf?:ITitleI18nConf, reload?: boolean} & PropsWithChildren) {\r\n  index++;\r\n  const scroll = useContext(ScrollP);\r\n  const clazz = `${Date.now() + Math.random() * Date.now()}`;\r\n  useEffect(()=>{\r\n    async function loadTitle(){\r\n      if(!titleConf)return\r\n      let title = titleConf.title\r\n      if(titleConf.ns){\r\n        title = await loadI18nValue(titleConf.ns, titleConf.key || \"content.title\")\r\n      }\r\n      if(!title)return\r\n      document.title = title\r\n    }\r\n    loadTitle()\r\n  }, [])\r\n  useEffect(() => {\r\n    const container = document.getElementsByClassName(clazz)[0];\r\n    if (!container) return;\r\n    container.scrollTop = scroll.y;\r\n    const onScroll = () => {\r\n      var scrollTop = container.scrollTop;\r\n      scroll.y = scrollTop;\r\n    };\r\n    container.removeEventListener('scroll', onScroll);\r\n    container.addEventListener('scroll', onScroll, { passive: true });\r\n    return () => container.removeEventListener('scroll', onScroll);\r\n  }, [clazz, scroll]);\r\n  return (\r\n\r\n    <Container className={clazz} sx={{ flexGrow: 1, overflow: 'auto', padding: \"0px\" }}>\r\n      <Box>\r\n        {(reload || (reload == undefined)) && <Reload />}\r\n        {children}\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","import { PropsWithChildren } from \"react\";\r\nimport PageContent from \"./PageContent\";\r\nimport { ITitleI18nConf } from \".\";\r\nexport default function AndroidPageContent({ children, titleConf, reload }: {titleConf?:ITitleI18nConf, reload?: boolean} & PropsWithChildren)  {\r\n    return (\r\n        <PageContent titleConf={titleConf} reload={reload}>\r\n            {children}\r\n        </PageContent>\r\n    )\r\n}\r\n","import { Log } from '@fanfanlo';\r\nimport { matrixClient } from '../client';\r\nimport { roomData } from './data';\r\nimport { IRoomSettings } from './types';\r\n\r\nconst fileLogger = new Log(false, 'im.client.room.roomSettingsService');\r\nfileLogger.pause = true; // 全局 logger 默认关闭\r\n\r\nexport interface IRoomPermissions {\r\n    // 发送消息的最低权限级别\r\n    sendMessages?: number;\r\n    // 邀请用户的最低权限级别\r\n    invite?: number;\r\n    // 踢出用户的最低权限级别\r\n    kick?: number;\r\n    // 封禁用户的最低权限级别\r\n    ban?: number;\r\n    // 修改房间设置的最低权限级别\r\n    roomSettings?: number;\r\n}\r\n\r\nexport interface IRoomPrivacySettings {\r\n    isPublic: boolean;\r\n    isEncrypted: boolean;\r\n    allowGuestJoin: boolean;\r\n}\r\n\r\nexport interface IUpdateResult {\r\n    success: boolean;\r\n    error?: string;\r\n}\r\n\r\nexport const roomSettingsService = {\r\n    // 检查 Matrix 客户端是否已初始化\r\n    checkClient() {\r\n        const client = matrixClient.client;\r\n        if (!client) {\r\n            throw new Error('Matrix client not initialized');\r\n        }\r\n        return client;\r\n    },\r\n\r\n    // 获取房间状态事件\r\n    async getRoomStateEvent(room: any, eventType: string, stateKey = '') {\r\n        const logger = new Log(false, 'im.client.room.roomSettingsService.getRoomStateEvent');\r\n        // logger.pause = true;\r\n        try {\r\n            // 如果 room 是 Promise，等待它解析\r\n            const resolvedRoom = await (room instanceof Promise ? room : room);\r\n            \r\n            logger.log('Room 对象:', {\r\n                room: resolvedRoom,\r\n                hasCurrentState: !!resolvedRoom?.currentState,\r\n                hasGetState: typeof resolvedRoom?.getState === 'function',\r\n                hasGetLiveTimeline: typeof resolvedRoom?.getLiveTimeline === 'function',\r\n                methods: Object.keys(resolvedRoom || {}),\r\n                prototype: resolvedRoom ? Object.getPrototypeOf(resolvedRoom) : null\r\n            });\r\n\r\n            if (!resolvedRoom) {\r\n                logger.warn('Room 对象为空');\r\n                return null;\r\n            }\r\n\r\n            // 使用新的 API\r\n            if (resolvedRoom.currentState?.getStateEvents) {\r\n                logger.log('使用 currentState.getStateEvents');\r\n                return resolvedRoom.currentState.getStateEvents(eventType, stateKey);\r\n            }\r\n\r\n            // 尝试获取状态事件的其他方法\r\n            if (resolvedRoom.getStateEvents) {\r\n                logger.log('使用 room.getStateEvents');\r\n                return resolvedRoom.getStateEvents(eventType, stateKey);\r\n            }\r\n\r\n            if (resolvedRoom.state) {\r\n                logger.log('使用 room.state');\r\n                const events = resolvedRoom.state.getStateEvents?.(eventType, stateKey) || \r\n                              resolvedRoom.state.events?.[eventType]?.get?.(stateKey);\r\n                if (events) return events;\r\n            }\r\n\r\n            logger.warn('无法获取房间状态事件，返回 null');\r\n            return null;\r\n        } catch (error) {\r\n            logger.error('获取房间状态事件失败:', error);\r\n            return null;\r\n        }\r\n    },\r\n\r\n    // 检查权限\r\n    async hasPermission(roomId: string, action: string) {\r\n        // 不打印\r\n        return (async () => {\r\n            try {\r\n                const client = this.checkClient();\r\n                const powerLevels = await client.getStateEvent(roomId, 'm.room.power_levels', '');\r\n                const userId = await client.getUserId();\r\n                const userLevel = userId ? (powerLevels.users?.[userId] ?? powerLevels.users_default ?? 0) : (powerLevels.users_default ?? 0);\r\n                const requiredLevel = powerLevels.state_default || 50;\r\n                return userLevel >= requiredLevel;\r\n            } catch {\r\n                return false;\r\n            }\r\n        })();\r\n    },\r\n\r\n    // 基础设置\r\n    async updateRoomName(roomId: string, name: string) {\r\n        // 不打印\r\n        const client = this.checkClient();\r\n        await client.setRoomName(roomId, name);\r\n    },\r\n\r\n    async updateRoomAvatar(roomId: string, avatarUrl: string) {\r\n        // 不打印\r\n        if (!await this.hasPermission(roomId, 'state_default')) {\r\n            throw new Error('没有修改房间头像的权限');\r\n        }\r\n        const client = this.checkClient();\r\n        const content = { url: avatarUrl };\r\n        await client.sendStateEvent(roomId, 'm.room.avatar' as any, content, '');\r\n        const roomInfo = roomData.joinedRooms.find(r => r.roomId === roomId);\r\n        if (roomInfo) {\r\n            roomInfo.avatarUrl = avatarUrl;\r\n        }\r\n    },\r\n\r\n    async updateRoomTopic(roomId: string, topic: string) {\r\n        // 不打印\r\n        if (!await this.hasPermission(roomId, 'state_default')) {\r\n            throw new Error('没有修改房间简介的权限');\r\n        }\r\n        const client = this.checkClient();\r\n        await client.setRoomTopic(roomId, topic);\r\n    },\r\n\r\n    // 权限管理\r\n    async updateRoomPermissions(roomId: string, permissions: IRoomPermissions) {\r\n        // 不打印\r\n        if (!await this.hasPermission(roomId, 'state_default')) {\r\n            throw new Error('没有修改房间权限的权限');\r\n        }\r\n        const client = this.checkClient();\r\n        const powerLevels = await client.getStateEvent(roomId, 'm.room.power_levels', '');\r\n        const newContent = {\r\n            ...powerLevels,\r\n            events: {\r\n                ...powerLevels.events,\r\n                'm.room.message': permissions.sendMessages ?? powerLevels.events?.['m.room.message'] ?? 0,\r\n            },\r\n            invite: permissions.invite ?? powerLevels.invite ?? 50,\r\n            kick: permissions.kick ?? powerLevels.kick ?? 50,\r\n            ban: permissions.ban ?? powerLevels.ban ?? 50,\r\n            state_default: permissions.roomSettings ?? powerLevels.state_default ?? 50,\r\n        };\r\n        await client.sendStateEvent(roomId, 'm.room.power_levels' as any, newContent, '');\r\n    },\r\n\r\n    // 成员管理\r\n    async kickMember(roomId: string, userId: string, reason?: string) {\r\n        if (!await this.hasPermission(roomId, 'kick')) {\r\n            throw new Error('没有踢出成员的权限');\r\n        }\r\n\r\n        await matrixClient.client.kick(roomId, userId, reason);\r\n    },\r\n\r\n    async banMember(roomId: string, userId: string, reason?: string) {\r\n        if (!await this.hasPermission(roomId, 'ban')) {\r\n            throw new Error('没有封禁成员的权限');\r\n        }\r\n\r\n        await matrixClient.client.ban(roomId, userId, reason);\r\n    },\r\n\r\n    async unbanMember(roomId: string, userId: string) {\r\n        if (!await this.hasPermission(roomId, 'ban')) {\r\n            throw new Error('没有解除封禁的权限');\r\n        }\r\n\r\n        await matrixClient.client.unban(roomId, userId);\r\n    },\r\n\r\n    // 隐私设置\r\n    async updateRoomVisibility(roomId: string, isPublic: boolean) {\r\n        // 不打印\r\n        const client = this.checkClient();\r\n        const visibility = isPublic ? ('public' as any) : ('private' as any);\r\n        await client.setRoomDirectoryVisibility(roomId, visibility);\r\n    },\r\n\r\n    async updateGuestAccess(roomId: string, allowGuests: boolean) {\r\n        // 不打印\r\n        if (!await this.hasPermission(roomId, 'state_default')) {\r\n            throw new Error('没有修改访客权限的权限');\r\n        }\r\n        const client = this.checkClient();\r\n        const content = {\r\n            guest_access: allowGuests ? 'can_join' : 'forbidden'\r\n        };\r\n        await client.sendStateEvent(roomId, 'm.room.guest_access' as any, content, '');\r\n    },\r\n\r\n    async updateEncryption(roomId: string, enable: boolean) {\r\n        // 不打印\r\n        if (!await this.hasPermission(roomId, 'state_default')) {\r\n            throw new Error('没有修改加密设置的权限');\r\n        }\r\n        const client = this.checkClient();\r\n        if (enable) {\r\n            const content = {\r\n                algorithm: 'm.megolm.v1.aes-sha2'\r\n            };\r\n            await client.sendStateEvent(roomId, 'm.room.encryption' as any, content, '');\r\n        }\r\n    },\r\n\r\n    // 获取当前设置\r\n    async getRoomSettings(roomId: string): Promise<IRoomSettings> {\r\n        const logger = new Log(false, 'im.client.room.roomSettingsService.getRoomSettings');\r\n        logger.pause = false; // 只打印 getRoomSettings 入口\r\n        logger.log('获取房间设置:', roomId);\r\n        try {\r\n            const client = this.checkClient();\r\n            const room = await client.getRoom(roomId);\r\n            if (!room) {\r\n                throw new Error('房间不存在');\r\n            }\r\n            // 获取房间名\r\n            const name = room.name;\r\n            // 获取房间主题\r\n            let topic: string | null = null;\r\n            logger.log('即将请求 m.room.topic');\r\n            try {\r\n                const topicEvent = await client.getStateEvent(roomId, 'm.room.topic', '');\r\n                topic = topicEvent?.topic ?? null;\r\n                logger.log('m.room.topic 返回:', topic);\r\n            } catch {}\r\n            // 获取权限\r\n            let powerLevels: any = {};\r\n            logger.log('即将请求 m.room.power_levels');\r\n            try {\r\n                powerLevels = await client.getStateEvent(roomId, 'm.room.power_levels', '');\r\n                logger.log('m.room.power_levels 返回:', powerLevels);\r\n            } catch {}\r\n            // 获取隐私\r\n            let isEncrypted = false;\r\n            let allowGuestJoin = false;\r\n            let isPublic = false;\r\n            logger.log('即将请求 m.room.encryption');\r\n            try {\r\n                const encryption = await client.getStateEvent(roomId, 'm.room.encryption', '');\r\n                isEncrypted = !!encryption;\r\n                logger.log('m.room.encryption 返回:', encryption);\r\n            } catch {}\r\n            logger.log('即将请求 m.room.guest_access');\r\n            try {\r\n                const guestAccess = await client.getStateEvent(roomId, 'm.room.guest_access', '');\r\n                allowGuestJoin = guestAccess?.guest_access === 'can_join';\r\n                logger.log('m.room.guest_access 返回:', guestAccess);\r\n            } catch {}\r\n            try {\r\n                isPublic = room.getJoinRule?.() === 'public';\r\n            } catch {}\r\n            // 获取头像\r\n            let avatarUrl: string | null = null;\r\n            try {\r\n                avatarUrl = room.getAvatarUrl?.(client.baseUrl, 96, 96, 'crop') || null;\r\n            } catch {}\r\n            const settings: IRoomSettings = {\r\n                name,\r\n                topic: topic ?? '',\r\n                avatarUrl,\r\n                permissions: {\r\n                    sendMessages: powerLevels.events_default || 0,\r\n                    invite: powerLevels.invite || 50,\r\n                    kick: powerLevels.kick || 50,\r\n                    ban: powerLevels.ban || 50,\r\n                    roomSettings: powerLevels.state_default || 50\r\n                },\r\n                privacy: {\r\n                    isPublic,\r\n                    isEncrypted,\r\n                    allowGuestJoin\r\n                }\r\n            };\r\n            logger.log('获取到的房间设置:', settings);\r\n            logger.pause = true; // 打印完毕后关闭\r\n            return settings;\r\n        } catch (error) {\r\n            logger.error('获取房间设置失败:', error);\r\n            throw error;\r\n        }\r\n    },\r\n}; ","import React, { useState } from 'react';\r\nimport {\r\n    TextField,\r\n    Button,\r\n    Box,\r\n    IconButton\r\n} from '@mui/material';\r\nimport { PhotoCamera } from '@mui/icons-material';\r\nimport { roomSettingsService } from '../../client/room/roomSettingsService';\r\nimport toast from 'react-hot-toast';\r\nimport { IRoomSettings } from '../../client/room/types';\r\nimport { Log, useTranslation } from '@fanfanlo';\r\nimport { matrixClient } from '../../client/client';\r\nimport { useProxyWatch } from '@fanfanlo';\r\nimport { roomData } from '@src/im/client/room/data';\r\nconst fileLogger = new Log(false, 'im.components.room-settings.BasicSettings');\r\nfileLogger.childrenPaused = true;\r\nfileLogger.pause = true;\r\ninterface IBasicSettingsProps {\r\n    roomId: string;\r\n    settings: IRoomSettings | null;\r\n    onChange: () => void;\r\n}\r\n\r\nexport const BasicSettings = ({\r\n    roomId,\r\n    settings,\r\n    onChange\r\n}: IBasicSettingsProps) => {\r\n    const logger = fileLogger.sub(false, 'BasicSettings');\r\n    // logger.pause = true;\r\n    logger.log('props=', {\r\n        roomId,\r\n        settings,\r\n        onChange\r\n    });\r\n    const { t } = useTranslation('homepage/im/components/room-settings/content');\r\n    // 直接 watch proxy 字段\r\n    const [name] = useProxyWatch(roomData.roomSettings.settings, [roomId, 'name'], roomData.roomSettings.settings[roomId]?.name || '')\r\n    // const [name] = useProxyWatch(settings||{}, ['name'], settings?.name || '');\r\n    const [topic] = useProxyWatch(roomData.roomSettings.settings, [roomId, 'topic'], roomData.roomSettings.settings[roomId]?.topic || '');\r\n    logger.log('name=', name);\r\n    logger.log('topic=', topic);\r\n    const [loading, setLoading] = useState(false);\r\n    // 本地编辑缓存\r\n    const [editData, setEditData] = useState<{ name: string; topic: string } | null>(null);\r\n\r\n    // 提交时优先用本地缓存，否则用 proxy\r\n    const handleSubmit = async (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        try {\r\n            setLoading(true);\r\n            const newName = editData ? editData.name : name;\r\n            const newTopic = editData ? editData.topic : topic;\r\n            if (newName !== name) {\r\n                await roomSettingsService.updateRoomName(roomId, newName);\r\n            }\r\n            if (newTopic !== topic) {\r\n                await roomSettingsService.updateRoomTopic(roomId, newTopic);\r\n            }\r\n            matrixClient.clientOnEventDispatcher.emit('room.update', roomId);\r\n            toast.success(t('BasicSettings.toast.success'));\r\n            setEditData(null); // 提交后清空本地缓存\r\n            onChange();\r\n        } catch (error: any) {\r\n            toast.error(error.message || t('BasicSettings.toast.error.default'));\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleAvatarUpload = async (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const file = event.target.files?.[0];\r\n        if (!file) return;\r\n        try {\r\n            setLoading(true);\r\n            // 这里需要实现文件上传到 Matrix 媒体服务器的逻辑\r\n            // const mxcUrl = await uploadToMatrixMediaServer(file);\r\n            // await roomSettingsService.updateRoomAvatar(roomId, mxcUrl);\r\n            matrixClient.clientOnEventDispatcher.emit('room.update', roomId);\r\n            toast.success(t('BasicSettings.toast.success'));\r\n            onChange();\r\n        } catch (error: any) {\r\n            toast.error(error.message || t('BasicSettings.toast.error.avatar'));\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    // 编辑时用本地缓存，否则用 proxy\r\n    const getValue = (key: 'name' | 'topic') => {\r\n        if (editData) return editData[key];\r\n        return key === 'name' ? name : topic;\r\n    };\r\n\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n        const { name, value } = e.target;\r\n        setEditData(prev => ({\r\n            ...(prev || { name, topic }),\r\n            [name]: value\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <Box component=\"form\" onSubmit={handleSubmit} sx={{ '& > *': { mb: 2 } }}>\r\n            <TextField\r\n                fullWidth\r\n                required\r\n                label={t('BasicSettings.form.name.label')}\r\n                name=\"name\"\r\n                value={getValue('name')}\r\n                onChange={handleChange}\r\n                disabled={loading}\r\n            />\r\n\r\n            <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, my: 2 }}>\r\n                <input\r\n                    accept=\"image/*\"\r\n                    style={{ display: 'none' }}\r\n                    id=\"avatar-upload\"\r\n                    type=\"file\"\r\n                    onChange={handleAvatarUpload}\r\n                    disabled={loading}\r\n                />\r\n                <label htmlFor=\"avatar-upload\">\r\n                    <IconButton\r\n                        color=\"primary\"\r\n                        component=\"span\"\r\n                        disabled={loading}\r\n                    >\r\n                        <PhotoCamera />\r\n                    </IconButton>\r\n                </label>\r\n                {settings?.avatarUrl && (\r\n                    <Box\r\n                        component=\"img\"\r\n                        src={settings.avatarUrl}\r\n                        alt={t('BasicSettings.form.avatar.alt')}\r\n                        sx={{\r\n                            width: 64,\r\n                            height: 64,\r\n                            borderRadius: 1\r\n                        }}\r\n                    />\r\n                )}\r\n            </Box>\r\n\r\n            <TextField\r\n                fullWidth\r\n                multiline\r\n                rows={4}\r\n                label={t('BasicSettings.form.topic.label')}\r\n                name=\"topic\"\r\n                value={getValue('topic')}\r\n                onChange={handleChange}\r\n                disabled={loading}\r\n            />\r\n\r\n            <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                disabled={loading}\r\n                sx={{ mt: 2 }}\r\n            >\r\n                {t('BasicSettings.form.submit')}\r\n            </Button>\r\n        </Box>\r\n    );\r\n}; ","import React, { useState } from 'react';\r\nimport {\r\n    Box,\r\n    TextField,\r\n    Button,\r\n    Tooltip,\r\n    Typography\r\n} from '@mui/material';\r\nimport { roomSettingsService } from '../../client/room/roomSettingsService';\r\nimport toast from 'react-hot-toast';\r\nimport type { IRoomSettings, IRoomPermissions } from './types';\r\nimport { useTranslation } from '@fanfanlo';\r\n\r\ninterface IPermissionSettingsProps {\r\n    roomId: string;\r\n    settings: IRoomSettings | null;\r\n    onChange: () => void;\r\n}\r\n\r\nexport const PermissionSettings = ({\r\n    roomId,\r\n    settings,\r\n    onChange\r\n}: IPermissionSettingsProps) => {\r\n    const { t } = useTranslation('homepage/im/components/room-settings/content');\r\n    const [loading, setLoading] = useState(false);\r\n    const [formData, setFormData] = useState<IRoomPermissions>({\r\n        sendMessages: settings?.permissions?.sendMessages ?? 0,\r\n        invite: settings?.permissions?.invite ?? 50,\r\n        kick: settings?.permissions?.kick ?? 50,\r\n        ban: settings?.permissions?.ban ?? 50,\r\n        roomSettings: settings?.permissions?.roomSettings ?? 50,\r\n    });\r\n\r\n    const handleSubmit = async (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        try {\r\n            setLoading(true);\r\n            await roomSettingsService.updateRoomPermissions(roomId, formData);\r\n            toast.success(t('PermissionSettings.toast.success'));\r\n            onChange();\r\n        } catch (error: any) {\r\n            toast.error(error.message || t('PermissionSettings.toast.error'));\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const { name, value } = e.target;\r\n        setFormData(prev => ({\r\n            ...prev,\r\n            [name]: Number(value)\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <Box component=\"form\" onSubmit={handleSubmit} sx={{ '& > *': { mb: 2 } }}>\r\n            <Tooltip title={t('PermissionSettings.form.sendMessages.tooltip')}>\r\n                <TextField\r\n                    fullWidth\r\n                    type=\"number\"\r\n                    label={t('PermissionSettings.form.sendMessages.label')}\r\n                    name=\"sendMessages\"\r\n                    value={formData.sendMessages}\r\n                    onChange={handleChange}\r\n                    disabled={loading}\r\n                    InputProps={{\r\n                        inputProps: { min: 0, max: 100 }\r\n                    }}\r\n                />\r\n            </Tooltip>\r\n\r\n            <Tooltip title={t('PermissionSettings.form.invite.tooltip')}>\r\n                <TextField\r\n                    fullWidth\r\n                    type=\"number\"\r\n                    label={t('PermissionSettings.form.invite.label')}\r\n                    name=\"invite\"\r\n                    value={formData.invite}\r\n                    onChange={handleChange}\r\n                    disabled={loading}\r\n                    InputProps={{\r\n                        inputProps: { min: 0, max: 100 }\r\n                    }}\r\n                />\r\n            </Tooltip>\r\n\r\n            <Tooltip title={t('PermissionSettings.form.kick.tooltip')}>\r\n                <TextField\r\n                    fullWidth\r\n                    type=\"number\"\r\n                    label={t('PermissionSettings.form.kick.label')}\r\n                    name=\"kick\"\r\n                    value={formData.kick}\r\n                    onChange={handleChange}\r\n                    disabled={loading}\r\n                    InputProps={{\r\n                        inputProps: { min: 0, max: 100 }\r\n                    }}\r\n                />\r\n            </Tooltip>\r\n\r\n            <Tooltip title={t('PermissionSettings.form.ban.tooltip')}>\r\n                <TextField\r\n                    fullWidth\r\n                    type=\"number\"\r\n                    label={t('PermissionSettings.form.ban.label')}\r\n                    name=\"ban\"\r\n                    value={formData.ban}\r\n                    onChange={handleChange}\r\n                    disabled={loading}\r\n                    InputProps={{\r\n                        inputProps: { min: 0, max: 100 }\r\n                    }}\r\n                />\r\n            </Tooltip>\r\n\r\n            <Tooltip title={t('PermissionSettings.form.roomSettings.tooltip')}>\r\n                <TextField\r\n                    fullWidth\r\n                    type=\"number\"\r\n                    label={t('PermissionSettings.form.roomSettings.label')}\r\n                    name=\"roomSettings\"\r\n                    value={formData.roomSettings}\r\n                    onChange={handleChange}\r\n                    disabled={loading}\r\n                    InputProps={{\r\n                        inputProps: { min: 0, max: 100 }\r\n                    }}\r\n                />\r\n            </Tooltip>\r\n\r\n            <Typography variant=\"caption\" color=\"text.secondary\" sx={{ display: 'block', mb: 2 }}>\r\n                {t('PermissionSettings.description')}\r\n            </Typography>\r\n\r\n            <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                disabled={loading}\r\n            >\r\n                {t('PermissionSettings.form.submit')}\r\n            </Button>\r\n        </Box>\r\n    );\r\n}; ","import React, { useState } from 'react';\r\nimport {\r\n    Box,\r\n    FormControlLabel,\r\n    Switch,\r\n    Button,\r\n    Alert,\r\n    Typography\r\n} from '@mui/material';\r\nimport { roomSettingsService } from '../../client/room/roomSettingsService';\r\nimport toast from 'react-hot-toast';\r\nimport type { IRoomSettings, IRoomPrivacy } from './types';\r\nimport { useTranslation } from '@fanfanlo';\r\n\r\ninterface IPrivacySettingsProps {\r\n    roomId: string;\r\n    settings: IRoomSettings | null;\r\n    onChange: () => void;\r\n}\r\n\r\nexport const PrivacySettings = ({\r\n    roomId,\r\n    settings,\r\n    onChange\r\n}: IPrivacySettingsProps) => {\r\n    const { t } = useTranslation('homepage/im/components/room-settings/content');\r\n    const [loading, setLoading] = useState(false);\r\n    const [formData, setFormData] = useState<IRoomPrivacy>({\r\n        isPublic: settings?.privacy?.isPublic ?? false,\r\n        isEncrypted: settings?.privacy?.isEncrypted ?? false,\r\n        allowGuestJoin: settings?.privacy?.allowGuestJoin ?? false,\r\n    });\r\n\r\n    const handleSubmit = async (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        try {\r\n            setLoading(true);\r\n\r\n            // 更新房间可见性\r\n            if (formData.isPublic !== settings?.privacy.isPublic) {\r\n                await roomSettingsService.updateRoomVisibility(roomId, formData.isPublic);\r\n            }\r\n\r\n            // 更新访客访问权限\r\n            if (formData.allowGuestJoin !== settings?.privacy.allowGuestJoin) {\r\n                await roomSettingsService.updateGuestAccess(roomId, formData.allowGuestJoin);\r\n            }\r\n\r\n            // 更新加密设置\r\n            if (formData.isEncrypted && !settings?.privacy.isEncrypted) {\r\n                await roomSettingsService.updateEncryption(roomId, true);\r\n            }\r\n\r\n            toast.success(t('PrivacySettings.toast.success'));\r\n            onChange();\r\n        } catch (error: any) {\r\n            toast.error(error.message || t('PrivacySettings.toast.error'));\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const { name, checked } = event.target;\r\n        setFormData(prev => ({\r\n            ...prev,\r\n            [name]: checked\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <Box component=\"form\" onSubmit={handleSubmit} sx={{ '& > *': { mb: 2 } }}>\r\n            <FormControlLabel\r\n                control={\r\n                    <Switch\r\n                        checked={formData.isPublic}\r\n                        onChange={handleChange}\r\n                        name=\"isPublic\"\r\n                        disabled={loading}\r\n                    />\r\n                }\r\n                label={\r\n                    <Box>\r\n                        <Typography>{t('PrivacySettings.form.isPublic.label')}</Typography>\r\n                        <Typography variant=\"caption\" color=\"text.secondary\">\r\n                            {t('PrivacySettings.form.isPublic.description')}\r\n                        </Typography>\r\n                    </Box>\r\n                }\r\n            />\r\n\r\n            <FormControlLabel\r\n                control={\r\n                    <Switch\r\n                        checked={formData.allowGuestJoin}\r\n                        onChange={handleChange}\r\n                        name=\"allowGuestJoin\"\r\n                        disabled={loading}\r\n                    />\r\n                }\r\n                label={\r\n                    <Box>\r\n                        <Typography>{t('PrivacySettings.form.allowGuestJoin.label')}</Typography>\r\n                        <Typography variant=\"caption\" color=\"text.secondary\">\r\n                            {t('PrivacySettings.form.allowGuestJoin.description')}\r\n                        </Typography>\r\n                    </Box>\r\n                }\r\n            />\r\n\r\n            <FormControlLabel\r\n                control={\r\n                    <Switch\r\n                        checked={formData.isEncrypted}\r\n                        onChange={handleChange}\r\n                        name=\"isEncrypted\"\r\n                        disabled={loading || settings?.privacy?.isEncrypted}\r\n                    />\r\n                }\r\n                label={\r\n                    <Box>\r\n                        <Typography>{t('PrivacySettings.form.isEncrypted.label')}</Typography>\r\n                        <Typography variant=\"caption\" color=\"text.secondary\">\r\n                            {t('PrivacySettings.form.isEncrypted.description')}\r\n                        </Typography>\r\n                    </Box>\r\n                }\r\n            />\r\n\r\n            {settings?.privacy?.isEncrypted && (\r\n                <Alert\r\n                    severity=\"info\"\r\n                    sx={{ mb: 2 }}\r\n                >\r\n                    {t('PrivacySettings.form.isEncrypted.alert')}\r\n                </Alert>\r\n            )}\r\n\r\n            <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                disabled={loading}\r\n            >\r\n                {t('PrivacySettings.form.submit')}\r\n            </Button>\r\n        </Box>\r\n    );\r\n}; ","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Box,\r\n    TextField,\r\n    Button,\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogActions,\r\n    IconButton,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    Paper,\r\n    Alert,\r\n    Snackbar,\r\n    TablePagination\r\n} from '@mui/material';\r\nimport {\r\n    Block as BlockIcon,\r\n    PersonRemove as PersonRemoveIcon,\r\n    Search as SearchIcon\r\n} from '@mui/icons-material';\r\nimport { roomSettingsService } from '../../client/room/roomSettingsService';\r\nimport { roomService } from '../../client/room/roomService';\r\nimport toast from 'react-hot-toast';\r\nimport type { IRoomSettings, IRoomMember } from '../../client/room/types';\r\nimport { useTranslation } from '@fanfanlo';\r\nimport { matrixInivte } from '../../client/invite';\r\n\r\ninterface IMemberManagementProps {\r\n    roomId: string;\r\n    settings: IRoomSettings | null;\r\n    onChange: () => void;\r\n}\r\n\r\nconst ConfirmDialog = ({\r\n    open,\r\n    title,\r\n    content,\r\n    onConfirm,\r\n    onCancel\r\n}: IConfirmDialogProps) => {\r\n    const { t } = useTranslation('homepage/im/components/room-settings/content');\r\n    return (\r\n        <Dialog open={open} onClose={onCancel}>\r\n            <DialogTitle>{title}</DialogTitle>\r\n            <DialogContent>{content}</DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={onCancel}>{t('MemberManagement.confirmDialog.buttons.cancel')}</Button>\r\n                <Button onClick={onConfirm} color=\"error\">\r\n                    {t('MemberManagement.confirmDialog.buttons.confirm')}\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport const MemberManagement = ({\r\n    roomId,\r\n    settings,\r\n    onChange\r\n}: IMemberManagementProps) => {\r\n    const { t } = useTranslation('homepage/im/components/room-settings/content');\r\n    const [loading, setLoading] = useState(false);\r\n    const [members, setMembers] = useState<IRoomMember[]>([]);\r\n    const [searchText, setSearchText] = useState('');\r\n    const [message, setMessage] = useState<{type: 'success' | 'error', text: string} | null>(null);\r\n    const [confirmDialog, setConfirmDialog] = useState<{\r\n        open: boolean;\r\n        title: string;\r\n        content: string;\r\n        onConfirm: () => void;\r\n    }>({\r\n        open: false,\r\n        title: '',\r\n        content: '',\r\n        onConfirm: () => {}\r\n    });\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n    const [inviteDialogOpen, setInviteDialogOpen] = useState(false);\r\n    const [inviteUserId, setInviteUserId] = useState('');\r\n    const [inviteLoading, setInviteLoading] = useState(false);\r\n    const [inviteError, setInviteError] = useState<string | null>(null);\r\n\r\n    useEffect(() => {\r\n        loadMembers();\r\n    }, [roomId]);\r\n\r\n    const loadMembers = async () => {\r\n        try {\r\n            setLoading(true);\r\n            const roomMembers = await roomService.getRoomMembers(roomId);\r\n            setMembers(roomMembers);\r\n        } catch (error) {\r\n            console.error('加载成员列表失败:', error);\r\n            toast.error(t('MemberManagement.toast.loadError'));\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleKickMember = (userId: string) => {\r\n        setConfirmDialog({\r\n            open: true,\r\n            title: t('MemberManagement.confirmDialog.kick.title'),\r\n            content: t('MemberManagement.confirmDialog.kick.content'),\r\n            onConfirm: async () => {\r\n                try {\r\n                    await roomSettingsService.kickMember(roomId, userId);\r\n                    toast.success(t('MemberManagement.toast.kick.success'));\r\n                    loadMembers();\r\n                    onChange();\r\n                } catch (error: any) {\r\n                    toast.error(error.message || t('MemberManagement.toast.kick.error'));\r\n                }\r\n                setConfirmDialog(prev => ({ ...prev, open: false }));\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleBanMember = (userId: string) => {\r\n        setConfirmDialog({\r\n            open: true,\r\n            title: t('MemberManagement.confirmDialog.ban.title'),\r\n            content: t('MemberManagement.confirmDialog.ban.content'),\r\n            onConfirm: async () => {\r\n                try {\r\n                    await roomSettingsService.banMember(roomId, userId);\r\n                    toast.success(t('MemberManagement.toast.ban.success'));\r\n                    loadMembers();\r\n                    onChange();\r\n                } catch (error: any) {\r\n                    toast.error(error.message || t('MemberManagement.toast.ban.error'));\r\n                }\r\n                setConfirmDialog(prev => ({ ...prev, open: false }));\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleInvite = async () => {\r\n        setInviteLoading(true);\r\n        setInviteError(null);\r\n        try {\r\n            const result = await matrixInivte.inviteToRoom(roomId, inviteUserId.trim());\r\n            if (result.success) {\r\n                toast.success(t('MemberManagement.invite.success'));\r\n                setInviteDialogOpen(false);\r\n                setInviteUserId('');\r\n                loadMembers();\r\n                onChange();\r\n            } else {\r\n                setInviteError(result.error || t('MemberManagement.invite.error'));\r\n            }\r\n        } catch (e: any) {\r\n            setInviteError(e.message || t('MemberManagement.invite.error'));\r\n        } finally {\r\n            setInviteLoading(false);\r\n        }\r\n    };\r\n\r\n    const filteredMembers = members.filter(member =>\r\n        member.displayName?.toLowerCase().includes(searchText.toLowerCase()) ||\r\n        member.userId.toLowerCase().includes(searchText.toLowerCase())\r\n    );\r\n\r\n    const handleChangePage = (event: unknown, newPage: number) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    return (\r\n        <Box>\r\n            <Box sx={{ mb: 2, display: 'flex', alignItems: 'center' }}>\r\n                <TextField\r\n                    size=\"small\"\r\n                    placeholder={t('MemberManagement.search.placeholder')}\r\n                    value={searchText}\r\n                    onChange={e => setSearchText(e.target.value)}\r\n                    sx={{ width: 300 }}\r\n                    InputProps={{\r\n                        startAdornment: <SearchIcon color=\"action\" sx={{ mr: 1 }} />\r\n                    }}\r\n                />\r\n                <Button\r\n                    variant=\"contained\"\r\n                    sx={{ ml: 2 }}\r\n                    onClick={() => setInviteDialogOpen(true)}\r\n                >\r\n                    {t('MemberManagement.invite.button')}\r\n                </Button>\r\n            </Box>\r\n\r\n            <TableContainer component={Paper}>\r\n                <Table>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>{t('MemberManagement.table.columns.name')}</TableCell>\r\n                            <TableCell>{t('MemberManagement.table.columns.userId')}</TableCell>\r\n                            <TableCell align=\"right\">{t('MemberManagement.table.columns.actions')}</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {filteredMembers\r\n                            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                            .map((member) => (\r\n                                <TableRow key={member.userId}>\r\n                                    <TableCell>\r\n                                        <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                            {member.avatarUrl && (\r\n                                                <Box\r\n                                                    component=\"img\"\r\n                                                    src={member.avatarUrl}\r\n                                                    alt={t('MemberManagement.table.avatar.alt')}\r\n                                                    sx={{\r\n                                                        width: 24,\r\n                                                        height: 24,\r\n                                                        borderRadius: '50%',\r\n                                                        mr: 1\r\n                                                    }}\r\n                                                />\r\n                                            )}\r\n                                            {member.displayName || member.userId}\r\n                                        </Box>\r\n                                    </TableCell>\r\n                                    <TableCell>{member.userId}</TableCell>\r\n                                    <TableCell align=\"right\">\r\n                                        <IconButton\r\n                                            size=\"small\"\r\n                                            onClick={() => handleKickMember(member.userId)}\r\n                                            title={t('MemberManagement.table.actions.kick')}\r\n                                        >\r\n                                            <PersonRemoveIcon />\r\n                                        </IconButton>\r\n                                        <IconButton\r\n                                            size=\"small\"\r\n                                            onClick={() => handleBanMember(member.userId)}\r\n                                            title={t('MemberManagement.table.actions.ban')}\r\n                                            color=\"error\"\r\n                                        >\r\n                                            <BlockIcon />\r\n                                        </IconButton>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                    </TableBody>\r\n                </Table>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[10, 25, 50]}\r\n                    component=\"div\"\r\n                    count={filteredMembers.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onPageChange={handleChangePage}\r\n                    onRowsPerPageChange={handleChangeRowsPerPage}\r\n                    labelRowsPerPage={t('MemberManagement.table.pagination.rowsPerPage')}\r\n                />\r\n            </TableContainer>\r\n\r\n            <ConfirmDialog\r\n                open={confirmDialog.open}\r\n                title={confirmDialog.title}\r\n                content={confirmDialog.content}\r\n                onConfirm={confirmDialog.onConfirm}\r\n                onCancel={() => setConfirmDialog(prev => ({ ...prev, open: false }))}\r\n            />\r\n\r\n            <Snackbar\r\n                open={!!message}\r\n                autoHideDuration={6000}\r\n                onClose={() => setMessage(null)}\r\n            >\r\n                <Alert\r\n                    onClose={() => setMessage(null)}\r\n                    severity={message?.type}\r\n                    sx={{ width: '100%' }}\r\n                >\r\n                    {message?.text}\r\n                </Alert>\r\n            </Snackbar>\r\n\r\n            <Dialog open={inviteDialogOpen} onClose={() => setInviteDialogOpen(false)}>\r\n                <DialogTitle>{t('MemberManagement.invite.title')}</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        label={t('MemberManagement.invite.inputLabel')}\r\n                        fullWidth\r\n                        value={inviteUserId}\r\n                        onChange={e => setInviteUserId(e.target.value)}\r\n                        disabled={inviteLoading}\r\n                    />\r\n                    {inviteError && <Alert severity=\"error\" sx={{ mt: 2 }}>{inviteError}</Alert>}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setInviteDialogOpen(false)} disabled={inviteLoading}>\r\n                        {t('MemberManagement.invite.cancel')}\r\n                    </Button>\r\n                    <Button onClick={handleInvite} disabled={inviteLoading || !inviteUserId.trim()} variant=\"contained\">\r\n                        {inviteLoading ? t('MemberManagement.invite.loading') : t('MemberManagement.invite.confirm')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </Box>\r\n    );\r\n};","import React, { useState } from 'react';\r\nimport {\r\n    Box,\r\n    Paper,\r\n    Typography,\r\n    Tabs,\r\n    Tab,\r\n    CircularProgress\r\n} from '@mui/material';\r\nimport { BasicSettings } from './BasicSettings';\r\nimport { PermissionSettings } from './PermissionSettings';\r\nimport { PrivacySettings } from './PrivacySettings';\r\nimport { MemberManagement } from './MemberManagement';\r\nimport { useTranslation } from '@fanfanlo';\r\nimport { roomData } from '../../client/room/data';\r\nimport { IRoomSettings } from '../../client/room/types';\r\nimport { useProxyWatch } from '@fanfanlo';\r\n\r\ninterface TabPanelProps {\r\n    children?: React.ReactNode;\r\n    index: number;\r\n    value: number;\r\n}\r\n\r\nfunction TabPanel(props: TabPanelProps) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`room-settings-tabpanel-${index}`}\r\n            aria-labelledby={`room-settings-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box sx={{ p: 3 }}>\r\n                    {children}\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const RoomSettingsContent = ({\r\n    roomId\r\n}: {\r\n    roomId: string;\r\n}) => {\r\n    const { t } = useTranslation('homepage/im/components/room-settings/content');\r\n    const [tabValue, setTabValue] = useState(0);\r\n    \r\n    // 监听房间设置数据和加载状态\r\n    const [currentSettings] = useProxyWatch(\r\n        roomData.roomSettings.settings,\r\n        [roomId],\r\n        roomData.roomSettings.settings[roomId]\r\n    );\r\n    const [loading] = useProxyWatch(\r\n        roomData.roomSettings.isLoading,\r\n        [roomId],\r\n        roomData.roomSettings.isLoading[roomId]\r\n    );\r\n\r\n    console.log('currentSettings=', currentSettings);\r\n    console.log('loading=', loading);\r\n    console.log('roomId=', roomId);\r\n    const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {\r\n        setTabValue(newValue);\r\n    };\r\n\r\n    // 添加设置变更处理函数\r\n    const handleSettingsChange = () => {\r\n        // 这里可以添加一些 UI 相关的更新逻辑\r\n        // 数据已经通过 roomData 和事件系统更新了\r\n        // 但可能需要触发一些 UI 刷新或其他操作\r\n    };\r\n\r\n    if (loading) {\r\n        return (\r\n            <Box sx={{ display: 'flex', justifyContent: 'center', mt: 4 }}>\r\n                <CircularProgress />\r\n            </Box>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Box sx={{ maxWidth: 'md', mx: 'auto', mt: 4, px: 2 }}>\r\n            <Paper elevation={0} sx={{ mb: 3 }}>\r\n                <Typography variant=\"h5\" component=\"h2\" gutterBottom>\r\n                    {t('RoomSettingsContent.title')}\r\n                </Typography>\r\n                <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n                    <Tabs\r\n                        value={tabValue}\r\n                        onChange={handleTabChange}\r\n                        variant=\"scrollable\"\r\n                        scrollButtons=\"auto\"\r\n                    >\r\n                        <Tab label={t('RoomSettingsContent.tabs.basic')} />\r\n                        <Tab label={t('RoomSettingsContent.tabs.permission')} />\r\n                        <Tab label={t('RoomSettingsContent.tabs.privacy')} />\r\n                        <Tab label={t('RoomSettingsContent.tabs.member')} />\r\n                    </Tabs>\r\n                </Box>\r\n\r\n                <TabPanel value={tabValue} index={0}>\r\n                    <BasicSettings\r\n                        roomId={roomId}\r\n                        settings={currentSettings}\r\n                        onChange={handleSettingsChange}\r\n                    />\r\n                </TabPanel>\r\n                <TabPanel value={tabValue} index={1}>\r\n                    <PermissionSettings\r\n                        roomId={roomId}\r\n                        settings={currentSettings}\r\n                        onChange={handleSettingsChange}\r\n                    />\r\n                </TabPanel>\r\n                <TabPanel value={tabValue} index={2}>\r\n                    <PrivacySettings\r\n                        roomId={roomId}\r\n                        settings={currentSettings}\r\n                        onChange={handleSettingsChange}\r\n                    />\r\n                </TabPanel>\r\n                <TabPanel value={tabValue} index={3}>\r\n                    <MemberManagement\r\n                        roomId={roomId}\r\n                        settings={currentSettings}\r\n                        onChange={handleSettingsChange}\r\n                    />\r\n                </TabPanel>\r\n            </Paper>\r\n        </Box>\r\n    );\r\n}; ","\r\nimport { useRouter } from 'next/router';\r\nimport { useEffect } from 'react';\r\nimport { useTranslation } from \"@fanfanlo\";\r\nimport { AppbarContainer, AppShell } from \"@app/ui\";\r\nimport { RoomSettingsContent } from '@src/im/components/room-settings/RoomSettingsContent';\r\n\r\nexport default function RoomPage() {\r\n  const { t } = useTranslation(\"homepage/pages/im/room/room-settings/content\");\r\n  const router = useRouter();\r\n  const { id: roomId } = router.query;\r\n\r\n  useEffect(() => {\r\n    // 如果没有roomId，重定向到聊天列表\r\n    if (!roomId && router.isReady) {\r\n      router.push('/im');\r\n    }\r\n  }, [roomId, router]);\r\n\r\n  if (!roomId) {\r\n    return (\r\n      <AppShell>\r\n        <AppbarContainer appbarProps={{ title: t(\"content.title\"), back: true }} />\r\n      </AppShell>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <AppShell>\r\n      \r\n      <AppbarContainer appbarProps={{ title: t(\"content.title\"), back: true }}>\r\n        <RoomSettingsContent roomId={roomId as string} />\r\n      </AppbarContainer>\r\n    </AppShell>\r\n  );\r\n}","import { Dispatcher } from \"@fanfanlo\"\r\nimport { DispatcherUnsubscribe } from \"@fanfanlo\"\r\n\r\nconst dipsatcher = new Dispatcher()\r\ninterface IStaticModel{\r\n    dipsatcher:Dispatcher\r\n    screenLockCount:number\r\n    switchPage:()=>void\r\n    listenSwitchPage:(callback:()=>void)=>DispatcherUnsubscribe \r\n}\r\nexport const staticModel:IStaticModel = {\r\n    dipsatcher,\r\n    screenLockCount:0,\r\n    switchPage:async()=>{\r\n        dipsatcher.dispatch(\"switchPage\")\r\n        staticModel.screenLockCount = 0\r\n    },\r\n    listenSwitchPage:(callback:()=>void)=>{\r\n        return dipsatcher.addListener(\"switchPage\",callback)\r\n    }\r\n}   \r\n","import { PropsWithChildren } from \"react\";\r\nimport { AnimatePresence, motion } from \"framer-motion\";\r\nimport { useRouter } from \"next/router\";\r\n\r\n\r\nexport function PageTransition({ children }: PropsWithChildren) {\r\n    const router = useRouter()\r\n    return (\r\n\r\n        <AnimatePresence mode=\"sync\">\r\n            <motion.div\r\n                key={router.route}\r\n                initial={{ opacity: 0, y: 10 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                exit={{ opacity: 0, y: -110 }}\r\n                transition={{ duration: 0.3 }}\r\n            >\r\n                {children}\r\n            </motion.div>\r\n        </AnimatePresence>\r\n    )\r\n}","import { staticModel } from \"@app/static\";\r\nimport { Box } from \"@mui/material\";\r\nimport { useEffect } from \"react\";\r\nimport { PageTransition } from \"../motion\";\r\nlet idCount = 0\r\nexport function PageShell({children}:{children:React.ReactNode}){\r\n    const id = `app-shell-${idCount++}`\r\n    useEffect(()=>{\r\n        const box = document.querySelector(`#${id}`)\r\n        const unlisten = staticModel.listenSwitchPage(()=>{\r\n            if(!box)return\r\n        })\r\n        if(!box)return\r\n        box.addEventListener(\"click\",(e)=>{\r\n            if(staticModel.screenLockCount == 0)return\r\n            e.stopPropagation()\r\n            e.preventDefault()\r\n        })\r\n        return ()=>{\r\n            unlisten()\r\n        }\r\n    },[])\r\n    return (\r\n        <Box id={id}>\r\n            <PageTransition>\r\n                {children}  \r\n            </PageTransition>\r\n        </Box>\r\n    )\r\n}\r\n","import { AppBar, Box, Container, CssBaseline, Fab, Fade, Slide, Toolbar, Typography, useScrollTrigger } from \"@mui/material\";\r\nimport { PropsWithChildren, ReactNode } from \"react\";\r\n// import {AndroidPageContent} from \"../../\";\r\nimport { browserHistoryUtils, IDispatcher } from \"@fanfanlo\";\r\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\r\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\r\nimport * as React from \"react\";\r\nimport { useRouter } from \"next/router\";\r\nimport { PageShell } from \"../app/PageShell\";\r\nimport shadows from \"@mui/material/styles/shadows\";\r\nimport AndroidPageContent from \"../page/AndroidPageContent\";\r\nimport { IAppBarBackAskEvent } from \"@app/static\";\r\nimport { ITitleI18nConf } from \"../page\";\r\ninterface Props {\r\n    /**\r\n     * Injected by the documentation to work in an iframe.\r\n     * You won't need it on your project.\r\n     */\r\n    window?: () => Window;\r\n    children?: React.ReactElement<unknown>;\r\n}\r\n\r\nfunction HideOnScroll(props: Props) {\r\n    const { children, window } = props;\r\n    // Note that you normally won't need to set the window ref as useScrollTrigger\r\n    // will default to window.\r\n    // This is only being set here because the demo is in an iframe.\r\n    const trigger = useScrollTrigger({\r\n        target: window ? window() : undefined,\r\n    });\r\n\r\n    return (\r\n        <Slide appear={false} direction=\"down\" in={!trigger}>\r\n            {children ?? <div />}\r\n        </Slide>\r\n    );\r\n}\r\nexport interface IAppbarProps extends PropsWithChildren {\r\n    title: ReactNode\r\n    back: boolean\r\n    backHandler?: () => boolean\r\n    backDispatcher?:IDispatcher\r\n    toolbar?:ReactNode\r\n    toolbarContent?:ReactNode\r\n}\r\nexport function Appbar({ title }: { title: ReactNode } & PropsWithChildren) {\r\n    return (\r\n\r\n        <AppBar color={\"inherit\"}>\r\n            <Toolbar>\r\n                <Typography variant=\"h6\" component=\"div\">\r\n                    {title}\r\n                </Typography>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\ninterface IAppbarContainerProps extends PropsWithChildren {\r\n    appbarProps: IAppbarProps\r\n    titleConf?:ITitleI18nConf\r\n    reload?: boolean\r\n}\r\n\r\n// export interface IAppBarBackAskEvent{\r\n//     defaultPrevented:boolean\r\n// }\r\n\r\nfunction ScrollTop(props: Props) {\r\n    const { children, window } = props;\r\n    // Note that you normally won't need to set the window ref as useScrollTrigger\r\n    // will default to window.\r\n    // This is only being set here because the demo is in an iframe.\r\n    const trigger = useScrollTrigger({\r\n        target: window ? window() : undefined,\r\n        disableHysteresis: true,\r\n        threshold: 100,\r\n    });\r\n\r\n    const handleClick = (event: React.MouseEvent<HTMLDivElement>) => {\r\n        const anchor = (\r\n            (event.target as HTMLDivElement).ownerDocument || document\r\n        ).querySelector('#back-to-top-anchor');\r\n\r\n        if (anchor) {\r\n            anchor.scrollIntoView({\r\n                block: 'center',\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Fade in={trigger}>\r\n            <Box data-id=\"content-scroll-top-button\"\r\n                onClick={handleClick}\r\n                role=\"presentation\"\r\n                sx={{ position: 'fixed', bottom: 16, right: 16 }}\r\n            >\r\n                {children}\r\n            </Box>\r\n        </Fade>\r\n    );\r\n}\r\nexport function AppbarContainer(props: IAppbarContainerProps) {\r\n    const { children, appbarProps, titleConf, reload } = props;\r\n    const router = useRouter()\r\n    function handleBack(){\r\n        // 本想抽象成底层一个方法，但是考虑了一下router需要注入或者是一个callback，似乎像现在这样判断一下event也可以。回头继续观察一下吧。\r\n        const event = browserHistoryUtils.askHistoryBack()\r\n        if(event.defaultPrevented)return\r\n        if(appbarProps.backDispatcher){\r\n            const e:IAppBarBackAskEvent = {defaultPrevented:false}\r\n            appbarProps.backDispatcher.dispatch('back',e)\r\n            if(e.defaultPrevented)return\r\n        }\r\n        router.back()\r\n    }\r\n    return (\r\n        <PageShell>\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n            <HideOnScroll {...props}>\r\n                <AppBar color=\"inherit\">\r\n                    {appbarProps.toolbar ? \r\n                    appbarProps.toolbar:\r\n                    <Toolbar>\r\n                        <KeyboardArrowLeft onClick={handleBack} />\r\n                        {appbarProps.title}\r\n                    </Toolbar>\r\n                    }\r\n                </AppBar>\r\n            </HideOnScroll>\r\n            <Toolbar id=\"back-to-top-anchor\" />\r\n            <Container sx={{padding:\"0\", marginTop:\"17px\"}}>\r\n                <AndroidPageContent titleConf={titleConf} reload={reload}>\r\n                    {children}\r\n                </AndroidPageContent>\r\n            </Container>\r\n\r\n            <ScrollTop {...props}>\r\n                <Fab size=\"small\" aria-label=\"scroll back to top\">\r\n                    <KeyboardArrowUpIcon />\r\n                </Fab>\r\n            </ScrollTop>\r\n        </React.Fragment>\r\n        </PageShell>\r\n    );\r\n}\r\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/im/room/room-settings\",\n      function () {\n        return require(\"private-next-pages/im/room/room-settings/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/im/room/room-settings\"])\n      });\n    }\n  "],"names":["Log","matrixClient","roomData","fileLogger","pause","roomSettingsService","checkClient","client","Error","getRoomStateEvent","room","eventType","stateKey","logger","resolvedRoom","Promise","log","hasCurrentState","currentState","hasGetState","getState","hasGetLiveTimeline","getLiveTimeline","methods","Object","keys","prototype","getPrototypeOf","warn","getStateEvents","state","events","get","error","hasPermission","roomId","action","powerLevels","getStateEvent","userId","getUserId","userLevel","users","users_default","requiredLevel","state_default","updateRoomName","name","setRoomName","updateRoomAvatar","avatarUrl","content","url","sendStateEvent","roomInfo","joinedRooms","find","r","updateRoomTopic","topic","setRoomTopic","updateRoomPermissions","permissions","newContent","sendMessages","invite","kick","ban","roomSettings","kickMember","reason","banMember","unbanMember","unban","updateRoomVisibility","isPublic","visibility","setRoomDirectoryVisibility","updateGuestAccess","allowGuests","guest_access","updateEncryption","enable","algorithm","getRoomSettings","getRoom","topicEvent","isEncrypted","allowGuestJoin","encryption","guestAccess","getJoinRule","getAvatarUrl","baseUrl","settings","events_default","privacy","React","useState","TextField","Button","Box","IconButton","PhotoCamera","toast","useTranslation","useProxyWatch","childrenPaused","BasicSettings","onChange","sub","t","loading","setLoading","editData","setEditData","handleSubmit","e","preventDefault","newName","newTopic","clientOnEventDispatcher","emit","success","message","handleAvatarUpload","event","file","target","files","getValue","key","handleChange","value","prev","component","onSubmit","sx","mb","fullWidth","required","label","disabled","display","alignItems","gap","my","input","accept","style","id","type","htmlFor","color","src","alt","width","height","borderRadius","multiline","rows","variant","mt","Tooltip","Typography","PermissionSettings","formData","setFormData","Number","title","InputProps","inputProps","min","max","FormControlLabel","Switch","Alert","PrivacySettings","checked","control","severity","useEffect","Dialog","DialogTitle","DialogContent","DialogActions","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Snackbar","TablePagination","Block","BlockIcon","PersonRemove","PersonRemoveIcon","Search","SearchIcon","roomService","matrixInivte","ConfirmDialog","open","onConfirm","onCancel","onClose","onClick","MemberManagement","members","setMembers","searchText","setSearchText","setMessage","confirmDialog","setConfirmDialog","page","setPage","rowsPerPage","setRowsPerPage","inviteDialogOpen","setInviteDialogOpen","inviteUserId","setInviteUserId","inviteLoading","setInviteLoading","inviteError","setInviteError","loadMembers","roomMembers","getRoomMembers","console","handleKickMember","handleBanMember","handleInvite","result","inviteToRoom","trim","filteredMembers","filter","member","displayName","toLowerCase","includes","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","size","placeholder","startAdornment","mr","ml","align","slice","map","rowsPerPageOptions","count","length","onPageChange","onRowsPerPageChange","labelRowsPerPage","autoHideDuration","text","autoFocus","margin","Tabs","Tab","CircularProgress","TabPanel","props","children","index","other","div","role","hidden","aria-labelledby","p","RoomSettingsContent","tabValue","setTabValue","currentSettings","isLoading","handleTabChange","newValue","handleSettingsChange","justifyContent","maxWidth","mx","px","elevation","gutterBottom","borderBottom","borderColor","scrollButtons","useRouter","AppbarContainer","AppShell","RoomPage","router","query","isReady","push","appbarProps","back"],"sourceRoot":"","ignoreList":[0]}