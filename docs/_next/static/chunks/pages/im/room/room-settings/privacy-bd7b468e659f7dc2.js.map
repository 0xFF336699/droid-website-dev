{"version":3,"file":"static/chunks/pages/im/room/room-settings/privacy-bd7b468e659f7dc2.js","mappings":"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","sources":["webpack://_N_E/./src/im/components/room-settings/privacy/PrivacySettingsContent.tsx","webpack://_N_E/./src/pages/im/room/room-settings/privacy/index.tsx","webpack://_N_E/?cb6d"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n    Box,\r\n    FormControlLabel,\r\n    Switch,\r\n    Button,\r\n    Alert,\r\n    Typography\r\n} from '@mui/material';\r\nimport { roomSettingsService } from '@src/im/client/room/roomSettingsService';\r\nimport toast from 'react-hot-toast';\r\nimport type { IRoomSettings, IRoomPrivacy } from '@src/im/client/room/types';\r\nimport { useTranslation } from '@fanfanlo';\r\nimport { useProxyWatch } from '@fanfanlo';\r\nimport { roomData } from '@src/im/client/room/data';\r\n\r\nexport const PrivacySettingsContent = ({ roomId }: { roomId: string }) => {\r\n    const { t } = useTranslation('homepage/im/components/room-settings/privacy/content');\r\n    const [loading, setLoading] = useState(false);\r\n    const [currentSettings] = useProxyWatch(\r\n        roomData.roomSettings.settings,\r\n        [roomId],\r\n        roomData.roomSettings.settings[roomId]\r\n    );\r\n    const [formData, setFormData] = useState<IRoomPrivacy>({\r\n        isPublic: currentSettings?.privacy?.isPublic ?? false,\r\n        isEncrypted: currentSettings?.privacy?.isEncrypted ?? false,\r\n        allowGuestJoin: currentSettings?.privacy?.allowGuestJoin ?? false,\r\n    });\r\n\r\n    const handleSubmit = async (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        try {\r\n            setLoading(true);\r\n            if (formData.isPublic !== currentSettings?.privacy?.isPublic) {\r\n                await roomSettingsService.updateRoomVisibility(roomId, formData.isPublic);\r\n            }\r\n            if (formData.allowGuestJoin !== currentSettings?.privacy?.allowGuestJoin) {\r\n                await roomSettingsService.updateGuestAccess(roomId, formData.allowGuestJoin);\r\n            }\r\n            if (formData.isEncrypted && !currentSettings?.privacy?.isEncrypted) {\r\n                await roomSettingsService.updateEncryption(roomId, true);\r\n            }\r\n            toast.success(t('PrivacySettingsContent.toast.success'));\r\n        } catch (error: any) {\r\n            toast.error(error.message || t('PrivacySettingsContent.toast.error'));\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const { name, checked } = event.target;\r\n        setFormData(prev => ({\r\n            ...prev,\r\n            [name]: checked\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <Box component=\"form\" onSubmit={handleSubmit} sx={{ '& > *': { mb: 2 } }}>\r\n            <FormControlLabel\r\n                control={\r\n                    <Switch\r\n                        checked={formData.isPublic}\r\n                        onChange={handleChange}\r\n                        name=\"isPublic\"\r\n                        disabled={loading}\r\n                    />\r\n                }\r\n                label={\r\n                    <Box>\r\n                        <Typography>{t('PrivacySettingsContent.form.isPublic.label')}</Typography>\r\n                        <Typography variant=\"caption\" color=\"text.secondary\">\r\n                            {t('PrivacySettingsContent.form.isPublic.description')}\r\n                        </Typography>\r\n                    </Box>\r\n                }\r\n            />\r\n\r\n            <FormControlLabel\r\n                control={\r\n                    <Switch\r\n                        checked={formData.allowGuestJoin}\r\n                        onChange={handleChange}\r\n                        name=\"allowGuestJoin\"\r\n                        disabled={loading}\r\n                    />\r\n                }\r\n                label={\r\n                    <Box>\r\n                        <Typography>{t('PrivacySettingsContent.form.allowGuestJoin.label')}</Typography>\r\n                        <Typography variant=\"caption\" color=\"text.secondary\">\r\n                            {t('PrivacySettingsContent.form.allowGuestJoin.description')}\r\n                        </Typography>\r\n                    </Box>\r\n                }\r\n            />\r\n\r\n            <FormControlLabel\r\n                control={\r\n                    <Switch\r\n                        checked={formData.isEncrypted}\r\n                        onChange={handleChange}\r\n                        name=\"isEncrypted\"\r\n                        disabled={loading || currentSettings?.privacy?.isEncrypted}\r\n                    />\r\n                }\r\n                label={\r\n                    <Box>\r\n                        <Typography>{t('PrivacySettingsContent.form.isEncrypted.label')}</Typography>\r\n                        <Typography variant=\"caption\" color=\"text.secondary\">\r\n                            {t('PrivacySettingsContent.form.isEncrypted.description')}\r\n                        </Typography>\r\n                    </Box>\r\n                }\r\n            />\r\n\r\n            {currentSettings?.privacy?.isEncrypted && (\r\n                <Alert\r\n                    severity=\"info\"\r\n                    sx={{ mb: 2 }}\r\n                >\r\n                    {t('PrivacySettingsContent.form.isEncrypted.alert')}\r\n                </Alert>\r\n            )}\r\n\r\n            <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                disabled={loading}\r\n            >\r\n                {t('PrivacySettingsContent.form.submit')}\r\n            </Button>\r\n        </Box>\r\n    );\r\n}; ","import { useRouter } from 'next/router';\r\nimport { useEffect } from 'react';\r\nimport { useTranslation } from \"@fanfanlo\";\r\nimport { AppbarContainer, AppShell } from \"@app/ui\";\r\nimport { PrivacySettingsContent } from '@src/im/components/room-settings/privacy/PrivacySettingsContent';\r\n\r\nexport default function PrivacySettingsPage() {\r\n  const { t } = useTranslation(\"homepage/pages/im/room/room-settings/privacy/content\");\r\n  const router = useRouter();\r\n  const { id: roomId } = router.query;\r\n\r\n  useEffect(() => {\r\n    // 如果没有roomId，重定向到聊天列表\r\n    if (!roomId && router.isReady) {\r\n      router.push('/im');\r\n    }\r\n  }, [roomId, router]);\r\n\r\n  console.log('title=', t(\"content.title\"))\r\n  return (\r\n    <AppShell>\r\n      <AppbarContainer appbarProps={{ title: t(\"content.title\"), back: true }}>\r\n        <PrivacySettingsContent roomId={roomId as string} />\r\n      </AppbarContainer>\r\n    </AppShell>\r\n  );\r\n} ","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/im/room/room-settings/privacy\",\n      function () {\n        return require(\"private-next-pages/im/room/room-settings/privacy/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/im/room/room-settings/privacy\"])\n      });\n    }\n  "],"names":["React","useState","Box","FormControlLabel","Switch","Button","Alert","Typography","roomSettingsService","toast","useTranslation","useProxyWatch","roomData","PrivacySettingsContent","roomId","currentSettings","t","loading","setLoading","roomSettings","settings","formData","setFormData","isPublic","privacy","isEncrypted","allowGuestJoin","handleSubmit","e","preventDefault","updateRoomVisibility","updateGuestAccess","updateEncryption","success","error","message","handleChange","event","name","checked","target","prev","component","onSubmit","sx","mb","control","onChange","disabled","label","variant","color","severity","type","useRouter","useEffect","AppbarContainer","AppShell","PrivacySettingsPage","router","id","query","isReady","push","console","log","appbarProps","title","back"],"sourceRoot":"","ignoreList":[]}