{"version":3,"file":"static/chunks/pages/im/room/room-settings/member-8e5e2a6d79811811.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAA+D;AAGlC;AAeN;AAC8B;AACD;AAC0B;AAEtC;AACA;AACJ;AAEpC,MAAMyB,aAAa,IAAIzB,eAAGA,CAAC,OAAO;AAiBlC,MAAM0B,gBAAgB;QAAC,EACnBC,IAAI,EACJC,KAAK,EACLC,OAAO,EACPC,SAAS,EACTC,QAAQ,EACU;IAClB,MAAM,EAAEC,CAAC,EAAE,GAAG9B,sBAAcA,CAAC;IAC7B,qBACI,qBAACQ,qBAAMA;QAACiB,MAAMA;QAAMM,SAASF;;0BACzB,oBAAClB,0BAAWA;0BAAEe;;0BACd,oBAAChB,4BAAaA;0BAAEiB;;0BAChB,qBAAClB,4BAAaA;;kCACV,oBAACJ,qBAAMA;wBAAC2B,SAASH;kCAAWC,EAAE;;kCAC9B,oBAACzB,qBAAMA;wBAAC2B,SAASJ;wBAAWK,OAAM;kCAC7BH,EAAE;;;;;;AAKvB;AAQA,MAAMI,aAAa;QAAC,EAAEC,MAAM,EAAEC,MAAM,EAAEJ,OAAO,EAAmB;QAUxDf,oCAAAA,8BAAwDA,+BAEQA,qCAAAA,+BAMhEA,+BA2BiBkB;IA5CrB,MAAME,SAASd,WAAWe,GAAG,CAAC,OAAO;IACrC,uBAAuB;IACvBD,OAAOE,GAAG,CAAC,WAAWH;IACtBC,OAAOE,GAAG,CAAC,WAAWJ;IACtBE,OAAOE,GAAG,CAAC,kBAAkBJ,OAAOK,MAAM;IAC1C,MAAM,EAAEV,CAAC,EAAE,GAAG9B,sBAAcA,CAAC;QAIzBiB,kDAAAA;IAHJ,MAAM,CAACwB,UAAU,GAAG1C,sCAAaA,CAC7BkB,oBAAQA,CAACyB,WAAW,EACpB;QAACN;QAAQ;QAASD,OAAOK,MAAM;KAAC,EAChCvB,CAAAA,OAAAA,CAAAA,oDAAAA,+BAAAA,oBAAQA,CAACyB,WAAW,CAACN,OAAO,cAA5BnB,oDAAAA,qCAAAA,6BAA8B0B,KAAK,cAAnC1B,yDAAAA,kCAAqC,CAACkB,OAAOK,MAAM,CAAC,cAApDvB,8DAAAA,oDAAwDA,gCAAAA,oBAAQA,CAACyB,WAAW,CAACN,OAAO,cAA5BnB,oDAAAA,8BAA8B2B,aAAa,cAAnG3B,kBAAAA,OAAuG;IAE3GoB,OAAOE,GAAG,CAAE,0DAAwDtB,gCAAAA,oBAAQA,CAACyB,WAAW,CAACN,OAAO,cAA5BnB,qDAAAA,sCAAAA,8BAA8B0B,KAAK,cAAnC1B,0DAAAA,mCAAqC,CAACkB,OAAOK,MAAM,CAAC;IACxHH,OAAOE,GAAG,CAAE,iCAAgCtB,oBAAQA,CAACyB,WAAW,CAACN,OAAO;IACxEC,OAAOE,GAAG,CAAC,cAAcE,WAAWL,QAAQD,OAAOK,MAAM;QAIrDvB;IAHJ,MAAM,CAAC4B,aAAa,GAAG9C,sCAAaA,CAChCkB,oBAAQA,CAACyB,WAAW,EACpB;QAACN;QAAQ;KAAgB,EACzBnB,CAAAA,8CAAAA,gCAAAA,oBAAQA,CAACyB,WAAW,CAACN,OAAO,cAA5BnB,oDAAAA,8BAA8B2B,aAAa,cAA3C3B,wDAAAA,6CAA+C;IAEnDoB,OAAOE,GAAG,CAAC,iBAAiBM;QACdJ;IAAd,MAAMK,QAAQL,CAAAA,QAAAA,sBAAAA,uBAAAA,YAAaI,0BAAbJ,mBAAAA,QAA6B;IAC3C,IAAIM,YAAYjB,EAAE;IAClB,IAAIgB,SAAS,KAAKC,YAAYjB,EAAE;SAC3B,IAAIgB,SAAS,IAAIC,YAAYjB,EAAE;SAC/B,IAAIgB,SAAS,IAAIC,YAAYjB,EAAE;IACpCO,OAAOE,GAAG,CAAC,cAAcQ;IAEzB,qBACI,qBAACzC,mBAAIA;QAED0C,SAAQ;QACRC,IAAI;YAAEC,SAAS;YAAQC,YAAY;YAAUC,IAAI;YAAGC,IAAI;YAAGC,QAAQ;QAAU;QAC7EtB,SAASA;;0BAET,oBAAC5B,kBAAGA;gBAAC6C,IAAI;oBAAEM,MAAM;oBAAYC,UAAU;oBAAIC,WAAW;oBAAIC,IAAI;oBAAGR,SAAS;oBAAQC,YAAY;gBAAS;0BAClGhB,OAAOwB,SAAS,iBACb,oBAACvD,kBAAGA;oBACAwD,WAAU;oBACVC,KAAK1B,OAAOwB,SAAS;oBACrBG,KAAKhC,EAAE;oBACPmB,IAAI;wBAAEc,OAAO;wBAAIC,QAAQ;wBAAIC,cAAc;oBAAM;mCAGrD,oBAAC7D,kBAAGA;oBAAC6C,IAAI;wBAAEc,OAAO;wBAAIC,QAAQ;wBAAIC,cAAc;wBAAOC,SAAS;wBAAYhB,SAAS;wBAAQC,YAAY;wBAAUgB,gBAAgB;wBAAUC,UAAU;oBAAG;8BACrJjC,EAAAA,sBAAAA,OAAOkC,WAAW,cAAlBlC,0CAAAA,mBAAoB,CAAC,EAAE,KAAIA,OAAOK,MAAM,CAAC,EAAE;;;0BAIxD,qBAACpC,kBAAGA;gBAAC6C,IAAI;oBAAEM,MAAM;oBAASC,UAAU;oBAAGc,UAAU;gBAAS;;kCACtD,oBAACvD,yBAAUA;wBAACiC,SAAQ;wBAAYuB,MAAM;kCAAEpC,OAAOkC,WAAW,IAAIlC,OAAOK,MAAM;;kCAC3E,oBAACzB,yBAAUA;wBAACiC,SAAQ;wBAAUf,OAAM;wBAAiBsC,MAAM;kCAAEpC,OAAOK,MAAM;;;;0BAE9E,oBAACpC,kBAAGA;gBAAC6C,IAAI;oBAAEM,MAAM;oBAAYiB,WAAW;oBAASC,IAAI;gBAAE;0BACnD,kCAAClE,mBAAIA;oBAACmE,OAAO3B;oBAAW4B,MAAK;oBAAQ1C,OAAM;;;;OAxB1CE,OAAOK,MAAM;AA4B9B;AAEO,MAAMoC,mBAAmB;QAAC,EAC7BxC,MAAM,EACNyC,QAAQ,EACRC,QAAQ,EACa;IACrB,MAAM,EAAEhD,CAAC,EAAE,GAAG9B,sBAAcA,CAAC;IAC7B,MAAM,CAAC+E,SAASC,WAAW,GAAG3D,kBAAQA,CAAC;IACvC,MAAM,CAAC4D,QAAQ,GAAGlF,sCAAaA,CAC3BkB,oBAAQA,CAACiE,WAAW,EACpB;QAAC9C;KAAO,EACRnB,oBAAQA,CAACiE,WAAW,CAAC9C,OAAO,IAAI,EAAE;IAEtC,MAAM,CAAC+C,YAAYC,cAAc,GAAG/D,kBAAQA,CAAC;IAC7C,MAAM,CAACgE,SAASC,WAAW,GAAGjE,kBAAQA,CAAmD;IACzF,MAAM,CAACkE,eAAeC,iBAAiB,GAAGnE,kBAAQA,CAK/C;QACCI,MAAM;QACNC,OAAO;QACPC,SAAS;QACTC,WAAW,KAAO;IACtB;IACA,MAAM,CAAC6D,MAAMC,QAAQ,GAAGrE,kBAAQA,CAAC;IACjC,MAAM,CAACsE,aAAaC,eAAe,GAAGvE,kBAAQA,CAAC;IAC/C,MAAM,CAACwE,kBAAkBC,oBAAoB,GAAGzE,kBAAQA,CAAC;IACzD,MAAM,CAAC0E,cAAcC,gBAAgB,GAAG3E,kBAAQA,CAAC;IACjD,MAAM,CAAC4E,eAAeC,iBAAiB,GAAG7E,kBAAQA,CAAC;IACnD,MAAM,CAAC8E,aAAaC,eAAe,GAAG/E,kBAAQA,CAAgB;IAC9D,MAAMgF,SAASlF,yBAASA;IAExB,MAAMmF,mBAAmB,CAAC9D;QACtBgD,iBAAiB;YACb/D,MAAM;YACNC,OAAOI,EAAE;YACTH,SAASG,EAAE;YACXF,WAAW;gBACP,IAAI;oBACA,MAAMV,8CAAmBA,CAACqF,UAAU,CAACnE,QAAQI;oBAC7ClB,oBAAKA,CAACkF,OAAO,CAAC1E,EAAE;oBAChBgD;gBACJ,EAAE,OAAO2B,OAAY;oBACjBnF,oBAAKA,CAACmF,KAAK,CAACA,MAAMpB,OAAO,IAAIvD,EAAE;gBACnC;gBACA0D,iBAAiBkB,CAAAA,OAAS;wBAAE,GAAGA,IAAI;wBAAEjF,MAAM;oBAAM;YACrD;QACJ;IACJ;IAEA,MAAMkF,kBAAkB,CAACnE;QACrBgD,iBAAiB;YACb/D,MAAM;YACNC,OAAOI,EAAE;YACTH,SAASG,EAAE;YACXF,WAAW;gBACP,IAAI;oBACA,MAAMV,8CAAmBA,CAAC0F,SAAS,CAACxE,QAAQI;oBAC5ClB,oBAAKA,CAACkF,OAAO,CAAC1E,EAAE;oBAChBgD;gBACJ,EAAE,OAAO2B,OAAY;oBACjBnF,oBAAKA,CAACmF,KAAK,CAACA,MAAMpB,OAAO,IAAIvD,EAAE;gBACnC;gBACA0D,iBAAiBkB,CAAAA,OAAS;wBAAE,GAAGA,IAAI;wBAAEjF,MAAM;oBAAM;YACrD;QACJ;IACJ;IAEA,MAAMoF,eAAe;QACjBX,iBAAiB;QACjBE,eAAe;QACf,IAAI;YACA,MAAMU,SAAS,MAAM9F,0BAAYA,CAAC+F,YAAY,CAAC3E,QAAQ2D,aAAaiB,IAAI;YACxE,IAAIF,OAAON,OAAO,EAAE;gBAChBlF,oBAAKA,CAACkF,OAAO,CAAC1E,EAAE;gBAChBgE,oBAAoB;gBACpBE,gBAAgB;gBAChBlB;YACJ,OAAO;gBACHsB,eAAeU,OAAOL,KAAK,IAAI3E,EAAE;YACrC;QACJ,EAAE,OAAOmF,GAAQ;YACbb,eAAea,EAAE5B,OAAO,IAAIvD,EAAE;QAClC,SAAU;YACNoE,iBAAiB;QACrB;IACJ;IAEA,MAAMgB,kBAAkBjC,QAAQkC,MAAM,CAAChF,CAAAA;YACnCA;eAAAA,EAAAA,sBAAAA,OAAOkC,WAAW,cAAlBlC,0CAAAA,oBAAoBiF,WAAW,GAAGC,QAAQ,CAAClC,WAAWiC,WAAW,QACjEjF,OAAOK,MAAM,CAAC4E,WAAW,GAAGC,QAAQ,CAAClC,WAAWiC,WAAW;;IAE/DE,QAAQ/E,GAAG,CAAC,+BAA+B0C;IAC3CqC,QAAQ/E,GAAG,CAAC,uCAAuC2E;IACnDI,QAAQ/E,GAAG,CAAC,gCAAgCsC;IAE5C,MAAM0C,mBAAmB,CAACC,OAAgBC;QACtC/B,QAAQ+B;IACZ;IAEA,MAAMC,0BAA0B,CAACF;QAC7B5B,eAAe+B,SAASH,MAAMI,MAAM,CAACC,KAAK,EAAE;QAC5CnC,QAAQ;IACZ;IAEA,qBACI,qBAACtF,kBAAGA;;0BACA,qBAACA,kBAAGA;gBAAC6C,IAAI;oBAAE6E,IAAI;oBAAG5E,SAAS;oBAAQC,YAAY;gBAAS;;kCACpD,oBAACrC,wBAASA;wBACN6D,MAAK;wBACLoD,aAAajG,EAAE;wBACf+F,OAAO1C;wBACPL,UAAUmC,CAAAA;4BACNK,QAAQ/E,GAAG,CAAC,yCAAyC0E,EAAEW,MAAM,CAACC,KAAK;4BACnEzC,cAAc6B,EAAEW,MAAM,CAACC,KAAK;wBAChC;wBACA5E,IAAI;4BAAEc,OAAO;wBAAI;wBACjBiE,YAAY;4BACRC,8BAAgB,oBAAC/H,qBAAUA;gCAAC+B,OAAM;gCAASgB,IAAI;oCAAES,IAAI;gCAAE;;wBAC3D;;kCAEJ,oBAACrD,qBAAMA;wBACH2C,SAAQ;wBACRC,IAAI;4BAAEwB,IAAI;wBAAE;wBACZzC,SAAS;4BACLsF,QAAQ/E,GAAG,CAAC;4BACZuD,oBAAoB;wBACxB;kCAEChE,EAAE;;;;0BAIX,oBAACjB,oBAAKA;gBAACqH,SAAS;0BACXhB,gBACIiB,KAAK,CAAC1C,OAAOE,aAAaF,OAAOE,cAAcA,aAC/CyC,GAAG,CAAC,CAACjG,uBACF,oBAACD;wBAEGC,QAAQA;wBACRC,QAAQA;wBACRJ,SAAS;4BACLqE,OAAOgC,IAAI,CAAC;gCACRC,UAAU;gCACVC,OAAO;oCAAEnG;oCAAQI,QAAQL,OAAOK,MAAM;gCAAC;4BAC3C;wBACJ;uBARKL,OAAOK,MAAM;;0BAalC,oBAAChB;gBACGC,MAAM8D,cAAc9D,IAAI;gBACxBC,OAAO6D,cAAc7D,KAAK;gBAC1BC,SAAS4D,cAAc5D,OAAO;gBAC9BC,WAAW2D,cAAc3D,SAAS;gBAClCC,UAAU,IAAM2D,iBAAiBkB,CAAAA,OAAS;4BAAE,GAAGA,IAAI;4BAAEjF,MAAM;wBAAM;;0BAGrE,oBAACb,uBAAQA;gBACLa,MAAM,CAAC,CAAC4D;gBACRmD,kBAAkB;gBAClBzG,SAAS,IAAMuD,WAAW;0BAE1B,kCAACnF,oBAAKA;oBACF4B,SAAS,IAAMuD,WAAW;oBAC1BmD,QAAQ,EAAEpD,oBAAAA,8BAAAA,QAASqD,IAAI;oBACvBzF,IAAI;wBAAEc,OAAO;oBAAO;8BAEnBsB,oBAAAA,8BAAAA,QAASsD,IAAI;;;0BAItB,qBAACnI,qBAAMA;gBAACiB,MAAMoE;gBAAkB9D,SAAS,IAAM+D,oBAAoB;;kCAC/D,oBAACnF,0BAAWA;kCAAEmB,EAAE;;kCAChB,qBAACpB,4BAAaA;;0CACV,oBAACI,wBAASA;gCACN8H,SAAS;gCACTC,QAAO;gCACPnE,OAAO5C,EAAE;gCACTgH,SAAS;gCACTjB,OAAO9B;gCACPjB,UAAUmC,CAAAA,IAAKjB,gBAAgBiB,EAAEW,MAAM,CAACC,KAAK;gCAC7CkB,UAAU9C;;4BAEbE,6BAAe,oBAAChG,oBAAKA;gCAACsI,UAAS;gCAAQxF,IAAI;oCAAE+F,IAAI;gCAAE;0CAAI7C;;;;kCAE5D,qBAAC1F,4BAAaA;;0CACV,oBAACJ,qBAAMA;gCAAC2B,SAAS,IAAM8D,oBAAoB;gCAAQiD,UAAU9C;0CACxDnE,EAAE;;0CAEP,oBAACzB,qBAAMA;gCAAC2B,SAAS6E;gCAAckC,UAAU9C,iBAAiB,CAACF,aAAaiB,IAAI;gCAAIhE,SAAQ;0CACnFiD,gBAAgBnE,EAAE,4CAA4CA,EAAE;;;;;;;;AAMzF,EAAE;AAEK,MAAMmH,0BAA0B;QAAC,EAAE7G,MAAM,EAAsB;IAClE,MAAM,EAAEN,CAAC,EAAE,GAAG9B,sBAAcA,CAAC;IAC7B,MAAM,CAAC+E,SAASC,WAAW,GAAG3D,kBAAQA,CAAC;IACvC,MAAM,CAAC6H,gBAAgB,GAAGnJ,sCAAaA,CACnCkB,oBAAQA,CAACkI,YAAY,CAACtE,QAAQ,EAC9B;QAACzC;KAAO,EACRnB,oBAAQA,CAACkI,YAAY,CAACtE,QAAQ,CAACzC,OAAO;IAE1C,MAAMgH,uBAAuB,KAAO;IACpC,qBACI,oBAACxE;QACGxC,QAAQA;QACRyC,UAAUqE;QACVpE,UAAUsE;;AAGtB,EAAE;;;;AC7VsC;AACN;AACS;AACS;AACsD;AAE3F,SAASI;IACtBlC,QAAQ/E,GAAG,CAAC;IACZ,MAAM,EAAET,CAAC,EAAE,GAAG9B,sBAAcA,CAAC;IAC7B,MAAMqG,SAASlF,yBAASA;IACxB,MAAM,EAAEsI,IAAIrH,MAAM,EAAE,GAAGiE,OAAOkC,KAAK;IAEnCc,mBAASA,CAAC;QACR,sBAAsB;QACtB,IAAI,CAACjH,UAAUiE,OAAOqD,OAAO,EAAE;YAC7BrD,OAAOgC,IAAI,CAAC;QACd;IACF,GAAG;QAACjG;QAAQiE;KAAO;IAEnBiB,QAAQ/E,GAAG,CAAC,UAAUT,EAAE;IACxB,qBACE,oBAACyH,wBAAQA;kBACP,kCAACD,6BAAeA;YAACK,aAAa;gBAAEjI,OAAOI,EAAE;gBAAkB8H,MAAM;YAAK;sBACpE,kCAACX,uBAAuBA;gBAAC7G,QAAQA;;;;AAIzC;;;;;;;;;AC1BA;AACA;AACA;AACA,eAAe,mBAAO,CAAC,KAA2D;AAClF;AACA;AACA,OAAO,KAAU,EAAE,EAId;AACL","sources":["webpack://_N_E/./src/im/components/room-settings/member/MemberManagementContent.tsx","webpack://_N_E/./src/pages/im/room/room-settings/member/index.tsx","webpack://_N_E/?4513"],"sourcesContent":["import { Log, useProxyWatch, useTranslation } from '@fanfanlo';\r\nimport {\r\n    Search as SearchIcon\r\n} from '@mui/icons-material';\r\nimport {\r\n    Alert,\r\n    Box,\r\n    Button,\r\n    Card,\r\n    Chip,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    Snackbar,\r\n    Stack,\r\n    TextField,\r\n    Typography\r\n} from '@mui/material';\r\nimport { matrixInivte } from '@src/im/client/invite';\r\nimport { roomData } from '@src/im/client/room/data';\r\nimport { roomSettingsService } from '@src/im/client/room/roomSettingsService';\r\nimport type { IRoomMember, IRoomSettings } from '@src/im/client/room/types';\r\nimport { useRouter } from 'next/router';\r\nimport React, { useState } from 'react';\r\nimport toast from 'react-hot-toast';\r\n\r\nconst fileLogger = new Log(false, 'im.components.room-settings.member.MemberManagementContent');\r\n// fileLogger.pause = true;\r\n// fileLogger.childrenPaused = true;\r\ninterface IConfirmDialogProps {\r\n    open: boolean;\r\n    title: string;\r\n    content: string;\r\n    onConfirm: () => void;\r\n    onCancel: () => void;\r\n}\r\n\r\ninterface IMemberManagementProps {\r\n    roomId: string;\r\n    settings: IRoomSettings | null;\r\n    onChange: () => void;\r\n}\r\n\r\nconst ConfirmDialog = ({\r\n    open,\r\n    title,\r\n    content,\r\n    onConfirm,\r\n    onCancel\r\n}: IConfirmDialogProps) => {\r\n    const { t } = useTranslation('homepage/im/components/room-settings/member/content');\r\n    return (\r\n        <Dialog open={open} onClose={onCancel}>\r\n            <DialogTitle>{title}</DialogTitle>\r\n            <DialogContent>{content}</DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={onCancel}>{t('MemberManagementContent.confirmDialog.buttons.cancel')}</Button>\r\n                <Button onClick={onConfirm} color=\"error\">\r\n                    {t('MemberManagementContent.confirmDialog.buttons.confirm')}\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\ninterface MemberCardProps {\r\n    member: IRoomMember;\r\n    roomId: string;\r\n    onClick: () => void;\r\n}\r\n\r\nconst MemberCard = ({ member, roomId, onClick }: MemberCardProps) => {\r\n    const logger = fileLogger.sub(false, 'MemberCard_ui');\r\n    // logger.pause = true;\r\n    logger.log('roomId=', roomId);\r\n    logger.log('member=', member);\r\n    logger.log('member.userId=', member.userId);\r\n    const { t } = useTranslation('homepage/im/components/room-settings/member/content');\r\n    const [userLevel] = useProxyWatch(\r\n        roomData.powerLevels,\r\n        [roomId, 'users', member.userId],\r\n        roomData.powerLevels[roomId]?.users?.[member.userId] ?? roomData.powerLevels[roomId]?.users_default ?? 0\r\n    );\r\n    logger.log(`roomData.powerLevels[roomId]?.users?.[member.userId]=`, roomData.powerLevels[roomId]?.users?.[member.userId])\r\n    logger.log(`roomData.powerLevels[roomId]=`, roomData.powerLevels[roomId])\r\n    logger.log('userLevel=', userLevel, roomId, member.userId);\r\n    const [usersDefault] = useProxyWatch(\r\n        roomData.powerLevels,\r\n        [roomId, 'users_default'],\r\n        roomData.powerLevels[roomId]?.users_default ?? 0\r\n    );\r\n    logger.log('usersDefault=', usersDefault);\r\n    const level = userLevel ?? usersDefault ?? 0;\r\n    let roleLabel = t('MemberManagementContent.role.user');\r\n    if (level >= 100) roleLabel = t('MemberManagementContent.role.owner');\r\n    else if (level >= 50) roleLabel = t('MemberManagementContent.role.admin');\r\n    else if (level >= 20) roleLabel = t('MemberManagementContent.role.moderator');\r\n    logger.log('roleLabel=', roleLabel);\r\n\r\n    return (\r\n        <Card\r\n            key={member.userId}\r\n            variant=\"outlined\"\r\n            sx={{ display: 'flex', alignItems: 'center', px: 2, py: 1, cursor: 'pointer' }}\r\n            onClick={onClick}\r\n        >\r\n            <Box sx={{ flex: '0 0 auto', minWidth: 48, minHeight: 48, mr: 2, display: 'flex', alignItems: 'center' }}>\r\n                {member.avatarUrl ? (\r\n                    <Box\r\n                        component=\"img\"\r\n                        src={member.avatarUrl}\r\n                        alt={t('MemberManagementContent.table.avatar.alt')}\r\n                        sx={{ width: 48, height: 48, borderRadius: '50%' }}\r\n                    />\r\n                ) : (\r\n                    <Box sx={{ width: 48, height: 48, borderRadius: '50%', bgcolor: 'grey.300', display: 'flex', alignItems: 'center', justifyContent: 'center', fontSize: 24 }}>\r\n                        {member.displayName?.[0] || member.userId[0]}\r\n                    </Box>\r\n                )}\r\n            </Box>\r\n            <Box sx={{ flex: '1 1 0', minWidth: 0, overflow: 'hidden' }}>\r\n                <Typography variant=\"subtitle1\" noWrap>{member.displayName || member.userId}</Typography>\r\n                <Typography variant=\"caption\" color=\"text.secondary\" noWrap>{member.userId}</Typography>\r\n            </Box>\r\n            <Box sx={{ flex: '0 0 auto', textAlign: 'right', ml: 2 }}>\r\n                <Chip label={roleLabel} size=\"small\" color=\"primary\" />\r\n            </Box>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport const MemberManagement = ({\r\n    roomId,\r\n    settings,\r\n    onChange\r\n}: IMemberManagementProps) => {\r\n    const { t } = useTranslation('homepage/im/components/room-settings/member/content');\r\n    const [loading, setLoading] = useState(false);\r\n    const [members] = useProxyWatch(\r\n        roomData.roomMembers,\r\n        [roomId],\r\n        roomData.roomMembers[roomId] || []\r\n    );\r\n    const [searchText, setSearchText] = useState('');\r\n    const [message, setMessage] = useState<{type: 'success' | 'error', text: string} | null>(null);\r\n    const [confirmDialog, setConfirmDialog] = useState<{\r\n        open: boolean;\r\n        title: string;\r\n        content: string;\r\n        onConfirm: () => void;\r\n    }>({\r\n        open: false,\r\n        title: '',\r\n        content: '',\r\n        onConfirm: () => {}\r\n    });\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n    const [inviteDialogOpen, setInviteDialogOpen] = useState(false);\r\n    const [inviteUserId, setInviteUserId] = useState('');\r\n    const [inviteLoading, setInviteLoading] = useState(false);\r\n    const [inviteError, setInviteError] = useState<string | null>(null);\r\n    const router = useRouter();\r\n\r\n    const handleKickMember = (userId: string) => {\r\n        setConfirmDialog({\r\n            open: true,\r\n            title: t('MemberManagementContent.confirmDialog.kick.title'),\r\n            content: t('MemberManagementContent.confirmDialog.kick.content'),\r\n            onConfirm: async () => {\r\n                try {\r\n                    await roomSettingsService.kickMember(roomId, userId);\r\n                    toast.success(t('MemberManagementContent.toast.kick.success'));\r\n                    onChange();\r\n                } catch (error: any) {\r\n                    toast.error(error.message || t('MemberManagementContent.toast.kick.error'));\r\n                }\r\n                setConfirmDialog(prev => ({ ...prev, open: false }));\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleBanMember = (userId: string) => {\r\n        setConfirmDialog({\r\n            open: true,\r\n            title: t('MemberManagementContent.confirmDialog.ban.title'),\r\n            content: t('MemberManagementContent.confirmDialog.ban.content'),\r\n            onConfirm: async () => {\r\n                try {\r\n                    await roomSettingsService.banMember(roomId, userId);\r\n                    toast.success(t('MemberManagementContent.toast.ban.success'));\r\n                    onChange();\r\n                } catch (error: any) {\r\n                    toast.error(error.message || t('MemberManagementContent.toast.ban.error'));\r\n                }\r\n                setConfirmDialog(prev => ({ ...prev, open: false }));\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleInvite = async () => {\r\n        setInviteLoading(true);\r\n        setInviteError(null);\r\n        try {\r\n            const result = await matrixInivte.inviteToRoom(roomId, inviteUserId.trim());\r\n            if (result.success) {\r\n                toast.success(t('MemberManagementContent.invite.success'));\r\n                setInviteDialogOpen(false);\r\n                setInviteUserId('');\r\n                onChange();\r\n            } else {\r\n                setInviteError(result.error || t('MemberManagementContent.invite.error'));\r\n            }\r\n        } catch (e: any) {\r\n            setInviteError(e.message || t('MemberManagementContent.invite.error'));\r\n        } finally {\r\n            setInviteLoading(false);\r\n        }\r\n    };\r\n\r\n    const filteredMembers = members.filter(member =>\r\n        member.displayName?.toLowerCase().includes(searchText.toLowerCase()) ||\r\n        member.userId.toLowerCase().includes(searchText.toLowerCase())\r\n    );\r\n    console.log('[MemberManagement] members:', members);\r\n    console.log('[MemberManagement] filteredMembers:', filteredMembers);\r\n    console.log('[MemberManagement] settings:', settings);\r\n\r\n    const handleChangePage = (event: unknown, newPage: number) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    return (\r\n        <Box>\r\n            <Box sx={{ mb: 2, display: 'flex', alignItems: 'center' }}>\r\n                <TextField\r\n                    size=\"small\"\r\n                    placeholder={t('MemberManagementContent.search.placeholder')}\r\n                    value={searchText}\r\n                    onChange={e => {\r\n                        console.log('[MemberManagement] searchText change:', e.target.value);\r\n                        setSearchText(e.target.value);\r\n                    }}\r\n                    sx={{ width: 300 }}\r\n                    InputProps={{\r\n                        startAdornment: <SearchIcon color=\"action\" sx={{ mr: 1 }} />\r\n                    }}\r\n                />\r\n                <Button\r\n                    variant=\"contained\"\r\n                    sx={{ ml: 2 }}\r\n                    onClick={() => {\r\n                        console.log('[MemberManagement] open invite dialog');\r\n                        setInviteDialogOpen(true);\r\n                    }}\r\n                >\r\n                    {t('MemberManagementContent.invite.button')}\r\n                </Button>\r\n            </Box>\r\n\r\n            <Stack spacing={2}>\r\n                {filteredMembers\r\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                    .map((member) => (\r\n                        <MemberCard\r\n                            key={member.userId}\r\n                            member={member}\r\n                            roomId={roomId}\r\n                            onClick={() => {\r\n                                router.push({\r\n                                    pathname: '/im/room/room-settings/member-detail',\r\n                                    query: { roomId, userId: member.userId }\r\n                                });\r\n                            }}\r\n                        />\r\n                    ))}\r\n            </Stack>\r\n\r\n            <ConfirmDialog\r\n                open={confirmDialog.open}\r\n                title={confirmDialog.title}\r\n                content={confirmDialog.content}\r\n                onConfirm={confirmDialog.onConfirm}\r\n                onCancel={() => setConfirmDialog(prev => ({ ...prev, open: false }))}\r\n            />\r\n\r\n            <Snackbar\r\n                open={!!message}\r\n                autoHideDuration={6000}\r\n                onClose={() => setMessage(null)}\r\n            >\r\n                <Alert\r\n                    onClose={() => setMessage(null)}\r\n                    severity={message?.type}\r\n                    sx={{ width: '100%' }}\r\n                >\r\n                    {message?.text}\r\n                </Alert>\r\n            </Snackbar>\r\n\r\n            <Dialog open={inviteDialogOpen} onClose={() => setInviteDialogOpen(false)}>\r\n                <DialogTitle>{t('MemberManagementContent.invite.title')}</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        label={t('MemberManagementContent.invite.inputLabel')}\r\n                        fullWidth\r\n                        value={inviteUserId}\r\n                        onChange={e => setInviteUserId(e.target.value)}\r\n                        disabled={inviteLoading}\r\n                    />\r\n                    {inviteError && <Alert severity=\"error\" sx={{ mt: 2 }}>{inviteError}</Alert>}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setInviteDialogOpen(false)} disabled={inviteLoading}>\r\n                        {t('MemberManagementContent.invite.cancel')}\r\n                    </Button>\r\n                    <Button onClick={handleInvite} disabled={inviteLoading || !inviteUserId.trim()} variant=\"contained\">\r\n                        {inviteLoading ? t('MemberManagementContent.invite.loading') : t('MemberManagementContent.invite.confirm')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport const MemberManagementContent = ({ roomId }: { roomId: string }) => {\r\n    const { t } = useTranslation('homepage/im/components/room-settings/member/content');\r\n    const [loading, setLoading] = useState(false);\r\n    const [currentSettings] = useProxyWatch(\r\n        roomData.roomSettings.settings,\r\n        [roomId],\r\n        roomData.roomSettings.settings[roomId]\r\n    );\r\n    const handleSettingsChange = () => {};\r\n    return (\r\n        <MemberManagement\r\n            roomId={roomId}\r\n            settings={currentSettings}\r\n            onChange={handleSettingsChange}\r\n        />\r\n    );\r\n};","import { useRouter } from 'next/router';\r\nimport { useEffect } from 'react';\r\nimport { useTranslation } from \"@fanfanlo\";\r\nimport { AppbarContainer, AppShell } from \"@app/ui\";\r\nimport { MemberManagementContent } from '@src/im/components/room-settings/member/MemberManagementContent';\r\n\r\nexport default function MemberManagementPage() {\r\n  console.log('MemberManagementPage')\r\n  const { t } = useTranslation(\"homepage/pages/im/room/room-settings/member/content\");\r\n  const router = useRouter();\r\n  const { id: roomId } = router.query;\r\n\r\n  useEffect(() => {\r\n    // 如果没有roomId，重定向到聊天列表\r\n    if (!roomId && router.isReady) {\r\n      router.push('/im');\r\n    }\r\n  }, [roomId, router]);\r\n\r\n  console.log('title=', t(\"content.title\"))\r\n  return (\r\n    <AppShell>\r\n      <AppbarContainer appbarProps={{ title: t(\"content.title\"), back: true }}>\r\n        <MemberManagementContent roomId={roomId as string} />\r\n      </AppbarContainer>\r\n    </AppShell>\r\n  );\r\n} ","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/im/room/room-settings/member\",\n      function () {\n        return require(\"private-next-pages/im/room/room-settings/member/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/im/room/room-settings/member\"])\n      });\n    }\n  "],"names":["Log","useProxyWatch","useTranslation","Search","SearchIcon","Alert","Box","Button","Card","Chip","Dialog","DialogActions","DialogContent","DialogTitle","Snackbar","Stack","TextField","Typography","matrixInivte","roomData","roomSettingsService","useRouter","React","useState","toast","fileLogger","ConfirmDialog","open","title","content","onConfirm","onCancel","t","onClose","onClick","color","MemberCard","member","roomId","logger","sub","log","userId","userLevel","powerLevels","users","users_default","usersDefault","level","roleLabel","variant","sx","display","alignItems","px","py","cursor","flex","minWidth","minHeight","mr","avatarUrl","component","src","alt","width","height","borderRadius","bgcolor","justifyContent","fontSize","displayName","overflow","noWrap","textAlign","ml","label","size","MemberManagement","settings","onChange","loading","setLoading","members","roomMembers","searchText","setSearchText","message","setMessage","confirmDialog","setConfirmDialog","page","setPage","rowsPerPage","setRowsPerPage","inviteDialogOpen","setInviteDialogOpen","inviteUserId","setInviteUserId","inviteLoading","setInviteLoading","inviteError","setInviteError","router","handleKickMember","kickMember","success","error","prev","handleBanMember","banMember","handleInvite","result","inviteToRoom","trim","e","filteredMembers","filter","toLowerCase","includes","console","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","target","value","mb","placeholder","InputProps","startAdornment","spacing","slice","map","push","pathname","query","autoHideDuration","severity","type","text","autoFocus","margin","fullWidth","disabled","mt","MemberManagementContent","currentSettings","roomSettings","handleSettingsChange","useEffect","AppbarContainer","AppShell","MemberManagementPage","id","isReady","appbarProps","back"],"sourceRoot":"","ignoreList":[]}