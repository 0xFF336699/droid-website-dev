{"version":3,"file":"static/chunks/5887-df7715fc74886db3.js","mappings":"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","sources":["webpack://_N_E/../../../src/iframe/IFrameContainer.ts","webpack://_N_E/../../../src/iframe/IFrameReactContainer.tsx","webpack://_N_E/../../node_modules/.pnpm/react-i18next@15.1.4_i18next@24.1.0_typescript@5.8.2__react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/react-i18next/dist/es/index.js","webpack://_N_E/../../../../src/components/app/AppShell.tsx","webpack://_N_E/../../../../src/components/page/PageContent.tsx","webpack://_N_E/../../../../src/components/page/AndroidPageContent.tsx"],"sourcesContent":["\"use client\";\n\nimport axios from \"axios\";\nimport { initialize, InitializeResult } from \"@open-iframe-resizer/core\";\n// import iFrameResize from 'iframe-resizer'\n\nexport type IFrameHtmlBuilderOptions = {\n    iframeId:string,\n}\nexport type IFrameHtmlBuilder = (content: string, options?:IFrameHtmlBuilderOptions) => string;\nexport class IFrameContainer {\n    private container: HTMLDivElement;\n    private iframe: HTMLIFrameElement;\n    private readonly iframeId: string;\n    private minWidth: number | null = null;\n    private minHeight: number | null = null;\n    private maxWidth: number | null = null;\n    private maxHeight: number | null = null;\n    private currentLoadCallback: (() => void) | null = null;\n    private currentErrorCallback: ((error: Error) => void) | null = null;\n    private resizeEnabled: boolean = true;\n    private initializeResultList?: InitializeResult[];\n    private blobUrl?:string\n    \n    // 保存原始状态的对象\n    private originalState: {\n        position?: string;\n        top?: string;\n        left?: string;\n        width?: string;\n        height?: string; \n        zIndex?: string;\n        overflow?: string;\n        border?: string;\n        margin?: string;\n        padding?: string;\n        boxSizing?: string;\n        minWidth?: number | null;\n        minHeight?: number | null;\n        maxWidth?: number | null;\n        maxHeight?: number | null;\n        isFullscreen: boolean;\n    } = { isFullscreen: false };\n    \n\n    constructor() {\n        this.iframeId = 'iframe_' + Math.random().toString(36).substr(2, 9);\n        \n        // 创建容器和iframe\n        this.container = document.createElement('div');\n        this.iframe = document.createElement('iframe');\n        (this.iframe as any).controller = this;\n        // 设置容器样式\n        this.container.style.width = '100%';\n        this.container.style.height = '100%';\n        this.container.style.overflow = 'hidden';\n        this.container.style.position = 'relative';\n        this.container.style.maxWidth = '100%';\n        this.container.style.margin = '0 auto';\n        \n        // 设置iframe样式\n        this.iframe.style.width = '100%';\n        this.iframe.style.height = '100%';\n        this.iframe.style.border = 'none';\n        this.iframe.style.overflow = 'hidden';\n        this.iframe.style.boxSizing = 'border-box';\n        this.iframe.setAttribute('scrolling', 'no');\n        this.iframe.setAttribute('seamless', 'seamless');\n\n        // --- Add Load and Error Handlers ---\n        this.iframe.onload = () => {\n            if (this.currentLoadCallback) {\n                this.currentLoadCallback();\n                // Optionally clear callback after use if needed\n                // this.currentLoadCallback = null; \n            }\n            if(typeof window !== 'undefined' ) {\n                this.fitIframe();\n                // const initInitialize = ()=>{\n                //     const list:InitializeResult[] = initialize({\n                //         bodyMargin:\"0px\",\n                //         bodyPadding:\"0px\",\n                //         offsetSize:3,\n                //     },`#${this.iframeId}`)\n                // }\n                // initInitialize();\n\n                // const initIframeResizer =()=>{\n                //     const iFrameResize = (window as any).iframeResize;\n                //     // console.log('iframeResize_fn', iFrameResize)\n                //     iFrameResize({\n                //         onReady:(iframe:any)=>{\n                //             // console.log('onReady_fn', iframe)\n                //         },\n                //         license: 'GPLv3',\n                //         waitForLoad:true,\n                //         log: false, // 可选：是否输出日志\n                //         checkOrigin: false, // 可选：如果 iframe 是跨域的必须设为 false\n                //       }, `#${this.iframeId}`);\n                    \n                // }\n            }\n        };\n\n        this.iframe.onerror = (event: Event | string, source?: string, lineno?: number, colno?: number, error?: Error) => {\n            console.error('%cIFrameContainer: iframe \"error\" event triggered.', 'color: red; font-weight: bold;', event);\n            const err = error || new Error(typeof event === 'string' ? event : 'Failed to load iframe content');\n            if (this.currentErrorCallback) {\n                this.currentErrorCallback(err);\n                // Optionally clear callback after use if needed\n                // this.currentErrorCallback = null;\n            }\n        };\n        // --- End Handlers ---\n\n        // 将iframe添加到容器中\n        this.container.appendChild(this.iframe);\n        \n        // 设置iframe的ID\n        this.iframe.id = this.iframeId;\n        \n        // 添加message事件监听\n        window.addEventListener('message', this.handleIframeMessage.bind(this));\n    }\n    // private initializeResultList?:InitializeResult[]\n    private fitIframe(){\n        return;\n        this.initializeResultList = initialize({\n            bodyMargin:\"0px\",\n            bodyPadding:\"0px\",\n            offsetSize:3,\n        },`#${this.iframeId}`);\n    }\n    public loadContent(content: string, htmlBuilder?:IFrameHtmlBuilder): void {\n        this.currentLoadCallback = null;\n        this.currentErrorCallback = null;\n        const resizeScript = `\n            <script>\n                const IFRAME_ID = '${this.iframeId}';\n                window.IFRAME_ID = '${this.iframeId}';\n                function notifyResize() {\n                    const body = document.body;\n                    const html = document.documentElement;\n                    \n                    // 获取实际内容高度（取最大值）\n                    const height = Math.max(\n                        body.scrollHeight,\n                        body.offsetHeight,\n                        html.scrollHeight,\n                        html.offsetHeight\n                    );\n                    \n                    // 获取实际内容宽度\n                    const width = Math.max(\n                        body.scrollWidth,\n                        body.offsetWidth,\n                        html.scrollWidth,\n                        html.offsetWidth\n                    );\n                    \n                    // 发送消息给父窗口\n                    window.parent.postMessage({\n                        type: 'resize',\n                        iframeId: IFRAME_ID,\n                        height,\n                        width\n                    }, '*');\n                }\n                \n                // 监听窗口大小变化\n                window.addEventListener('resize', notifyResize);\n                \n                // 监听DOMContentLoaded，确保DOM加载完毕后调整大小\n                document.addEventListener('DOMContentLoaded', notifyResize);\n                \n                // 监听load事件，确保所有资源加载完毕后调整大小\n                window.addEventListener('load', notifyResize);\n                \n                // 创建MutationObserver监听DOM变化\n                const observer = new MutationObserver(notifyResize);\n                observer.observe(document.documentElement, {\n                    childList: true,\n                    subtree: true,\n                    attributes: true,\n                    characterData: true\n                });\n                \n                // 监听来自父窗口的消息，处理请求重新调整大小的消息\n                window.addEventListener('message', function(event) {\n                    if (event.data && event.data.type === 'requestResize') {\n                        // 主动触发一次尺寸计算和发送\n                        notifyResize();\n                    }\n                });\n                \n                // 初始化大小\n                notifyResize();\n            </script>\n        `;\n\n        const topScript = `\n        <script>\n        var autoWebViewJs = window.autoWebViewJs = window.parent.window.autoWebViewJs;\n        autoWebViewJs = window.parent.window.autoWebViewJs;\n        var isRealInAndroid = window.isRealInAndroid;\n        var storeUtilsConf = window.storeUtilsConf = window.parent.window.storeUtilsConf;\n        </script>\n        `\n        const bodyStyle = `<style>html, body{margin-left:-4px;padding:0;\n        background-color: white;}</style>`;\n\n        const idScript = `\n        <script>\n            const IFRAME_ID = '${this.iframeId}';\n            window.IFRAME_ID = '${this.iframeId}';\n        </script>`\n\n        // 将内容和脚本组合\n        let fullContent = content;\n        fullContent = fullContent.includes('<head>') ?\n            fullContent.replace('<head>', `<head>${topScript}`)\n            : `${fullContent}${topScript}`;\n\n        fullContent = fullContent.includes('</head>') ?\n            fullContent.replace('</head>', `${bodyStyle}</head>`)\n            : `${fullContent}${bodyStyle}`;\n\n        fullContent = fullContent.includes('</body>') \n            ? fullContent.replace('</body>', `${resizeScript}</body>`)\n            : `${fullContent}${resizeScript}`;\n\n        // fullContent = fullContent.includes('<head>') ?\n        // fullContent.replace(`<head>`,`<head>${idScript}`):\n        // `${idScript}${fullContent}`;\n\n        let c = htmlBuilder ? htmlBuilder(content,{iframeId:this.iframeId}) : content;\n        // c = c.includes('</body>') \n        //     ? c.replace('</body>', `${resizeScript}</body>`)\n        //     : `${c}${resizeScript}`;\n\n        // this.iframe.srcdoc = c\n\n        const blob = new Blob([c], { type: 'text/html' });\n        const url = URL.createObjectURL(blob);\n        this.blobUrl = url;\n        this.iframe.src = url;\n    }\n    private template(s:string){\n        return `\n        <html>\n        <head>\n        </head>\n        <body>\n        <div id=\"app\"></div>\n        <script>${s}</script>\n        </body>\n        </html>`\n    }\n    /**\n     * 设置最小宽度和高度\n     * @param minWidth 最小宽度（像素）\n     * @param minHeight 最小高度（像素）\n     */\n    public setMinSize(minWidth: number | null, minHeight: number | null): void {\n        this.minWidth = minWidth;\n        this.minHeight = minHeight;\n    }\n\n    /**\n     * 设置最大宽度和高度\n     * @param maxWidth 最大宽度（像素）\n     * @param maxHeight 最大高度（像素）\n     */\n    public setMaxSize(maxWidth: number | null, maxHeight: number | null): void {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n    }\n\n    private handleIframeMessage(event: MessageEvent): void {\n        // 如果禁用了调整大小功能或处于全屏状态，直接返回\n        if (!this.resizeEnabled || this.originalState.isFullscreen) return;\n        if (event.data.type === 'resize' && event.data.iframeId === this.iframeId) {\n            let { height, width } = event.data;\n            const windowMaxWidth = window.innerWidth;\n            \n            // 应用最小尺寸限制\n            if (this.minWidth !== null) {\n                width = Math.max(width, this.minWidth);\n            }\n            if (this.minHeight !== null) {\n                height = Math.max(height, this.minHeight);\n            }\n            \n            // 应用最大尺寸限制\n            if (this.maxWidth !== null) {\n                width = Math.min(width, this.maxWidth);\n            } else {\n                // 如果没有设置最大宽度，则使用窗口宽度作为限制\n                width = Math.min(width, windowMaxWidth);\n            }\n            \n            if (this.maxHeight !== null) {\n                height = Math.min(height, this.maxHeight);\n            }\n            \n            // 设置容器尺寸\n            this.container.style.height = `${height}px`;\n            this.container.style.width = `${width}px`;\n        }\n    }\n\n    /**\n     * 通过URL加载iframe\n     * @param url 要加载的URL\n     * @param onLoad 加载成功回调函数\n     * @param onError 加载失败回调函数\n     */\n    public async loadUrl(url: string, onLoad?: () => void, onError?: (error: Error) => void) {\n        this.currentLoadCallback = onLoad || null;\n        this.currentErrorCallback = onError || null;\n        if (this.iframe) {\n            this.iframe.src = url;\n        } else {\n            console.error('IFrameContainer: iframe element is null in loadUrl!');\n        }\n    }\n\n    // 移除 createLoadingElement, showLoading, removeLoading 方法\n\n    /**\n     * 从URL加载内容并作为字符串显示\n     * @param url 要加载的资源URL\n     * @returns Promise<void>\n     */\n    public async loadUrlAsContent(url: string, onLoad?: () => void, onError?: (error: Error) => void, htmlBuilder?:IFrameHtmlBuilder): Promise<void> {\n        console.log('llllllllllllllload')\n        try {\n            const response = await fetch(url);\n            if (!response.ok) {\n                onError?.(new Error(`HTTP error! status: ${response.status}`));\n                return;\n            }\n            console.log('loaded')\n            const content = await response.text();\n            this.loadContent(content, htmlBuilder);\n            onLoad?.();\n        } catch (error) {\n            console.error('Failed to load URL content:', error);\n            onError?.(error as Error);\n        }\n    }\n\n    /**\n     * 获取容器元素\n     * @returns HTMLDivElement 容器元素\n     */\n    public getContainer(): HTMLDivElement {\n        return this.container;\n    }\n\n    /**\n     * 设置容器大小\n     * @param width 宽度\n     * @param height 高度\n     */\n    public setSize(width: string, height: string): void {\n        this.container.style.width = width;\n        this.container.style.height = height;\n    }\n    \n    /**\n     * 进入全屏模式\n     * 将iframe扩展到整个窗口大小，并暂停自动调整大小\n     */\n    public enterFullscreen(): void {\n        if (this.originalState.isFullscreen) return; // 已经是全屏了\n        \n        // 保存当前状态\n        this.originalState = {\n            position: this.container.style.position,\n            top: this.container.style.top,\n            left: this.container.style.left,\n            width: this.container.style.width,\n            height: this.container.style.height,\n            zIndex: this.container.style.zIndex,\n            overflow: this.container.style.overflow,\n            border: this.container.style.border,\n            margin: this.container.style.margin,\n            padding: this.container.style.padding,\n            boxSizing: this.container.style.boxSizing,\n            minWidth: this.minWidth,\n            minHeight: this.minHeight,\n            maxWidth: this.maxWidth,\n            maxHeight: this.maxHeight,\n            isFullscreen: true\n        };\n        \n        // 暂停resize功能\n        this.resizeEnabled = false;\n        \n        // 设置全屏样式\n        this.container.style.position = 'fixed';\n        this.container.style.top = '0';\n        this.container.style.left = '0';\n        this.container.style.width = '100vw';\n        this.container.style.height = '100vh';\n        this.container.style.zIndex = '2147483647';\n        this.container.style.border = 'none';\n        this.container.style.margin = '0';\n        this.container.style.padding = '0';\n        this.container.style.boxSizing = 'border-box';\n        \n        // 临时禁用最小/最大尺寸限制\n        this.setMinSize(null, null);\n        this.setMaxSize(null, null);\n    }\n    \n    /**\n     * 退出全屏模式\n     * 恢复iframe到原始大小，并重新启用自动调整大小\n     */\n    public exitFullscreen(): void {\n        if (!this.originalState.isFullscreen) return; // 不是全屏状态\n        \n        // 恢复原来的样式\n        this.container.style.position = this.originalState.position || '';\n        this.container.style.top = this.originalState.top || '';\n        this.container.style.left = this.originalState.left || '';\n        this.container.style.width = this.originalState.width || '';\n        this.container.style.height = this.originalState.height || '';\n        this.container.style.zIndex = this.originalState.zIndex || '';\n        this.container.style.overflow = this.originalState.overflow || '';\n        this.container.style.border = this.originalState.border || '';\n        this.container.style.margin = this.originalState.margin || '';\n        this.container.style.padding = this.originalState.padding || '';\n        this.container.style.boxSizing = this.originalState.boxSizing || '';\n        \n        // 恢复最小/最大尺寸限制\n        this.setMinSize(this.originalState.minWidth ?? null, this.originalState.minHeight ?? null);\n        this.setMaxSize(this.originalState.maxWidth ?? null, this.originalState.maxHeight ?? null);\n        \n        // 重新启用resize功能\n        this.resizeEnabled = true;\n        \n        // 重置状态\n        this.originalState.isFullscreen = false;\n        \n        // 触发一次resize以恢复适当的大小\n        if (this.iframe.contentWindow) {\n            // 尝试通过消息触发重新调整大小\n            this.iframe.contentWindow.postMessage({ type: 'requestResize' }, '*');\n        }\n    }\n    \n    /**\n     * 切换全屏状态\n     * 如果当前是全屏，则退出；否则进入全屏\n     */\n    public toggleFullscreen(): void {\n        if (this.originalState.isFullscreen) {\n            this.exitFullscreen();\n        } else {\n            this.enterFullscreen();\n        }\n    }\n    \n    /**\n     * 判断是否是全屏状态\n     * @returns boolean 是否处于全屏状态\n     */\n    public isFullscreen(): boolean {\n        return this.originalState.isFullscreen;\n    }\n    \n    /**\n     * 启用或禁用resize功能\n     * @param enabled 是否启用resize\n     */\n    public enableResize(enabled: boolean): void {\n        this.resizeEnabled = enabled;\n        \n        // 如果重新启用了resize，尝试触发一次调整大小\n        if (enabled && this.iframe.contentWindow && !this.originalState.isFullscreen) {\n            this.iframe.contentWindow.postMessage({ type: 'requestResize' }, '*');\n        }\n    }\n\n    public exit(){\n        const iframe = this.iframe;\n        if(!iframe)return;\n        const clone = iframe.cloneNode(false);\n        iframe.replaceWith(clone);\n        iframe.remove();\n        if(this.blobUrl){\n            URL.revokeObjectURL(this.blobUrl);\n            this.blobUrl = undefined;\n        }\n        console.log('iframe released', this.iframeId)\n    }\n}","import React, { useEffect, useRef, useState } from 'react';\r\nimport { IFrameContainer, IFrameHtmlBuilder } from './IFrameContainer';\r\n// --- Add MUI Imports ---\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Typography from '@mui/material/Typography';\r\nimport Alert from '@mui/material/Alert';\r\n// --- End MUI Imports ---\r\n\r\ninterface IFrameReactContainerProps {\r\n    /** 容器样式 */\r\n    style?: React.CSSProperties;\r\n    /** 容器类名 */\r\n    className?: string;\r\n    /** 要加载的URL */\r\n    url?: string;\r\n    /** 要加载的HTML内容 */\r\n    content?: string;\r\n    urlAsContent?:boolean;\r\n    /** 最小宽度（像素） */\r\n    minWidth?: number;\r\n    /** 最小高度（像素） */\r\n    minHeight?: number;\r\n    /** 最大宽度（像素） */\r\n    maxWidth?: number;\r\n    /** 最大高度（像素） */\r\n    maxHeight?: number;\r\n    /** 加载失败的回调 */\r\n    onError?: (error: Error) => void;\r\n    /** 加载完成的回调 */\r\n    onLoad?: () => void;\r\n    htmlBuilder?: IFrameHtmlBuilder\r\n}\r\n\r\nexport const IFrameReactContainer: React.FC<IFrameReactContainerProps> = ({\r\n    style,\r\n    className,\r\n    url,\r\n    content,\r\n    urlAsContent,\r\n    minWidth,\r\n    minHeight,\r\n    maxWidth,\r\n    maxHeight,\r\n    onError,\r\n    onLoad,\r\n    htmlBuilder\r\n}) => {\r\n    const containerRef = useRef<HTMLDivElement>(null);\r\n    const iframeContainerRef = useRef<IFrameContainer | null>(null);\r\n    // Internal loading state for the iframe itself\r\n    const [iframeLoading, setIframeLoading] = useState<boolean>(false); \r\n    // Internal error state for the iframe itself\r\n    const [iframeError, setIframeError] = useState<Error | null>(null); \r\n \r\n    useEffect(()=>{\r\n        return ()=>{\r\n            if(iframeContainerRef.current){\r\n                iframeContainerRef.current.exit()\r\n            }\r\n        }\r\n    }, [])\r\n    useEffect(() => {\r\n        // 创建 IFrameContainer 实例\r\n        if (!iframeContainerRef.current && containerRef.current) {\r\n            iframeContainerRef.current = new IFrameContainer();\r\n            const container = iframeContainerRef.current;\r\n            container.setMinSize(minWidth ?? null, minHeight ?? null);\r\n            container.setMaxSize(maxWidth ?? null, maxHeight ?? null);\r\n            containerRef.current.appendChild(container.getContainer());\r\n        }\r\n\r\n        return () => {\r\n            // 清理事件监听\r\n            if (containerRef.current && iframeContainerRef.current) {\r\n                containerRef.current.removeChild(iframeContainerRef.current.getContainer());\r\n                iframeContainerRef.current = null;\r\n            }\r\n        };\r\n    }, [minWidth, minHeight, maxWidth, maxHeight]);\r\n\r\n    useEffect(() => {\r\n        const iframeContainer = iframeContainerRef.current;\r\n        if (!iframeContainer) return;\r\n\r\n        const loadContentOrUrl = async () => {\r\n            // Reset internal state before loading\r\n            setIframeLoading(true); \r\n            setIframeError(null);\r\n            try {\r\n                if (content) { // Check for content first\r\n                    iframeContainer.loadContent(content, htmlBuilder);\r\n                    // For srcdoc, loading might be considered finished immediately\r\n                    // or rely on resizer events. Let's tentatively set loading false.\r\n                    setIframeLoading(false); \r\n                    onLoad?.(); // Call parent onLoad immediately for content\r\n                } else if (url) { // Then check for URL\r\n                    // Pass wrapped callbacks to the actual loadUrl\r\n                    const handleLoad = () => {\r\n                        setIframeLoading(false);\r\n                        setIframeError(null);\r\n                        onLoad?.(); // Call the parent's onLoad\r\n                    };\r\n\r\n                    const handleError = (error: Error) => {\r\n                        console.error('%cIFrameReactContainer: handleError (callback from IFrameContainer) triggered.', 'color: red;', error);\r\n                        setIframeLoading(false);\r\n                        setIframeError(error);\r\n                        onError?.(error); // Call the parent's onError\r\n                    };\r\n                    if(urlAsContent){\r\n                        iframeContainer.loadUrlAsContent(url, handleLoad, handleError, htmlBuilder);\r\n                        handleLoad();\r\n                    }else{\r\n                        iframeContainer.loadUrl(url, handleLoad, handleError);\r\n                    }\r\n                    // Note: setIframeLoading(false) is now handled inside the callbacks\r\n                } else {\r\n                    setIframeLoading(false); // No URL or content, stop loading\r\n                }\r\n            } catch (error) { // Catch synchronous errors during setup if any\r\n                console.error('>>> Sync Error during loadContentOrUrl setup:', error);\r\n                if (error instanceof Error) {\r\n                    setIframeLoading(false);\r\n                    setIframeError(error);\r\n                    onError?.(error);\r\n                } else {\r\n                    const unknownError = new Error('An unknown error occurred during setup');\r\n                    setIframeLoading(false);\r\n                    setIframeError(unknownError);\r\n                    onError?.(unknownError);\r\n                }\r\n            }\r\n        };\r\n\r\n        loadContentOrUrl();\r\n    }, [url, content, onError, onLoad, iframeContainerRef.current]); \r\n  \r\n    return (\r\n        <div ref={containerRef} style={style} className={className}>\r\n            {/* Display internal loading/error state */}\r\n            {iframeLoading && (\r\n                <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', padding: 2 }}>\r\n                    <CircularProgress size={24} />\r\n                    <Typography variant=\"body2\" sx={{ ml: 1 }}>Loading preview...</Typography>\r\n                </Box>\r\n            )}\r\n            {iframeError && !iframeLoading && (\r\n                <Alert severity=\"error\" sx={{ m: 1 }}>Preview Error: {iframeError.message}</Alert>\r\n            )}\r\n            {/* The actual iframe container (managed by IFrameContainer class) is appended here */}\r\n        </div>\r\n    );\r\n};","export * from \"C:\\\\work\\\\android-droid\\\\html\\\\website-2024-12\\\\node_modules\\\\.pnpm\\\\react-i18next@15.1.4_i18next@24.1.0_typescript@5.8.2__react-dom@19.0.0_react@19.0.0__react@19.0.0\\\\node_modules\\\\react-i18next\\\\dist\\\\es\\\\index.js\"","'use client'\r\nimport { i18n, i18nInit, IPageScrollPosition, StorePageContext, StorePageDynamicContext, toProxy, watchUpdates, storeUtils } from \"@fanfanlo\";\r\nimport { useRouter } from \"next/router\";\r\nimport { PropsWithChildren, useEffect } from \"react\";\r\nimport { I18nextProvider } from \"react-i18next\";\r\n\r\n\r\ni18nInit()\r\n\r\nexport function AppShell({ children }: PropsWithChildren) {\r\n  const router = useRouter();\r\n  const scrollKey = 'scrollPositionInfo'\r\n  const href = window.location.href.split(\"#\")[0]\r\n  const dynamicKey = `dynamic-${href}`\r\n  const s = storeUtils.namespace(dynamicKey);\r\n  let o: Record<string, unknown>|undefined = s.read(dynamicKey)\r\n  if (!o) {\r\n    o = {}\r\n    s.write(dynamicKey, o)\r\n  }\r\n  o = toProxy(o)\r\n  useEffect(() => {\r\n\r\n    router.beforePopState((state) => {\r\n      s.clearAll()\r\n      return true\r\n    })\r\n  })\r\n  useEffect(() => {\r\n    s.write(dynamicKey, o)\r\n    return watchUpdates(o, () => {\r\n      s.write(dynamicKey, o)\r\n    })\r\n  }, [])\r\n  useEffect(() => {\r\n    const info = (s.read(scrollKey) || { x: 0, y: 0 }) as IPageScrollPosition\r\n    // console.log('app shell scroll info info = ', info)\r\n    if (info.x == 0 && info.y == 0) {\r\n      listenScroll()\r\n    } else {\r\n      window.requestAnimationFrame(() => {\r\n        window.scrollTo(info.x, info.y)\r\n        listenScroll()\r\n      })\r\n    }\r\n    function onScroll(e: Event) {\r\n      // console.log('app shell on scroll', { x: window.scrollX, y: window.scrollY })\r\n      s.write(scrollKey, { x: window.scrollX, y: window.scrollY })\r\n    }\r\n    function listenScroll() {\r\n      window.addEventListener('scroll', onScroll)\r\n    }\r\n\r\n    function unsub() {\r\n      window.removeEventListener('scroll', onScroll)\r\n    }\r\n    return unsub\r\n  });\r\n  return (\r\n    <StorePageContext value={s}>\r\n      <StorePageDynamicContext value={o}>\r\n\r\n        <I18nextProvider i18n={i18n}>\r\n          {children}\r\n        </I18nextProvider>\r\n      </StorePageDynamicContext>\r\n    </StorePageContext>\r\n  )\r\n}","import { Box, Button, Container } from '@mui/material';\r\nimport { createContext, PropsWithChildren, useContext, useEffect } from 'react';\r\nimport { ITitleI18nConf, ITitleI18nNsConf, ITitleI18nTitleConf } from '.';\r\nimport { isBuild, isDev, isServer, loadI18nValue, publicRuntimeConfig } from '@fanfanlo';\r\nimport { read } from 'fs';\r\nimport { useTranslation } from '@fanfanlo';\r\n\r\n\r\nfunction Reload(){\r\n  if(!isDev)return <>  </>\r\n  const {t} = useTranslation(\"app-ui/components/page/content\")\r\n  return(\r\n    <Box>\r\n      <Button onClick={() => {window.location.reload()}}>{t(\"PageContent.refresh\")}</Button>\r\n      {new Date().toLocaleString()}\r\n    </Box>\r\n  )\r\n}\r\n\r\nconst ScrollP = createContext({ x: 0, y: 0 });\r\nlet index = 0;\r\nexport default function PageContent({ children, titleConf, reload }: {titleConf?:ITitleI18nConf, reload?: boolean} & PropsWithChildren) {\r\n  index++;\r\n  const scroll = useContext(ScrollP);\r\n  const clazz = `${Date.now() + Math.random() * Date.now()}`;\r\n  useEffect(()=>{\r\n    async function loadTitle(){\r\n      if(!titleConf)return\r\n      let title = titleConf.title\r\n      if(titleConf.ns){\r\n        title = await loadI18nValue(titleConf.ns, titleConf.key || \"content.title\")\r\n      }\r\n      if(!title)return\r\n      document.title = title\r\n    }\r\n    loadTitle()\r\n  }, [])\r\n  useEffect(() => {\r\n    const container = document.getElementsByClassName(clazz)[0];\r\n    if (!container) return;\r\n    container.scrollTop = scroll.y;\r\n    const onScroll = () => {\r\n      var scrollTop = container.scrollTop;\r\n      scroll.y = scrollTop;\r\n    };\r\n    container.removeEventListener('scroll', onScroll);\r\n    container.addEventListener('scroll', onScroll, { passive: true });\r\n    return () => container.removeEventListener('scroll', onScroll);\r\n  }, [clazz, scroll]);\r\n  return (\r\n\r\n    <Container className={clazz} sx={{ flexGrow: 1, overflow: 'auto', padding: \"0px\" }}>\r\n      <Box>\r\n        {(reload || (reload == undefined)) && <Reload />}\r\n        {children}\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","import { PropsWithChildren } from \"react\";\r\nimport PageContent from \"./PageContent\";\r\nimport { ITitleI18nConf } from \".\";\r\nexport default function AndroidPageContent({ children, titleConf, reload }: {titleConf?:ITitleI18nConf, reload?: boolean} & PropsWithChildren)  {\r\n    return (\r\n        <PageContent titleConf={titleConf} reload={reload}>\r\n            {children}\r\n        </PageContent>\r\n    )\r\n}\r\n"],"names":[],"sourceRoot":"","ignoreList":[2]}