{"version":3,"file":"static/chunks/4869-470122b2375af43f.js","mappings":";;;;;;;;;;;;;;AACwD;AAEb;AACpB;AAIvB,MAAMI,aAAa,IAAIJ,0DAAUA;AACjC,sCAAKK;;;;WAAAA;EAAAA;AAgBL,SAASC,kBAAqBC,QAAkB,EAAEC,KAA2B;IACzE,oDAAoD;IACpDJ,WAAWK,QAAQ,CAACF,UAAUC;AAClC;AAEA,SAASE,eAAkBF,KAA2B;IAClD,0CAA0C;IAC1C,OAAQA,MAAMG,iBAAiB;QAC3B,KAAKT,6DAAiBA,CAACU,MAAM;YACzBC,+BAAsCL;YACtC;QACJ,KAAKN,6DAAiBA,CAACY,OAAO;YAC1BC,gCAAuCP;YACvC;QACJ;YAAS;gBACL,MAAMQ,MAAM,uCAA+D,OAAxBR,MAAMG,iBAAiB;gBAC1EV,mEAAeA,CAACe,KAAKR;YACzB;IACJ;AACJ;AAEA,SAASO,cAAiBR,QAAkB,EAAEC,KAA2B;QAErDA;IADhB,wCAAwC;IACxC,MAAMM,WAAUN,qBAAAA,MAAMS,WAAW,cAAjBT,yCAAAA,mBAAmBM,OAAO;IAC1C,IAAI,CAACA,SAAS;QACV,MAAME,MAAO;QACb,OAAOf,mEAAeA,CAACe,KAAKR;IAChC;IACA,OAAQD;QACJ;YACI,gDAAgD;YAChDJ,mDAAO,CAACW,QAAQK,QAAQ,EAAEX,MAAMY,IAAI;YAEpC;QACJ;YACIjB,mDAAO,CAACW,QAAQO,SAAS,EAAEb,MAAMY,IAAI;YACrC;QACJ;YAAS;gBACL,MAAMJ,MAAM,qCAAoD,OAAfR,MAAMD,QAAQ;gBAC/DN,mEAAeA,CAACe,KAAKR;YACzB;IACJ;AACJ;AACA,SAASK,aAAgBN,QAAkB,EAAEC,KAA2B;QAErDA;IADfc,QAAQC,GAAG,CAAC,kBAAkBf;IAC9B,MAAMI,UAASJ,qBAAAA,MAAMS,WAAW,cAAjBT,yCAAAA,mBAAmBI,MAAM;IACxC,IAAI,CAACA,QAAQ;QACT,MAAMI,MAAO;QACb,OAAOf,mEAAeA,CAACe,KAAKR;IAChC;IACA,OAAQD;QACJ;YACIe,QAAQC,GAAG,CAAC,gBAAgBC,KAAKC,KAAK,CAACD,KAAKE,SAAS,CAACd,OAAOO,QAAQ;YACrEhB,mDAAO,CAACS,OAAOO,QAAQ,EAAEX,MAAMY,IAAI;YACnCE,QAAQC,GAAG,CAAC,eAAeC,KAAKC,KAAK,CAACD,KAAKE,SAAS,CAACd,OAAOO,QAAQ;YACpE;QACJ;YACIhB,mDAAO,CAACS,OAAOS,SAAS,EAAEb,MAAMY,IAAI;YACpC;QACJ;YAAS;gBACL,MAAMJ,MAAM,oCAAmD,OAAfR,MAAMD,QAAQ;gBAC9DN,mEAAeA,CAACe,KAAKR;YACzB;IACJ;AACJ;AACA,SAASmB,MAASnB,KAA2B;IACzC,OAAQA,MAAMG,iBAAiB;QAC3B,KAAKT,6DAAiBA,CAAC0B,WAAW;YAC9BC,iBAAiBrB;YACjB;QACJ,KAAKN,6DAAiBA,CAAC4B,YAAY;YAC/BC,kBAAkBvB;YAClB;IAER;AACJ;AACA,SAASuB,kBAAqBvB,KAA2B;QACvCA;IAAd,MAAMwB,SAAQxB,qBAAAA,MAAMS,WAAW,cAAjBT,yCAAAA,mBAAmBsB,YAAY;IAC7C,IAAI,CAACE,OAAO;QACR,MAAMhB,MAAO;QACb,OAAOf,mEAAeA,CAACe,KAAKR;IAChC;IACAwB,MAAMC,IAAI,CAACC,IAAI,CAAC1B,MAAMY,IAAI;AAC9B;AACA,SAASS,iBAAoBrB,KAA2B;QACtCA;IAAd,MAAMwB,SAAQxB,qBAAAA,MAAMS,WAAW,cAAjBT,yCAAAA,mBAAmBoB,WAAW;IAC5C,IAAI,CAACI,OAAO;QACR,MAAMhB,MAAO;QACb,OAAOf,mEAAeA,CAACe,KAAKR;IAChC;IACAwB,MAAMC,IAAI,CAACC,IAAI,CAAC1B,MAAMY,IAAI;AAC9B;AACA,SAASe;IACL/B,WAAWgC,WAAW,mBAA0B1B;IAChDN,WAAWgC,WAAW,QAAeT;AACzC;AACO,MAAMU,oBAAoB;IAC7BF;IACA/B;IACAE;IACAD;AACJ,EAAC;;;;;;;;;;;;AC7HM,SAAS,gBAAgB;IAAA;aAAA,2BAAe;;IAC3C,QAAQ,MAAM,KAAK,IAAI;IACvB,QAAQ,MAAM,GAAG;IACjB,MAAM,IAAI,MAAM,GAAG;AACvB;;;;;;;;;;;;ACLuD;AAEhD,MAAMkC,eAAe,GAAoB,OAAjBD,yEAAgBA,EAAC,QAAK;;;;;;;;;;;ACD9C,+CAAKpC;;;;;;;;;;;WAAAA;MAYX;;;;;;;;;;;;;;;;;;;;;;;ACXqF;AAmD/E,MAAMwC,iBAAiC,CAAC,EAAC;AAEzC,SAASC,oBAAoBC,GAAU,EAACC,KAAuB;IAClE,IAAGD,OAAOF,gBAAe;QACrB,MAAM,IAAII,MAAM,mCAAuC,OAAJF;IACvD;IACA,iDAAiD;IACjDF,cAAc,CAACE,IAAI,GAAGC;AAC1B;AAEO,SAASE,eAAyEH,GAAU;IAC/F,OAAOF,cAAc,CAACE,IAAI;AAC9B;AAEO,SAASI,kBAA4EC,IAAW,EAAEd,IAAa,EAAEe,gBAAsB,EAAEC,EAA4B;IACxK,MAAMC,MAAM;QACRH;QACAI,uBAAsBb,6FAAwBA,CAACU;QAC/CA;QACAI,QAAO,CAAC1B,aAA0BR;YAC9B,MAAMR,SAASsC;YACftB,YAAYK,IAAI,CAACC,IAAI,CAACtB;QAC1B;QACA2C,QAAO,CAAC3C,QAAUQ;YACdqB,kFAAaA,CAAC7B,QAAQQ;QAC1B;QACA+B;QACAhB;IACJ;IACAQ,oBAAoBM,MAAKG;IACzB,OAAOA;AACX;;;;;;;;;;;;;AC/EyC;AAGlC,gDAAKK;;WAAAA;MAEX;AACM,yDAAKC;;;WAAAA;MAGX;AAmCM,SAASC,iCAAiCC,MAAqC;IAClF,MAAMC,UAAUL,2DAAYA,CAACM,uBAAuB,CAACF,OAAOG,SAAS;IACrE,MAAM3C,OAAsC,CAAC;IAC7C,MAAMgC,MAAM;QAAChC;QAAMwC;IAAM;IACzB,IAAG,CAACC,SAAQ,OAAOT;IACnBhC,KAAKyC,OAAO,GAAGA;IACf,IAAGA,QAAQG,kBAAkB,CAACC,EAAE,KAAKL,OAAOM,oBAAoB,EAAC,OAAOd;IACxEhC,KAAK4C,kBAAkB,GAAGH,QAAQG,kBAAkB;IACpD,IAAG,CAACJ,OAAOO,eAAe,EAAC,OAAOf;IAClC,MAAMgB,gBAAgBhD,KAAK4C,kBAAkB,CAAC/B,IAAI,CAACoC,IAAI,CAACC,CAAAA,OAAMA,KAAKL,EAAE,KAAKL,OAAOO,eAAe;IAChG,IAAG,CAACC,eAAc,OAAOhB;IACzBhC,KAAKgD,aAAa,GAAGA;IACrBG,YAAYnD,MAAMwC,QAAQQ;IAC1BI,aAAapD,MAAMwC,QAAQQ;IAC3B,OAAOhB;AAEX;AAEA,SAASmB,YAAYnD,IAAmC,EAAEwC,MAAqC,EAAEQ,aAA4B;IACzH,IAAG,CAACR,OAAOa,aAAa,IAAI,CAACL,cAAcxC,WAAW,IAAIgC,OAAOa,aAAa,IAAIL,cAAcxC,WAAW,CAACqC,EAAE,EAAC;IAC/G7C,KAAKQ,WAAW,GAAGwC,cAAcxC,WAAW;IAC5C,MAAMhB,SAASwD,cAAcxC,WAAW,CAACK,IAAI,CAACoC,IAAI,CAACC,CAAAA,OAAMA,KAAKL,EAAE,KAAKL,OAAOc,QAAQ;IACpF,IAAG,CAAC9D,QAAO;IACXQ,KAAKR,MAAM,GAAGA;AAClB;AAEA,SAAS4D,aAAapD,IAAmC,EAAEwC,MAAqC,EAAEQ,aAA4B;IAC1H,IAAG,CAACR,OAAOe,cAAc,IAAI,CAACP,cAActC,YAAY,IAAI8B,OAAOe,cAAc,IAAIP,cAActC,YAAY,CAACmC,EAAE,EAAC;IACnH7C,KAAKU,YAAY,GAAGsC,cAActC,YAAY;IAC9C,MAAMhB,UAAUsD,cAActC,YAAY,CAACG,IAAI,CAACoC,IAAI,CAACC,CAAAA,OAAMA,KAAKL,EAAE,KAAKL,OAAOgB,SAAS;IACvF,IAAG,CAAC9D,SAAQ;IACZM,KAAKN,OAAO,GAAGA;AACnB;;;;;;;;;;;;;;;AC/Ec;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACNU;AACV;AACW;AAMzB,MAAM,IAAI,iDAAU,CAAC,UAAU,cAAc;AAK7C,MAAM,OAAO,4DAAO,CAAQ;IAAC,MAAK,CAAC;AAAC,CAAC;AACrC,aAAa;AACb,SAAS,eAAc;IACnB,MAAM,OAAQ,EAAE,KAAK,MAAM,KAAK,CAAC;IACjC,KAAK,OAAO,qDAAE,CAAQ,IAAI,IAAI,OAAO,CAAC;AAC1C;AAEA,SAAS,kBAAiB;IACtB,KAAK,OAAO,CAAC;AACjB;AAEA,SAAS,aAAa,MAAoB;IACtC,EAAE,MAAM,QAAQ,IAAI;IACpB,KAAK,OAAO;AAChB;AAEA,SAAS,6BAA6B,aAAmB;IACrD,OAAO,KAAK,KAAK,KAAK,QAAM,KAAK,gBAAgB,WAAW;AAChE;AACO,MAAM,mBAAmB;IAC5B;IACA;IACA;IACA;IACA;AACJ;;;;;;;;;;;;ACtCoD;AAE7C,MAAMwB,mBAAmB,GAAoB,OAAjBuC,sEAAgBA,EAAC,YAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFlC;AAG3B,MAAM,aAAa,IAAI,4BAAU,CAAC;AAO3B,MAAM,cAA2B;IACpC;IACA,iBAAgB;IAChB,YAAW,IAAS;YAChB,WAAW,SAAS,YAAY;YAChC,YAAY,kBAAkB;QAClC;IACA,kBAAiB,CAAC;QACd,OAAO,WAAW,YAAY,cAAa,QAAQ;IACvD;AACJ;;;;;;;;ACVY;AAT4B;AACd;AAGnB,SAAS,oBAA0B;UAAT,SAAS,GAAsB,CAAjC;IAC3B,MAAM,SAAS,yBAAS,CAAC;IACzB,OAEI,oCAAC,sCAAe,EAAf;QAAgB,MAAK;QAClB,8CAAC,mBAAM,CAAC,KAAP;YAEG,SAAS;gBAAE,SAAS;gBAAG,GAAG;YAAG;YAC7B,SAAS;gBAAE,SAAS;gBAAG,GAAG;YAAE;YAC5B,MAAM;gBAAE,SAAS;gBAAG,GAAG;YAAK;YAC5B,YAAY;gBAAE,UAAU;YAAI;YAE3B;QAAA,GANI,OAAO;IAOhB,CACJ;AAER;;;;ACGY;AAxBgB;AACR;AACM;AACK;AAC/B,IAAI,UAAU;AACP,SAAS,eAAmB;UAAR,SAAQ,GAA6B,CAAtC;IACtB,MAAM,KAAK,aAAsB,OAAT,SAAS;IACjC,mBAAS,CAAC;QACN,MAAM,MAAM,SAAS,cAAc,IAAM,CAAE,MAAJ,EAAE;QACzC,MAAM,WAAW,WAAW,CAAC,iBAAiB;YAC1C,IAAG,CAAC,IAAI;QACZ,CAAC;QACD,IAAG,CAAC,IAAI;QACR,IAAI,iBAAiB,SAAQ,CAAC;YAC1B,IAAG,WAAW,CAAC,mBAAmB,EAAE;YACpC,EAAE,gBAAgB;YAClB,EAAE,eAAe;QACrB,CAAC;QACD,OAAO;YACH,SAAS;QACb;IACJ,GAAE,CAAC,CAAC;IACJ,OACI,oCAAC,kBAAG,EAAH;QAAI;QACD,8CAAC,cAAc,EAAd;YACI;QAAA,CACL;IAAA,CACJ;AAER;;;;;;;;;;;;;;;;;;;;;;;;;;ACIyB;AAjCoF;AAG5D;AACnB;AACE;AACT;AACG;AACA;AAEK;AAY/B,SAAS,aAAa,OAAc;IAChC,MAAM,EAAE,UAAU,OAAO,IAAI;IAI7B,MAAM,UAAU,mCAAgB,CAAC;QAC7B,QAAQ,SAAS,OAAO,IAAI;IAChC,CAAC;IAED,OACI,oCAAC,oBAAK,EAAL;QAAM,QAAQ;QAAO,WAAU;QAAO,IAAI,CAAC;QACvC,wCAAY,oCAAC,SAAI;IAAA,CACtB;AAER;AASO,SAAS,YAAe,EAA6C;UAAnD,MAAM,IAAR;IACnB,OAEI,oBAAC;QAAO,OAAO;QACX,8BAAC;YACG,8BAAC;gBAAW,SAAQ;gBAAK,WAAU;gBAC9B;YAAA,CACL;QAAA,CACJ;IAAA,CACJ;AAER;AAYA,SAAS,UAAU,OAAc;IAC7B,MAAM,EAAE,UAAU,OAAO,IAAI;IAI7B,MAAM,UAAU,mCAAgB,CAAC;QAC7B,QAAQ,SAAS,OAAO,IAAI;QAC5B,mBAAmB;QACnB,WAAW;IACf,CAAC;IAED,MAAM,cAAc,CAAC;QACjB,MAAM,UACD,MAAM,OAA0B,iBAAiB,UACpD,cAAc,qBAAqB;QAErC,IAAI,QAAQ;YACR,OAAO,eAAe;gBAClB,OAAO;YACX,CAAC;QACL;IACJ;IAEA,OACI,oCAAC,mBAAI,EAAJ;QAAK,IAAI;QACN,8CAAC,kBAAG,EAAH;YAAI,WAAQ;YACT,SAAS;YACT,MAAK;YACL,IAAI;gBAAE,UAAU;gBAAS,QAAQ;gBAAI,OAAO;YAAG;YAE9C;QAAA;IACL,CACJ;AAER;AACO,SAAS,gBAAgB,OAA8B;IAC1D,MAAM,EAAE,UAAU,aAAa,WAAW,OAAO,IAAI;IACrD,MAAM,SAAS,yBAAS,CAAC;IACzB,SAAS,aAAY;QAEjB,MAAM,QAAQ,+CAAmB,CAAC,eAAe;QACjD,IAAG,MAAM,iBAAiB;QAC1B,IAAG,YAAY,gBAAe;YAC1B,MAAM,IAAwB;gBAAC,kBAAiB;YAAK;YACrD,YAAY,eAAe,SAAS,QAAO,CAAC;YAC5C,IAAG,EAAE,iBAAiB;QAC1B;QACA,OAAO,KAAK;IAChB;IACA,OACI,oCAAC,SAAS,EAAT;QACD,+CAAC,cAAM,EAAN;YACG;gBAAA,oCAAC,2BAAW,EAAX,EAAY;gBACb,oCAAC,+CAAiB,QAAjB;oBACG,8CAAC,4BAAM,EAAN;wBAAO,OAAM;wBACT,sBAAY,UACb,YAAY,UACZ,qCAAC,8BAAO,EAAP;4BACG;gCAAA,oCAAC,gCAAiB,EAAjB;oCAAkB,SAAS;gCAAA,CAAY;gCACvC,YAAY;6BAAA;wBAAA,CACjB;oBAAA,CAEJ;gBAAA,EACJ;gBACA,oCAAC,8BAAO,EAAP;oBAAQ,IAAG;gBAAA,CAAqB;gBACjC,oCAAC,wBAAS,EAAT;oBAAU,IAAI;wBAAC,SAAQ;wBAAK,WAAU;oBAAM;oBACzC,8CAAC,iCAAkB,EAAlB;wBAAmB;wBAAsB;wBACrC;oBAAA,CACL;gBAAA,CACJ;gBAEA,oCAAC,4CAAc,QAAd;oBACG,8CAAC,kBAAG,EAAH;wBAAI,MAAK;wBAAQ,cAAW;wBACzB,8CAAC,8BAAmB,EAAnB,EAAoB;oBAAA,CACzB;gBAAA,EACJ;aAAA;QAAA,CACJ;IAAA,CACA;AAER;;;;;;;;;;;;;;;;;;;;ACnJc;;;;ACCA;;;;ACEP,SAAS,IAAG,CAEnB;AACO,IAAK,8BAAL,kBAAKC;IACRA,4BAAAA,CAAA,aAAU;IADF,OAAAA;CAAA;AAGL,IAAK,8BAAL,kBAAKC;IACRA,4BAAAA,CAAA,eAAY;IACZA,4BAAAA,CAAA,kBAAe;IAFP,OAAAA;CAAA;;;;ACTE;;;;ACAA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAd,SAAe,YAAY,QAAmB,eAAsB,WAAkB,WAAiB;IAAA;QACnG,MAAM,UAAU,OAAO;QACvB,QAAQ,IAAI,YAAY,OAAO;QAC/B,QAAQ,IAAI,kBAAkB,aAAa;QAC3C,QAAQ,IAAI,cAAc,SAAS;QACnC,IAAG,YAAY,WAAU;YACrB;QACJ;QACA,IAAG,kBAAkB,SAAQ;YACzB,OAAO,QAAQ,SAAS;QAC5B;QACA,MAAM,YAAY,EAAE;YAChB,OAAO,KAAK;YACZ;QACJ;QACA,IAAG,OAAO,aAAa,aAAa,WAAU;YAC1C,OAAO,KAAK,SAAS;QACzB;IACJ;AAAA;AAGO,MAAM,cAAc;IACvB;AACJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBW;AALsB;AAE1B,SAAS,eAAsB,EAAwB;UAAnC,YAAW,IAAZ;IACtB,MAAM,cAAc,0CAAgB,CAAC,6BAA6B,WAAW;IAC7E,MAAM,SAAQ,2CAAa,cAAa,yBAA+C,OAAtB,YAAY,UAAU,IAAK;IAC5F,OAAO,oCAAC;QAAI,KAAK;QAAO,OAAO;QAC/B,OAAO;YAAE,cAAc;QAAM;IAAA;AAEjC;;;;;;;;;;;;;;;;;;;;ACR4G;AACzE;AACA;AAC2B;AACvB;AACa;AACyB;AACC;AAE9E,SAASY,cAAc,KAA8D;QAA9D,EAACvE,IAAI,EAAEwE,QAAQ,EAA+C,GAA9D;QAGf3E,sBAA4BA,iCAAuCA,4BAAkCA,0BAQ1FA,uBACWA,kCACLA,6BACFA;IAbnB,MAAMA,cAAkC,CAAC;IACzCwE,oDAAuBA,CAACI,UAAU,CAACC,mBAAmB,CAAC1E,MAAMH;IAC7D,IAAG,GAACA,uBAAAA,YAAY4C,OAAO,cAAnB5C,2CAAAA,qBAAqBgD,EAAE,KAAI,GAAChD,kCAAAA,YAAY+C,kBAAkB,cAA9B/C,sDAAAA,gCAAgCgD,EAAE,KAAI,GAAChD,6BAAAA,YAAYmD,aAAa,cAAzBnD,iDAAAA,2BAA2BgD,EAAE,KAAI,GAAChD,2BAAAA,YAAYW,WAAW,cAAvBX,+CAAAA,yBAAyBgD,EAAE,GAAC;QACjI3C,QAAQyE,KAAK,CAAC,0CAA0C9E;QACxD;IACJ;IACA,MAAM+E,SAAST,yBAASA;IACxB,MAAMU,WAAWD,OAAOE,QAAQ;IAChC,MAAMC,QAAuC;QACzCF;QACAlC,SAAS,GAAE9C,wBAAAA,YAAY4C,OAAO,cAAnB5C,4CAAAA,sBAAqBgD,EAAE;QAClCC,oBAAoB,GAAEjD,mCAAAA,YAAY+C,kBAAkB,cAA9B/C,uDAAAA,iCAAgCgD,EAAE;QACxDE,eAAe,GAAElD,8BAAAA,YAAYmD,aAAa,cAAzBnD,kDAAAA,4BAA2BgD,EAAE;QAC9CQ,aAAa,GAAExD,4BAAAA,YAAYW,WAAW,cAAvBX,gDAAAA,0BAAyBgD,EAAE;QAC1ChB,MAAM8B,+BAA2BA,CAACqB,YAAY;QAC9C1B,UAAUtD,KAAK6C,EAAE;QACjBoC,YAAYX,kBAAkBA,CAACzC,IAAI;IACvC;IAEA,MAAMqD,SAAQ,IAAIC,gBAAgB;WAAIC,OAAOC,OAAO,CAACN;KAA6B;IAClF,MAAMO,IAAI,6BAA8C,OAAjBJ,OAAMK,QAAQ;IACrDnB,mBAASA,CAAC;QACNQ,OAAOY,QAAQ,CAACF;IAChB,uCAAuC;IAC3C,GAAG,EAAE;IACL,SAASG;QACLb,OAAO9D,IAAI,CAACwE;IAChB;IACA,qBAAO,oBAACtB,qBAAMA;QACdnB,IAAG;QACH6C,WAAQ;QACRC,SAASF;kBACJjB;;AAET;AACO,SAASoB,iBAAiB5F,IAAwB;IACrD,MAAM6F,cAAcjC,0CAAgBA,CAACkC,4BAA4B,CAAC9F,KAAKD,QAAQ,CAACgG,WAAW;IAE3F,SAASC;QACL,MAAMC,cAAkC,CAAC;QACzC5B,oDAAuBA,CAACI,UAAU,CAACC,mBAAmB,CAAC1E,MAAMiG;QAC7D,MAAMpF,OAAOoF,YAAYxB,UAAU;QACnC,IAAG,CAAC5D,MAAK;YACL,MAAM,IAAIa,MAAM;QACpB;QACA,MAAMwE,QAAQrF,KAAKsF,SAAS,CAACC,CAAAA,IAAKA,EAAEvD,EAAE,KAAK7C,KAAK6C,EAAE;QAClD,IAAGqD,UAAU,CAAC,GAAE;YACZ,MAAM,IAAIxE,MAAM;QACpB;QACAoC,8BAAOA,CAACjD,MAAMwF,MAAM,CAACH,OAAO;IAChC;IACA,qBAAO,qBAACnC,kBAAGA;QAACuC,IAAI;YAAEC,OAAO;QAAO;;0BAC5B,oBAACxC,kBAAGA;0BACA,kCAACyC;8BAAE;;;0BAEP,qBAACvC,oBAAKA;gBAACwC,SAAS;gBAACH,IAAI;oBAAEC,OAAO;gBAAO;;kCACjC,qBAACtC,oBAAKA;wBAACyC,MAAK;wBAAOD,SAAS;;0CACxB,oBAACxC,oBAAKA;0CACF,kCAACJ,SAASA;oCAACkC,aAAa/F,KAAKD,QAAQ,CAACgG,WAAW;;;0CAErD,oBAAC9B,oBAAKA;0CACF,mCAACC,yBAAUA;oCAACoC,IAAI,CAAC;;sDACb,oBAACK;4CAAKC,OAAO;gDAACC,SAAQ;gDAAgBC,YAAY;4CAAO;sDAAIjB,wBAAAA,kCAAAA,YAAakB,KAAK;;sDAC/E,oBAACJ;4CAAKC,OAAO;gDAAEC,SAAQ;gDAAgBC,YAAY;gDAAQE,UAAU;4CAAS;sDAAInB,wBAAAA,kCAAAA,YAAaE,WAAW;;;;;;;kCAItH,oBAAC9B,oBAAKA;wBAACyC,MAAM;kCACT,kCAACnC;4BAAcvE,MAAMA;sCACjB,kCAAC2G;0CAAK;;;;;;;;AAM1B;;;ACjF4B;AACwE;AAEpD;AACO;AACvD,MAAM9E,OAAO,GAAgB,OAAbV,iCAAYA,EAAC;AAW7B,SAASW;IACL,OAAO;QACHe,IAAIoE,0BAAIA;QACRpF;QACA9B,UAAU;YACNgG,aAAa;QACjB;IACJ;AACJ;AAEA,0FAA0F;AAC1F,oDAAoD;AACpD,oBAAoB;AACpB,+CAA+C;AAC/C,iDAAiD;AACjD,gFAAgF;AAChF,6IAA6I;AAC7I,+EAA+E;AAC/E,iBAAiB;AACjB,QAAQ;AACR,iCAAiC;AACjC,uCAAuC;AACvC,qDAAqD;AACrD,oBAAoB;AACpB,8CAA8C;AAC9C,oEAAoE;AACpE,0DAA0D;AAC1D,sDAAsD;AACtD,0DAA0D;AAC1D,6BAA6B;AAC7B,4BAA4B;AAC5B,QAAQ;AACR,0EAA0E;AAC1E,qBAAqB;AACrB,cAAc;AACd,IAAI;AACJ,SAAShF,QACT;AACO,MAAMuD,qBAAqB1C,0CAAiBA,CAACC,MAAMd,MAAMe,kBAAkB8D,gBAAgBA,EAAC;;;;;;;;;;;AC1D5F,MAAMnC,mBAAmB,YAAW;;;;;;;;;;;;ACC7B","sources":["webpack://_N_E/../../libs/droid/project-interface/src/events/projectEventUtils.ts","webpack://_N_E/../../../src/utils/throw-trace-error.ts","webpack://_N_E/../../libs/droid/project-interface/src/actions/app/app-namespace.ts","webpack://_N_E/../../libs/droid/project-interface/src/core/project-member-type.ts","webpack://_N_E/../../libs/droid/project-interface/src/action/IAction.intf.ts","webpack://_N_E/../../libs/droid/project-interface/src/common/trigger-list-action-list-intf.ts","webpack://_N_E/../../src/index.ts","webpack://_N_E/../../../src/storage/app-packages-store.ts","webpack://_N_E/../../libs/droid/project-interface/src/actions/actions-namespace.ts","webpack://_N_E/../../../src/mc/static-model.ts","webpack://_N_E/../../../../src/components/motion/page-transition.tsx","webpack://_N_E/../../../../src/components/app/PageShell.tsx","webpack://_N_E/../../../../src/components/appbar/AppBar.tsx","webpack://_N_E/../../../../../src/pages/action-list/app-selector/index.ts","webpack://_N_E/../../../../src/pages/action-list/index.ts","webpack://_N_E/../../../../src/pages/trigger-list-action-list-common/common.ts","webpack://_N_E/../../../../src/pages/trigger-list-action-list-common/index.ts","webpack://_N_E/../../../src/pages/index.ts","webpack://_N_E/../../../src/utils/router-utils.ts","webpack://_N_E/../../../../src/components/image/AppIcon30.tsx","webpack://_N_E/../../libs/droid/project-interface/src/actions/app/action-open-app/IActionOpenApp.UI.tsx","webpack://_N_E/../../libs/droid/project-interface/src/actions/app/action-open-app/IActionOpenApp.inft.tsx","webpack://_N_E/../../libs/droid/project-interface/src/core/namespace.ts","webpack://_N_E/../../../src/components/index.ts"],"sourcesContent":["\r\nimport { Dispatcher, throwTraceError } from '@fanfanlo';\r\nimport { ITriggerOrActionListPageParsedResult, ITriggerOrActionListParamsData } from '../common';\r\nimport { ProjectMemberType } from '../core'\r\nimport _ from 'lodash';\r\nimport { IActionData } from '../action';\r\nimport { ITriggerData } from '../trigger';\r\n\r\nconst dispatcher = new Dispatcher()\r\nenum EditType {\r\n    add = \"add\",\r\n    updateJavaData = \"updateJavaData\",\r\n    updateShellData = \"updateShellData\",\r\n}\r\nexport interface IProjectEditEvent<T> {\r\n    editType?: EditType\r\n    // editing target type\r\n    projectMemberType: ProjectMemberType\r\n    // IAction or ITrigger's type, also it's namespace\r\n    classType?: string\r\n    info?: ITriggerOrActionListPageParsedResult\r\n    data: T\r\n    projectInfo?: ITriggerOrActionListParamsData\r\n}\r\n\r\nfunction dispatchEditEvent<T>(editType: EditType, event: IProjectEditEvent<T>) {\r\n    // console.log('dispatchEditEvent', editType, event)\r\n    dispatcher.dispatch(editType, event)\r\n}\r\n\r\nfunction onEditJavaData<T>(event: IProjectEditEvent<T>) {\r\n    // console.log('on edit java data', event)\r\n    switch (event.projectMemberType) {\r\n        case ProjectMemberType.action:\r\n            onActionEdit(EditType.updateJavaData, event);\r\n            break;\r\n        case ProjectMemberType.trigger:\r\n            onTriggerEdit(EditType.updateJavaData, event);\r\n            break;\r\n        default: {\r\n            const msg = `on edit java data unknow event type ${event.projectMemberType}`\r\n            throwTraceError(msg, event)\r\n        }\r\n    }\r\n}\r\n\r\nfunction onTriggerEdit<T>(editType: EditType, event: IProjectEditEvent<T>) {\r\n    // console.log('on trigger edit', event)\r\n    const trigger = event.projectInfo?.trigger;\r\n    if (!trigger) {\r\n        const msg = `no trigger when edit trigger java data`\r\n        return throwTraceError(msg, event)\r\n    }\r\n    switch (editType) {\r\n        case EditType.updateJavaData:\r\n            // console.log('before merge', trigger.javaData)\r\n            _.merge(trigger.javaData, event.data);\r\n            // console.log('after merge', trigger.javaData)\r\n            break;\r\n        case EditType.updateShellData:\r\n            _.merge(trigger.shellData, event.data)\r\n            break;\r\n        default: {\r\n            const msg = `on trigger edit unknow event type ${event.editType}`\r\n            throwTraceError(msg, event)\r\n        }\r\n    }\r\n}\r\nfunction onActionEdit<T>(editType: EditType, event: IProjectEditEvent<T>) {\r\n    console.log('on action edit', event)\r\n    const action = event.projectInfo?.action;\r\n    if (!action) {\r\n        const msg = `no action when edit action java data`\r\n        return throwTraceError(msg, event)\r\n    }\r\n    switch (editType) {\r\n        case EditType.updateJavaData:\r\n            console.log('before merge', JSON.parse(JSON.stringify(action.javaData)))\r\n            _.merge(action.javaData, event.data);\r\n            console.log('after merge', JSON.parse(JSON.stringify(action.javaData)))\r\n            break;\r\n        case EditType.updateShellData:\r\n            _.merge(action.shellData, event.data)\r\n            break;\r\n        default: {\r\n            const msg = `on action edit unknow event type ${event.editType}`\r\n            throwTraceError(msg, event)\r\n        }\r\n    }\r\n}\r\nfunction onAdd<T>(event: IProjectEditEvent<T>) {\r\n    switch (event.projectMemberType) {\r\n        case ProjectMemberType.actionGroup:\r\n            onActionGroupAdd(event);\r\n            break;\r\n        case ProjectMemberType.triggerGroup:\r\n            onTriggerGroupAdd(event);\r\n            break;\r\n\r\n    }\r\n}\r\nfunction onTriggerGroupAdd<T>(event: IProjectEditEvent<T>) {\r\n    const group = event.projectInfo?.triggerGroup\r\n    if (!group) {\r\n        const msg = `no trigger group when edit action group add`\r\n        return throwTraceError(msg, event)\r\n    }\r\n    group.list.push(event.data as ITriggerData<any, any>)\r\n}\r\nfunction onActionGroupAdd<T>(event: IProjectEditEvent<T>) {\r\n    const group = event.projectInfo?.actionGroup\r\n    if (!group) {\r\n        const msg = `no action group when edit action group add`\r\n        return throwTraceError(msg, event)\r\n    }\r\n    group.list.push(event.data as IActionData<any, any>)\r\n}\r\nfunction init() {\r\n    dispatcher.addListener(EditType.updateJavaData, onEditJavaData)\r\n    dispatcher.addListener(EditType.add, onAdd)\r\n}\r\nexport const projectEventUtils = {\r\n    init,\r\n    dispatcher,\r\n    dispatchEditEvent,\r\n    EditType,\r\n}\r\n","\r\nexport function throwTraceError(msg:string, ...rest:any[]){\r\n    console.error(msg, rest);\r\n    console.trace(msg);\r\n    throw new Error(msg);\r\n}","import { actionsNamespace } from \"../actions-namespace\"\r\n\r\nexport const appNamespace = `${actionsNamespace}app/`","\r\nexport enum ProjectMemberType{\r\n    project = \"project\",\r\n    trigger = \"trigger\",\r\n    action = \"action\",\r\n    shellData = \"shellData\",\r\n    javaData = \"javaData\",\r\n    triggerAction = \"triggerAction\",\r\n    actionGroup = \"actionGroup\",\r\n    triggerGroup = \"triggerGroup\",\r\n    triggerActionGroup = \"triggerActionGroup\",\r\n    checks = \"GroupCheckList1\",\r\n    \r\n}","import { INameIDData } from \"../common/INameIDData.intf\";\r\nimport { IPermissionData } from \"../permission\";\r\nimport { createMergeToDefaultData, mergeDataWith } from \"../utils/mergeToDefaultData\";\r\nimport { IActionGroup } from \"./IActionGroup.intf\";\r\nimport { projectEventUtils } from \"../events/projectEventUtils\";\r\nimport { IActionOrTriggerListPageParams } from \"@app/static\";\r\n// 静态数据放这里\r\nexport interface IActionJavaData {\r\n    //com.fanfanlo.droidlib.auto.command.a11y.action.ActionA11yNode2\r\n    // readonly type: string\r\n    // // action数据库中的id，现在用ulid生成\r\n    // id:string\r\n}\r\n// 动态参数放这里\r\nexport interface IActionShellData {\r\n}\r\n\r\nexport interface IActionData<T extends IActionShellData, U extends IActionJavaData> extends INameIDData<T, U>{\r\n    //com.fanfanlo.droidlib.auto.command.a11y.action.ActionA11yNode2\r\n    readonly type: string\r\n    // action数据库中的id，现在用ulid生成\r\n    id:string\r\n    permissions?:IPermissionData[]\r\n    // shellData?:T\r\n    javaData:U\r\n}\r\n\r\nexport interface IOnChangeActionJavaDataProps{\r\n    query:IActionOrTriggerListPageParams,\r\n    // 采用projectEventUtils.dispatchEditEvent的目的是能够在页面刷新后依然能通过url数据更新javaData，但是如果使用注入函数的方法就做不到这点了，所以这个参数当前分析是不要用，以后如果要启用，需要先考虑一下上面用projectEventUtils.dispatchEditEvent的优点是否能被替代才行。\r\n    // 但是现在也面临修改数据后，其它未被修改的数据会需要重新初始化的问题，而projectEventUtils.dispatchEditEvent里是merge，并没有重新初始化其它数据的功能。\r\n    //再次论证。这个方法现在是刷新页面即丢失的，并不是能够通过url来更新数据的。所以似乎可以启用这个方法\r\n    // onJavaDataChangeDataSelect?:(data:any)=>void\r\n    //尝试考虑用这个方式来替代上面注入函数的修改方式。\r\n    //查找到action后，用action proxy的dispatcher派发事件来更新数据\r\n    onDataSelectedEventType?:string\r\n}\r\nexport interface IActionUtils<T extends IActionData<IActionShellData, IActionJavaData>>{\r\n    type:string\r\n    init:()=>void\r\n    mergeDataToDefultData:(data:Partial<T>)=>T\r\n    createDefultData:()=>T\r\n    create:(actionGroup:IActionGroup, data?:Partial<T>)=>void\r\n    update(action:T, data?:Partial<T>):void\r\n    UI:(data:T)=>React.ReactNode\r\n    //点击更改按钮后调用不是page页面的时候需要，例如更改返回首页.\r\n    onClickChange?:(data:IOnChangeActionJavaDataProps, ...rest:any[])=>void\r\n}\r\n\r\nexport interface IActionUtilsMap{\r\n    [key:string]:IActionUtils<any>\r\n}\r\n\r\nexport const ActionUtilsMap:IActionUtilsMap = {}\r\n\r\nexport function registerActionUtils(key:string,utils:IActionUtils<any>){\r\n    if(key in ActionUtilsMap){\r\n        throw new Error(`ActionUtilsMap already has key: ${key}`)\r\n    }\r\n    // console.log('registerActionUtils', key, utils)\r\n    ActionUtilsMap[key] = utils\r\n}\r\n\r\nexport function getActionUtils<T extends IActionData<IActionShellData, IActionJavaData>>(key:string):IActionUtils<T>{\r\n    return ActionUtilsMap[key]\r\n}\r\n\r\nexport function createActionUtils<T extends IActionData<IActionShellData, IActionJavaData>>(type:string, init:()=>void, createDefultData:()=>T, UI:(data:T)=>React.ReactNode):IActionUtils<T>{\r\n    const res = {\r\n        type,\r\n        mergeDataToDefultData:createMergeToDefaultData(createDefultData),\r\n        createDefultData,\r\n        create:(actionGroup:IActionGroup, data?:Partial<T>)=>{\r\n            const action = createDefultData()\r\n            actionGroup.list.push(action)\r\n        },\r\n        update:(action:T, data?:Partial<T>)=>{\r\n            mergeDataWith(action, data)\r\n        },\r\n        UI,\r\n        init,\r\n    }\r\n    registerActionUtils(type,res)\r\n    return res\r\n}\r\n\r\n \r\n","import { IActionOrTriggerListPageParams } from \"@app/static\"\r\n\r\nimport { ParsedUrlQueryInput } from \"querystring\"\r\nimport { IActionGroup, IActionData } from \"../action\"\r\nimport { IProjectData } from \"../project\"\r\nimport { projectStore } from \"../storage\"\r\nimport { ITriggerGroup, ITriggerData } from \"../trigger\"\r\nimport { ITriggerActionGroup, ITriggerAction } from \"../trigger-action\"\r\nexport enum ActionListFromEnum {\r\n    project = 'project',\r\n}\r\nexport enum TriggerOrActionListTypeEnum {\r\n    addAction = 'add',\r\n    updateAction = 'update',\r\n}\r\nexport interface ITriggerOrActionListPageParams extends ParsedUrlQueryInput{\r\n    // 如果actionType是addAction，则target是taskData的id\r\n    // 如果actionType是updateAction，则target是actionData的id\r\n    // target: string\r\n    // 动作列表里选择动作后要返回的路径\r\n    backPath?: string\r\n    // 本次操作的类型\r\n    type: TriggerOrActionListTypeEnum\r\n    projectId:string\r\n    triggerActionGroupId:string\r\n    triggerActionId:string\r\n    actionGroupId:string\r\n    // 如果是更新，则必须有actionId\r\n    actionId?:string\r\n    // 如果是添加，则必须有actionType\r\n    // actionType为namespace/openApp这种样子的，这样能够从actionMap里找到这个action来进行添加\r\n    // 这个需要在动作列表里选择了具体的action之后才能知道，所以在传递过程中这个可以为空，在pages/action-list/index.tsx里会根据actionId来找到具体的actionType\r\n    actionType:string\r\n    // 处理函数名，在map里\r\n    // handlerFnName:string\r\n}\r\nexport interface ITriggerOrActionListParamsData{\r\n    project?:IProjectData\r\n    triggerActionGroup?:ITriggerActionGroup\r\n    triggerAction?:ITriggerAction\r\n    actionGroup?:IActionGroup\r\n    triggerGroup?:ITriggerGroup\r\n    action?:IActionData<any,any>\r\n    trigger?:ITriggerData<any,any>\r\n}\r\nexport interface ITriggerOrActionListPageParsedResult{\r\n    params:IActionOrTriggerListPageParams\r\n    data:ITriggerOrActionListParamsData\r\n}\r\nexport function getTriggerOrActionListPageParams(params:IActionOrTriggerListPageParams):ITriggerOrActionListPageParsedResult{\r\n    const project = projectStore.findDraftOrSavedProject(params.projectId)\r\n    const data:ITriggerOrActionListParamsData = {}\r\n    const res = {data, params}\r\n    if(!project)return res\r\n    data.project = project\r\n    if(project.triggerActionGroup.id !== params.triggerActionGroupId)return res\r\n    data.triggerActionGroup = project.triggerActionGroup\r\n    if(!params.triggerActionId)return res\r\n    const triggerAction = data.triggerActionGroup.list.find(item=>item.id === params.triggerActionId)\r\n    if(!triggerAction)return res\r\n    data.triggerAction = triggerAction\r\n    parseAction(data, params, triggerAction)\r\n    parseTrigger(data, params, triggerAction)\r\n    return res\r\n    \r\n}\r\n\r\nfunction parseAction(data:ITriggerOrActionListParamsData, params:IActionOrTriggerListPageParams, triggerAction:ITriggerAction){\r\n    if(!params.actionGroupId || !triggerAction.actionGroup || params.actionGroupId != triggerAction.actionGroup.id)return\r\n    data.actionGroup = triggerAction.actionGroup\r\n    const action = triggerAction.actionGroup.list.find(item=>item.id === params.actionId)\r\n    if(!action)return\r\n    data.action = action\r\n}\r\n\r\nfunction parseTrigger(data:ITriggerOrActionListParamsData, params:IActionOrTriggerListPageParams, triggerAction:ITriggerAction){\r\n    if(!params.triggerGroupId || !triggerAction.triggerGroup || params.triggerGroupId != triggerAction.triggerGroup.id)return\r\n    data.triggerGroup = triggerAction.triggerGroup\r\n    const trigger = triggerAction.triggerGroup.list.find(item=>item.id === params.triggerId)\r\n    if(!trigger)return\r\n    data.trigger = trigger\r\n}\r\n\r\n","\r\n\r\nexport * from './storage'\r\nexport * from './components'\r\nexport * from './pages'\r\nexport * from './mc'\r\nexport * from './utils'","import { toProxy } from '@fanfanlo'\r\nimport _ from 'lodash'\r\nimport {storeUtils} from '@fanfanlo'\r\nexport interface IPackageInfo{\r\n    label:string\r\n    iconBase64:string\r\n    packageName:string\r\n}\r\nconst s = storeUtils.namespace('app-packages')\r\n// s.clear()\r\ninterface IData{\r\n    list:IPackageInfo[]\r\n}\r\nconst data = toProxy<IData>({list:[]})\r\nloadPackages()\r\nfunction loadPackages(){\r\n    const list = (s.read('list') || []) as IPackageInfo[]\r\n    data.list = _.isArray(list) ? list : []\r\n}\r\n\r\nfunction releasePackages(){\r\n    data.list = []\r\n}\r\n\r\nfunction savePackages(list:IPackageInfo[]){\r\n    s.write('list', list)\r\n    data.list = list\r\n}\r\n\r\nfunction findPackageInfoByPackageName(packageName:string){\r\n    return data.list.find(item=>item.packageName === packageName)\r\n}\r\nexport const appPackagesStore = {\r\n    data,\r\n    loadPackages,\r\n    releasePackages,\r\n    savePackages,\r\n    findPackageInfoByPackageName\r\n}","import { projectNamespace } from \"../core/namespace\"\r\n\r\nexport const actionsNamespace = `${projectNamespace}actions/`\r\n","import { Dispatcher } from \"@fanfanlo\"\r\nimport { DispatcherUnsubscribe } from \"@fanfanlo\"\r\n\r\nconst dipsatcher = new Dispatcher()\r\ninterface IStaticModel{\r\n    dipsatcher:Dispatcher\r\n    screenLockCount:number\r\n    switchPage:()=>void\r\n    listenSwitchPage:(callback:()=>void)=>DispatcherUnsubscribe \r\n}\r\nexport const staticModel:IStaticModel = {\r\n    dipsatcher,\r\n    screenLockCount:0,\r\n    switchPage:async()=>{\r\n        dipsatcher.dispatch(\"switchPage\")\r\n        staticModel.screenLockCount = 0\r\n    },\r\n    listenSwitchPage:(callback:()=>void)=>{\r\n        return dipsatcher.addListener(\"switchPage\",callback)\r\n    }\r\n}   \r\n","import { PropsWithChildren } from \"react\";\r\nimport { AnimatePresence, motion } from \"framer-motion\";\r\nimport { useRouter } from \"next/router\";\r\n\r\n\r\nexport function PageTransition({ children }: PropsWithChildren) {\r\n    const router = useRouter()\r\n    return (\r\n\r\n        <AnimatePresence mode=\"sync\">\r\n            <motion.div\r\n                key={router.route}\r\n                initial={{ opacity: 0, y: 10 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                exit={{ opacity: 0, y: -110 }}\r\n                transition={{ duration: 0.3 }}\r\n            >\r\n                {children}\r\n            </motion.div>\r\n        </AnimatePresence>\r\n    )\r\n}","import { staticModel } from \"@app/static\";\r\nimport { Box } from \"@mui/material\";\r\nimport { useEffect } from \"react\";\r\nimport { PageTransition } from \"../motion\";\r\nlet idCount = 0\r\nexport function PageShell({children}:{children:React.ReactNode}){\r\n    const id = `app-shell-${idCount++}`\r\n    useEffect(()=>{\r\n        const box = document.querySelector(`#${id}`)\r\n        const unlisten = staticModel.listenSwitchPage(()=>{\r\n            if(!box)return\r\n        })\r\n        if(!box)return\r\n        box.addEventListener(\"click\",(e)=>{\r\n            if(staticModel.screenLockCount == 0)return\r\n            e.stopPropagation()\r\n            e.preventDefault()\r\n        })\r\n        return ()=>{\r\n            unlisten()\r\n        }\r\n    },[])\r\n    return (\r\n        <Box id={id}>\r\n            <PageTransition>\r\n                {children}  \r\n            </PageTransition>\r\n        </Box>\r\n    )\r\n}\r\n","import { AppBar, Box, Container, CssBaseline, Fab, Fade, Slide, Toolbar, Typography, useScrollTrigger } from \"@mui/material\";\r\nimport { PropsWithChildren, ReactNode } from \"react\";\r\n// import {AndroidPageContent} from \"../../\";\r\nimport { browserHistoryUtils, IDispatcher } from \"@fanfanlo\";\r\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\r\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\r\nimport * as React from \"react\";\r\nimport { useRouter } from \"next/router\";\r\nimport { PageShell } from \"../app/PageShell\";\r\nimport shadows from \"@mui/material/styles/shadows\";\r\nimport AndroidPageContent from \"../page/AndroidPageContent\";\r\nimport { IAppBarBackAskEvent } from \"@app/static\";\r\nimport { ITitleI18nConf } from \"../page\";\r\ninterface Props {\r\n    /**\r\n     * Injected by the documentation to work in an iframe.\r\n     * You won't need it on your project.\r\n     */\r\n    window?: () => Window;\r\n    children?: React.ReactElement<unknown>;\r\n}\r\n\r\nfunction HideOnScroll(props: Props) {\r\n    const { children, window } = props;\r\n    // Note that you normally won't need to set the window ref as useScrollTrigger\r\n    // will default to window.\r\n    // This is only being set here because the demo is in an iframe.\r\n    const trigger = useScrollTrigger({\r\n        target: window ? window() : undefined,\r\n    });\r\n\r\n    return (\r\n        <Slide appear={false} direction=\"down\" in={!trigger}>\r\n            {children ?? <div />}\r\n        </Slide>\r\n    );\r\n}\r\nexport interface IAppbarProps extends PropsWithChildren {\r\n    title: ReactNode\r\n    back: boolean\r\n    backHandler?: () => boolean\r\n    backDispatcher?:IDispatcher\r\n    toolbar?:ReactNode\r\n    toolbarContent?:ReactNode\r\n}\r\nexport function Appbar({ title }: { title: ReactNode } & PropsWithChildren) {\r\n    return (\r\n\r\n        <AppBar color={\"inherit\"}>\r\n            <Toolbar>\r\n                <Typography variant=\"h6\" component=\"div\">\r\n                    {title}\r\n                </Typography>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\ninterface IAppbarContainerProps extends PropsWithChildren {\r\n    appbarProps: IAppbarProps\r\n    titleConf?:ITitleI18nConf\r\n    reload?: boolean\r\n}\r\n\r\n// export interface IAppBarBackAskEvent{\r\n//     defaultPrevented:boolean\r\n// }\r\n\r\nfunction ScrollTop(props: Props) {\r\n    const { children, window } = props;\r\n    // Note that you normally won't need to set the window ref as useScrollTrigger\r\n    // will default to window.\r\n    // This is only being set here because the demo is in an iframe.\r\n    const trigger = useScrollTrigger({\r\n        target: window ? window() : undefined,\r\n        disableHysteresis: true,\r\n        threshold: 100,\r\n    });\r\n\r\n    const handleClick = (event: React.MouseEvent<HTMLDivElement>) => {\r\n        const anchor = (\r\n            (event.target as HTMLDivElement).ownerDocument || document\r\n        ).querySelector('#back-to-top-anchor');\r\n\r\n        if (anchor) {\r\n            anchor.scrollIntoView({\r\n                block: 'center',\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Fade in={trigger}>\r\n            <Box data-id=\"content-scroll-top-button\"\r\n                onClick={handleClick}\r\n                role=\"presentation\"\r\n                sx={{ position: 'fixed', bottom: 16, right: 16 }}\r\n            >\r\n                {children}\r\n            </Box>\r\n        </Fade>\r\n    );\r\n}\r\nexport function AppbarContainer(props: IAppbarContainerProps) {\r\n    const { children, appbarProps, titleConf, reload } = props;\r\n    const router = useRouter()\r\n    function handleBack(){\r\n        // 本想抽象成底层一个方法，但是考虑了一下router需要注入或者是一个callback，似乎像现在这样判断一下event也可以。回头继续观察一下吧。\r\n        const event = browserHistoryUtils.askHistoryBack()\r\n        if(event.defaultPrevented)return\r\n        if(appbarProps.backDispatcher){\r\n            const e:IAppBarBackAskEvent = {defaultPrevented:false}\r\n            appbarProps.backDispatcher.dispatch('back',e)\r\n            if(e.defaultPrevented)return\r\n        }\r\n        router.back()\r\n    }\r\n    return (\r\n        <PageShell>\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n            <HideOnScroll {...props}>\r\n                <AppBar color=\"inherit\">\r\n                    {appbarProps.toolbar ? \r\n                    appbarProps.toolbar:\r\n                    <Toolbar>\r\n                        <KeyboardArrowLeft onClick={handleBack} />\r\n                        {appbarProps.title}\r\n                    </Toolbar>\r\n                    }\r\n                </AppBar>\r\n            </HideOnScroll>\r\n            <Toolbar id=\"back-to-top-anchor\" />\r\n            <Container sx={{padding:\"0\", marginTop:\"17px\"}}>\r\n                <AndroidPageContent titleConf={titleConf} reload={reload}>\r\n                    {children}\r\n                </AndroidPageContent>\r\n            </Container>\r\n\r\n            <ScrollTop {...props}>\r\n                <Fab size=\"small\" aria-label=\"scroll back to top\">\r\n                    <KeyboardArrowUpIcon />\r\n                </Fab>\r\n            </ScrollTop>\r\n        </React.Fragment>\r\n        </PageShell>\r\n    );\r\n}\r\n","export * from './app-selector-intf'\r\n","\r\nexport * from './app-selector'\r\n\r\n","import { useRouter } from \"next/router\";\r\nimport { ParsedUrlQueryInput } from \"querystring\";\r\n\r\nexport function x(){\r\n    \r\n}\r\nexport enum ActionOrTriggerListFromEnum {\r\n    project = 'project'\r\n}\r\nexport enum ActionOrTriggerListTypeEnum {\r\n    addAction = 'add',\r\n    updateAction = 'update'\r\n}\r\nexport interface IActionOrTriggerListPageParams extends ParsedUrlQueryInput {\r\n    // 如果actionType是addAction，则target是taskData的id\r\n    // 如果actionType是updateAction，则target是actionData的id\r\n    // target: string\r\n    // 动作列表里选择动作后要返回的路径\r\n    backPath?: string\r\n    // 本次操作的类型\r\n    type: ActionOrTriggerListTypeEnum\r\n    projectId: string\r\n    triggerActionGroupId: string\r\n    triggerActionId: string\r\n    triggerGroupId?:string\r\n    actionGroupId?: string\r\n    // 如果是更新，则必须有actionId\r\n    actionId?: string\r\n    // 如果是添加，则必须有actionType\r\n    // actionType为namespace/openApp这种样子的，这样能够从actionMap里找到这个action来进行添加\r\n    // 这个需要在动作列表里选择了具体的action之后才能知道，所以在传递过程中这个可以为空，在pages/action-list/index.tsx里会根据actionId来找到具体的actionType\r\n    actionType?: string\r\n\r\n    triggerId?:string\r\n    triggerType?:string\r\n}\r\n\r\n","export * from './common'","export * from './action-list'\r\nexport * from './trigger-list'\r\nexport * from './trigger-list-action-list-common'\r\n","import { NextRouter } from \"next/router\";\r\n\r\nasync function checkToPath(router:NextRouter, expectNowPath:string, pointPath:string, backCount:number){\r\n    const nowPath = router.pathname\r\n    console.log('nowpath=', nowPath);\r\n    console.log('expectNowPath=', expectNowPath)\r\n    console.log('pointPath=', pointPath)\r\n    if(nowPath === pointPath){\r\n        return\r\n    }\r\n    if(expectNowPath !== nowPath){\r\n        router.replace(pointPath)\r\n    }\r\n    while(backCount > 0){\r\n        router.back()\r\n        backCount--\r\n    }\r\n    if(router.pathname !== pointPath && pointPath){\r\n        router.push(pointPath)\r\n    }\r\n}\r\n\r\n\r\nexport const routerUtils = {\r\n    checkToPath\r\n}","import { appPackagesStore } from \"@app/static\"\r\n\r\nexport function AppIcon30({packageName}: {packageName:string}){\r\n    const packageInfo = appPackagesStore.findPackageInfoByPackageName(packageName)\r\n    const image = packageInfo?.iconBase64 ? `data:image/gif;base64,${packageInfo.iconBase64}` : ''\r\n    return <img src={image} width={30}\r\n    style={{ borderRadius: '8px' }}\r\n    />\r\n}\r\n","import { ActionOrTriggerListTypeEnum, appPackagesStore, IActionOrTriggerListPageParams } from \"@app/static/\"\r\nimport { AppIcon30 } from '@app/ui'\r\nimport { toProxy } from \"@fanfanlo\"\r\nimport { Box, Button, Grid2, Typography } from \"@mui/material\"\r\nimport { useRouter } from \"next/router\"\r\nimport { PropsWithChildren, useEffect } from \"react\"\r\nimport { childToProjectDataUtils, IChildToProjectData } from \"../../../utils\"\r\nimport { actionOpenAppUtils, IActionOpenAppData } from \"./IActionOpenApp.inft\"\r\n\r\nfunction UpdateAppLink({data, children}: {data: IActionOpenAppData}&PropsWithChildren){\r\n    const projectInfo:IChildToProjectData = {}\r\n    childToProjectDataUtils.actionList.getActionListByProp(data, projectInfo)\r\n    if(!projectInfo.project?.id || !projectInfo.triggerActionGroup?.id || !projectInfo.triggerAction?.id || !projectInfo.actionGroup?.id){\r\n        console.error('UpdateAppLink projectInfo is undefined', projectInfo)\r\n        return\r\n    }\r\n    const router = useRouter()\r\n    const backPath = router.pathname\r\n    const query:IActionOrTriggerListPageParams = {\r\n        backPath,\r\n        projectId: projectInfo.project?.id,\r\n        triggerActionGroupId: projectInfo.triggerActionGroup?.id,\r\n        triggerActionId: projectInfo.triggerAction?.id,\r\n        actionGroupId: projectInfo.actionGroup?.id,\r\n        type: ActionOrTriggerListTypeEnum.updateAction,\r\n        actionId: data.id,\r\n        actionType: actionOpenAppUtils.type,\r\n    }\r\n    \r\n    const param = new URLSearchParams([...Object.entries(query) as [string, string][]])\r\n    const p = `/action-list/app-selector?${param.toString()}`\r\n    useEffect(()=>{\r\n        router.prefetch(p)\r\n        // console.log('ppppppppprefectech', p)\r\n    }, [])\r\n    function onLinkClick(){\r\n        router.push(p)\r\n    }\r\n    return <Button\r\n    id=\"open-app-action-change-app-btn\"\r\n    data-id=\"open-app-action-change-app-btn\"\r\n    onClick={onLinkClick}>\r\n        {children}\r\n    </Button>\r\n}\r\nexport function IActionOpenAppUI(data: IActionOpenAppData) {\r\n    const packageInfo = appPackagesStore.findPackageInfoByPackageName(data.javaData.packageName)\r\n\r\n    function onDeleteComfirmed(){\r\n        const projectData:IChildToProjectData = {} \r\n        childToProjectDataUtils.actionList.getActionListByProp(data, projectData)\r\n        const list = projectData.actionList\r\n        if(!list){\r\n            throw new Error('actionList is undefined')\r\n        }\r\n        const index = list.findIndex(a => a.id === data.id)\r\n        if(index === -1){\r\n            throw new Error('action not found')\r\n        }\r\n        toProxy(list).splice(index, 1)\r\n    }\r\n    return <Box sx={{ width: '100%' }}>\r\n        <Box>\r\n            <b>打开应用</b>\r\n        </Box>\r\n        <Grid2 container sx={{ width: '100%' }}>\r\n            <Grid2 size=\"grow\" container>\r\n                <Grid2>\r\n                    <AppIcon30 packageName={data.javaData.packageName} />\r\n                </Grid2>\r\n                <Grid2>\r\n                    <Typography sx={{}}>\r\n                        <span style={{display:\"inline-block\", textIndent: \"10px\" }}>{packageInfo?.label}</span>\r\n                        <span style={{ display:\"inline-block\", textIndent: \"10px\", fontSize: \"0.8rem\" }}>{packageInfo?.packageName}</span>\r\n                    </Typography>\r\n                </Grid2>\r\n            </Grid2>\r\n            <Grid2 size={\"auto\"}>\r\n                <UpdateAppLink data={data}>\r\n                    <span>更换</span>\r\n                </UpdateAppLink>\r\n               \r\n            </Grid2>\r\n        </Grid2>\r\n    </Box>\r\n}","import { ActionOrTriggerListTypeEnum, IActionOrTriggerListPageParams } from \"@app/static\";\r\nimport Link from \"next/link\";\r\nimport { useRouter } from \"next/router\";\r\nimport { PropsWithChildren } from \"react\";\r\nimport { ulid } from \"ulid\";\r\nimport { createActionUtils, IActionData, IActionJavaData, IActionShellData } from \"../../../action\";\r\nimport { childToProjectDataUtils, IChildToProjectData } from \"../../../utils\";\r\nimport { appNamespace } from \"../app-namespace\";\r\nimport { IActionOpenAppUI } from \"./IActionOpenApp.UI\";\r\nconst type = `${appNamespace}openApp`\r\n\r\n\r\nexport interface IActionOpenAppJavaData extends IActionJavaData {\r\n    packageName: string\r\n}\r\n\r\nexport interface IActionOpenAppData extends IActionData<IActionShellData, IActionOpenAppJavaData> { \r\n    javaData: IActionOpenAppJavaData\r\n}\r\n\r\nfunction createDefultData(): IActionOpenAppData {\r\n    return {\r\n        id: ulid(),\r\n        type,\r\n        javaData: {\r\n            packageName: ''\r\n        }\r\n    }\r\n}\r\n\r\n// function UpdateAppLink({data, children}: {data: IActionOpenAppData}&PropsWithChildren){\r\n//     const packageName = data.javaData.packageName\r\n//     data.javaData\r\n//     console.log('packagename=', packageName)\r\n//     const projectInfo:IChildToProjectData = {}\r\n//     childToProjectDataUtils.actionList.getActionListByProp(data, projectInfo)\r\n//     if(!projectInfo.project?.id || !projectInfo.triggerActionGroup?.id || !projectInfo.triggerAction?.id || !projectInfo.actionGroup?.id){\r\n//         console.error('UpdateAppLink projectInfo is undefined', projectInfo)\r\n//         return\r\n//     }\r\n//     const router = useRouter()\r\n//     const backPath = router.pathname\r\n//     const query:IActionOrTriggerListPageParams = {\r\n//         backPath,\r\n//         projectId: projectInfo.project?.id,\r\n//         triggerActionGroupId: projectInfo.triggerActionGroup?.id,\r\n//         triggerActionId: projectInfo.triggerAction?.id,\r\n//         actionGroupId: projectInfo.actionGroup?.id,\r\n//         type: ActionOrTriggerListTypeEnum.updateAction,\r\n//         actionId: data.id,\r\n//         actionType: type,\r\n//     }\r\n//     return <Link href={{pathname: '/action-list/app-selector', query}}>\r\n//         {children}\r\n//     </Link>\r\n// }\r\nfunction init(){\r\n}\r\nexport const actionOpenAppUtils = createActionUtils(type, init, createDefultData, IActionOpenAppUI)\r\n\r\n\r\n","export const projectNamespace = \"fanfanlo/\"\r\n","\r\nexport * from './appbar/IAppBar.intf'\r\n\r\n"],"names":["Dispatcher","throwTraceError","ProjectMemberType","_","dispatcher","EditType","dispatchEditEvent","editType","event","dispatch","onEditJavaData","projectMemberType","action","onActionEdit","trigger","onTriggerEdit","msg","projectInfo","merge","javaData","data","shellData","console","log","JSON","parse","stringify","onAdd","actionGroup","onActionGroupAdd","triggerGroup","onTriggerGroupAdd","group","list","push","init","addListener","projectEventUtils","actionsNamespace","appNamespace","createMergeToDefaultData","mergeDataWith","ActionUtilsMap","registerActionUtils","key","utils","Error","getActionUtils","createActionUtils","type","createDefultData","UI","res","mergeDataToDefultData","create","update","projectStore","ActionListFromEnum","TriggerOrActionListTypeEnum","getTriggerOrActionListPageParams","params","project","findDraftOrSavedProject","projectId","triggerActionGroup","id","triggerActionGroupId","triggerActionId","triggerAction","find","item","parseAction","parseTrigger","actionGroupId","actionId","triggerGroupId","triggerId","projectNamespace","ActionOrTriggerListFromEnum","ActionOrTriggerListTypeEnum","appPackagesStore","AppIcon30","toProxy","Box","Button","Grid2","Typography","useRouter","useEffect","childToProjectDataUtils","actionOpenAppUtils","UpdateAppLink","children","actionList","getActionListByProp","error","router","backPath","pathname","query","updateAction","actionType","param","URLSearchParams","Object","entries","p","toString","prefetch","onLinkClick","data-id","onClick","IActionOpenAppUI","packageInfo","findPackageInfoByPackageName","packageName","onDeleteComfirmed","projectData","index","findIndex","a","splice","sx","width","b","container","size","span","style","display","textIndent","label","fontSize","ulid"],"sourceRoot":"","ignoreList":[]}